{"ast":null,"code":"var _jsxFileName = \"/home/highdynamics/repos/dnd_app/src/components/dnd.js\";\nimport React, { useState, useContext, useEffect } from 'react';\nimport useSWR from 'swr';\nimport * as Navbar from './Navbars.js';\nimport BasicInfo from './BasicInfo.js';\nimport MainDisplay from './MainDisplay.js';\nimport './dnd.css';\nexport function rollDice(size, mod, use) {\n  const dice = Math.floor(Math.random() * size + 1);\n\n  function edgeRollClassAssignment(dice) {\n    if (dice === 1) {\n      return 'natOne';\n    } else if (dice === 20) {\n      return 'natTwenty';\n    } else {\n      return null;\n    }\n  }\n\n  const result = /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    id: \"rollUse\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 5\n    }\n  }, use), /*#__PURE__*/React.createElement(\"div\", {\n    id: \"rollTopLine\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    id: \"rollTotal\",\n    className: edgeRollClassAssignment(dice),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }\n  }, dice), \" \", /*#__PURE__*/React.createElement(\"span\", {\n    id: \"modTotal\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 84\n    }\n  }, \" + \", mod, \" =\")), /*#__PURE__*/React.createElement(\"p\", {\n    id: \"rollModTotal\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 5\n    }\n  }, dice + mod));\n  return result;\n}\nexport const ReadTossDice = React.createContext(null);\nexport const GetSetDisplay = React.createContext(null);\nexport const GetSetDisplayTwo = React.createContext(null);\nexport const ToggleInfo = React.createContext(null);\nexport const Selection = React.createContext(null);\nexport const Character = React.createContext(null);\nexport const PrimaryModifier = React.createContext(null);\n/******************************Character Info****************************/\n\nexport function abilityModifier(character, ability) {\n  if (character.abilities.score[ability] === '--') {\n    return '--';\n  }\n\n  return Math.floor((character.abilities.score[ability] - 10) / 2);\n}\nexport function totalSpells(character, primaryModifier, level, levelNum) {\n  function bonusSpellsPerDay(levelNum) {\n    return Math.ceil((primaryModifier - (levelNum - 1)) / 4);\n  }\n\n  return character.magic.spellsPerDay[level] + bonusSpellsPerDay(levelNum);\n}\n/******************************Character Info****************************/\n\nconst App = props => {\n  const [display, setDisplay] = useState('stats');\n  const [displayTwo, setDisplayTwo] = useState('Skills');\n  const [toggleInfo, setToggleInfo] = useState(false);\n  const [rollResult, setRollResult] = useState('Good luck,\\n' + props.character.name);\n  const [primaryModifier, setPrimaryModifier] = useState(abilityModifier(props.character, 'charisma'));\n  useEffect(function setDocTitle() {\n    document.title = props.character.name;\n  }, [props.character]);\n  return /*#__PURE__*/React.createElement(Character.Provider, {\n    value: props.character,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    id: \"appWrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    id: \"topWrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(ReadTossDice.Provider, {\n    value: [rollResult, setRollResult],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(BasicInfo, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(Navbar.PrimaryNavbar, {\n    display: display,\n    setDisplay: setDisplay,\n    setDisplayTwo: setDisplayTwo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(GetSetDisplayTwo.Provider, {\n    value: [displayTwo, setDisplayTwo],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Navbar.SecondaryNavbar, {\n    display: display,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 15\n    }\n  }))), /*#__PURE__*/React.createElement(GetSetDisplay.Provider, {\n    value: [display, setDisplay],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(GetSetDisplayTwo.Provider, {\n    value: [displayTwo, setDisplayTwo],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(ToggleInfo.Provider, {\n    value: [toggleInfo, setToggleInfo],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(ReadTossDice.Provider, {\n    value: [rollResult, setRollResult],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(PrimaryModifier.Provider, {\n    value: [primaryModifier, setPrimaryModifier],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(MainDisplay, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 19\n    }\n  })))))), /*#__PURE__*/React.createElement(\"div\", {\n    id: \"bottomSpacer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 11\n    }\n  }))));\n};\n\nconst LoadApp = () => {\n  // Load data from the characters server endpoint\n  const {\n    data\n  } = useSWR('/api/characters'); // Before the data is loaded, it will be `undefined`\n\n  return data ? /*#__PURE__*/React.createElement(App, {\n    character: data.characters[0],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 5\n    }\n  }) : /*#__PURE__*/React.createElement(React.Fragment, null, \"Loading...\");\n};\n\nexport default LoadApp;","map":{"version":3,"sources":["/home/highdynamics/repos/dnd_app/src/components/dnd.js"],"names":["React","useState","useContext","useEffect","useSWR","Navbar","BasicInfo","MainDisplay","rollDice","size","mod","use","dice","Math","floor","random","edgeRollClassAssignment","result","ReadTossDice","createContext","GetSetDisplay","GetSetDisplayTwo","ToggleInfo","Selection","Character","PrimaryModifier","abilityModifier","character","ability","abilities","score","totalSpells","primaryModifier","level","levelNum","bonusSpellsPerDay","ceil","magic","spellsPerDay","App","props","display","setDisplay","displayTwo","setDisplayTwo","toggleInfo","setToggleInfo","rollResult","setRollResult","name","setPrimaryModifier","setDocTitle","document","title","LoadApp","data","characters"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,UAA1B,EAAsCC,SAAtC,QAAuD,OAAvD;AACA,OAAOC,MAAP,MAAmB,KAAnB;AAEA,OAAO,KAAKC,MAAZ,MAAwB,cAAxB;AACA,OAAOC,SAAP,MAAsB,gBAAtB;AACA,OAAOC,WAAP,MAAwB,kBAAxB;AAEA,OAAO,WAAP;AAEA,OAAO,SAASC,QAAT,CAAkBC,IAAlB,EAAwBC,GAAxB,EAA6BC,GAA7B,EAAiC;AACtC,QAAMC,IAAI,GAAGC,IAAI,CAACC,KAAL,CAAYD,IAAI,CAACE,MAAL,KAAgBN,IAAjB,GAAwB,CAAnC,CAAb;;AACA,WAASO,uBAAT,CAAiCJ,IAAjC,EAAsC;AACpC,QAAGA,IAAI,KAAK,CAAZ,EAAc;AACZ,aAAO,QAAP;AACD,KAFD,MAEM,IAAGA,IAAI,KAAK,EAAZ,EAAe;AACnB,aAAO,WAAP;AACD,KAFK,MAED;AACH,aAAO,IAAP;AACD;AACF;;AACD,QAAMK,MAAM,gBACZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAM,IAAA,EAAE,EAAC,SAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAoBN,GAApB,CADF,eAEE;AAAK,IAAA,EAAE,EAAC,aAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAM,IAAA,EAAE,EAAC,WAAT;AAAqB,IAAA,SAAS,EAAEK,uBAAuB,CAACJ,IAAD,CAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAgEA,IAAhE,CADF,oBAC+E;AAAM,IAAA,EAAE,EAAC,UAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAwBF,GAAxB,OAD/E,CAFF,eAKE;AAAG,IAAA,EAAE,EAAC,cAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAsBE,IAAI,GAAGF,GAA7B,CALF,CADA;AAQA,SAAOO,MAAP;AACD;AACD,OAAO,MAAMC,YAAY,GAAGlB,KAAK,CAACmB,aAAN,CAAoB,IAApB,CAArB;AACP,OAAO,MAAMC,aAAa,GAAGpB,KAAK,CAACmB,aAAN,CAAoB,IAApB,CAAtB;AACP,OAAO,MAAME,gBAAgB,GAAGrB,KAAK,CAACmB,aAAN,CAAoB,IAApB,CAAzB;AACP,OAAO,MAAMG,UAAU,GAAGtB,KAAK,CAACmB,aAAN,CAAoB,IAApB,CAAnB;AACP,OAAO,MAAMI,SAAS,GAAGvB,KAAK,CAACmB,aAAN,CAAoB,IAApB,CAAlB;AACP,OAAO,MAAMK,SAAS,GAAGxB,KAAK,CAACmB,aAAN,CAAoB,IAApB,CAAlB;AACP,OAAO,MAAMM,eAAe,GAAGzB,KAAK,CAACmB,aAAN,CAAoB,IAApB,CAAxB;AACP;;AACA,OAAO,SAASO,eAAT,CAAyBC,SAAzB,EAAoCC,OAApC,EAA6C;AAClD,MAAGD,SAAS,CAACE,SAAV,CAAoBC,KAApB,CAA0BF,OAA1B,MAAuC,IAA1C,EAA+C;AAC7C,WAAO,IAAP;AACD;;AACD,SAAOf,IAAI,CAACC,KAAL,CAAW,CAACa,SAAS,CAACE,SAAV,CAAoBC,KAApB,CAA0BF,OAA1B,IAAqC,EAAtC,IAA4C,CAAvD,CAAP;AACD;AAED,OAAO,SAASG,WAAT,CAAqBJ,SAArB,EAAgCK,eAAhC,EAAiDC,KAAjD,EAAwDC,QAAxD,EAAkE;AACvE,WAASC,iBAAT,CAA2BD,QAA3B,EAAoC;AAClC,WAAOrB,IAAI,CAACuB,IAAL,CAAU,CAACJ,eAAe,IAAIE,QAAQ,GAAG,CAAf,CAAhB,IAAqC,CAA/C,CAAP;AACD;;AACD,SAAOP,SAAS,CAACU,KAAV,CAAgBC,YAAhB,CAA6BL,KAA7B,IAAsCE,iBAAiB,CAACD,QAAD,CAA9D;AACD;AAED;;AACA,MAAMK,GAAG,GAAIC,KAAD,IAAW;AACrB,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBzC,QAAQ,CAAC,OAAD,CAAtC;AACA,QAAM,CAAC0C,UAAD,EAAaC,aAAb,IAA8B3C,QAAQ,CAAC,QAAD,CAA5C;AACA,QAAM,CAAC4C,UAAD,EAAaC,aAAb,IAA8B7C,QAAQ,CAAC,KAAD,CAA5C;AACA,QAAM,CAAC8C,UAAD,EAAaC,aAAb,IAA8B/C,QAAQ,CAAC,iBAAiBuC,KAAK,CAACb,SAAN,CAAgBsB,IAAlC,CAA5C;AACA,QAAM,CAACjB,eAAD,EAAkBkB,kBAAlB,IAAwCjD,QAAQ,CAACyB,eAAe,CAACc,KAAK,CAACb,SAAP,EAAkB,UAAlB,CAAhB,CAAtD;AACAxB,EAAAA,SAAS,CAAC,SAASgD,WAAT,GAAuB;AAC/BC,IAAAA,QAAQ,CAACC,KAAT,GAAiBb,KAAK,CAACb,SAAN,CAAgBsB,IAAjC;AACD,GAFQ,EAEN,CAACT,KAAK,CAACb,SAAP,CAFM,CAAT;AAGA,sBACE,oBAAC,SAAD,CAAW,QAAX;AAAoB,IAAA,KAAK,EAAEa,KAAK,CAACb,SAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEE;AAAK,IAAA,EAAE,EAAC,YAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,EAAE,EAAC,YAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,YAAD,CAAc,QAAd;AAAuB,IAAA,KAAK,EAAE,CAACoB,UAAD,EAAaC,aAAb,CAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,eAIE,oBAAC,MAAD,CAAQ,aAAR;AAAsB,IAAA,OAAO,EAAEP,OAA/B;AAAwC,IAAA,UAAU,EAAEC,UAApD;AAAgE,IAAA,aAAa,EAAEE,aAA/E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,eAKE,oBAAC,gBAAD,CAAkB,QAAlB;AAA2B,IAAA,KAAK,EAAE,CAACD,UAAD,EAAaC,aAAb,CAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD,CAAQ,eAAR;AAAwB,IAAA,OAAO,EAAEH,OAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CALF,CADF,eAUE,oBAAC,aAAD,CAAe,QAAf;AAAwB,IAAA,KAAK,EAAE,CAACA,OAAD,EAAUC,UAAV,CAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA,oBAAC,gBAAD,CAAkB,QAAlB;AAA2B,IAAA,KAAK,EAAE,CAACC,UAAD,EAAaC,aAAb,CAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,UAAD,CAAY,QAAZ;AAAqB,IAAA,KAAK,EAAE,CAACC,UAAD,EAAaC,aAAb,CAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,YAAD,CAAc,QAAd;AAAuB,IAAA,KAAK,EAAE,CAACC,UAAD,EAAaC,aAAb,CAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,eAAD,CAAiB,QAAjB;AAA0B,IAAA,KAAK,EAAE,CAAChB,eAAD,EAAkBkB,kBAAlB,CAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,CADF,CADF,CADA,CAVF,eAqBE;AAAK,IAAA,EAAE,EAAC,cAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IArBF,CADF,CAFF,CADF;AA8BD,CAvCD;;AAyCA,MAAMI,OAAO,GAAG,MAAM;AACpB;AACA,QAAM;AAACC,IAAAA;AAAD,MAASnD,MAAM,CAAC,iBAAD,CAArB,CAFoB,CAIpB;;AACA,SAAOmD,IAAI,gBACT,oBAAC,GAAD;AAAK,IAAA,SAAS,EAAEA,IAAI,CAACC,UAAL,CAAgB,CAAhB,CAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADS,gBAEP,uDAFJ;AAGD,CARD;;AAUA,eAAeF,OAAf","sourcesContent":["import React, { useState, useContext, useEffect } from 'react';\nimport useSWR from 'swr';\n\nimport * as Navbar from './Navbars.js'\nimport BasicInfo from './BasicInfo.js'\nimport MainDisplay from './MainDisplay.js'\n\nimport './dnd.css';\n\nexport function rollDice(size, mod, use){\n  const dice = Math.floor((Math.random() * size) +1)\n  function edgeRollClassAssignment(dice){\n    if(dice === 1){\n      return 'natOne'\n    }else if(dice === 20){\n      return 'natTwenty'\n    }else{\n      return null\n    }\n  }\n  const result =\n  <span>\n    <span id='rollUse'>{use}</span>\n    <div id='rollTopLine'>\n      <span id='rollTotal' className={edgeRollClassAssignment(dice)}>{dice}</span> <span id='modTotal'> + {mod} =</span>\n    </div>\n    <p id='rollModTotal'>{dice + mod}</p>\n  </span>\n  return result\n}\nexport const ReadTossDice = React.createContext(null)\nexport const GetSetDisplay = React.createContext(null)\nexport const GetSetDisplayTwo = React.createContext(null)\nexport const ToggleInfo = React.createContext(null)\nexport const Selection = React.createContext(null)\nexport const Character = React.createContext(null)\nexport const PrimaryModifier = React.createContext(null)\n/******************************Character Info****************************/\nexport function abilityModifier(character, ability) {\n  if(character.abilities.score[ability] === '--'){\n    return '--'\n  }\n  return Math.floor((character.abilities.score[ability] - 10) / 2)\n}\n\nexport function totalSpells(character, primaryModifier, level, levelNum) {\n  function bonusSpellsPerDay(levelNum){\n    return Math.ceil((primaryModifier - (levelNum - 1)) / 4)\n  }\n  return character.magic.spellsPerDay[level] + bonusSpellsPerDay(levelNum)\n}\n\n/******************************Character Info****************************/\nconst App = (props) => {\n  const [display, setDisplay] = useState('stats')\n  const [displayTwo, setDisplayTwo] = useState('Skills')\n  const [toggleInfo, setToggleInfo] = useState(false);\n  const [rollResult, setRollResult] = useState('Good luck,\\n' + props.character.name)\n  const [primaryModifier, setPrimaryModifier] = useState(abilityModifier(props.character, 'charisma'))\n  useEffect(function setDocTitle() {\n    document.title = props.character.name;\n  }, [props.character])\n  return (\n    <Character.Provider value={props.character}>\n\n      <div id='appWrapper'>\n        <div>\n          <div id='topWrapper'>\n            <ReadTossDice.Provider value={[rollResult, setRollResult]}>\n              <BasicInfo />\n            </ReadTossDice.Provider>\n            <Navbar.PrimaryNavbar display={display} setDisplay={setDisplay} setDisplayTwo={setDisplayTwo} />\n            <GetSetDisplayTwo.Provider value={[displayTwo, setDisplayTwo]}>\n              <Navbar.SecondaryNavbar display={display}/>\n            </GetSetDisplayTwo.Provider>\n          </div>\n          <GetSetDisplay.Provider value={[display, setDisplay]}>\n          <GetSetDisplayTwo.Provider value={[displayTwo, setDisplayTwo]}>\n            <ToggleInfo.Provider value={[toggleInfo, setToggleInfo]}>\n              <ReadTossDice.Provider value={[rollResult, setRollResult]}>\n                <PrimaryModifier.Provider value={[primaryModifier, setPrimaryModifier]}>\n                  <MainDisplay />\n                </PrimaryModifier.Provider>\n              </ReadTossDice.Provider>\n            </ToggleInfo.Provider>\n          </GetSetDisplayTwo.Provider>\n          </GetSetDisplay.Provider>\n          <div id='bottomSpacer'></div>\n        </div>\n      </div>\n    </Character.Provider>\n  )\n}\n\nconst LoadApp = () => {\n  // Load data from the characters server endpoint\n  const {data} = useSWR('/api/characters')\n\n  // Before the data is loaded, it will be `undefined`\n  return data ? (\n    <App character={data.characters[0]} />\n  ) : <>Loading...</>\n}\n\nexport default LoadApp\n"]},"metadata":{},"sourceType":"module"}