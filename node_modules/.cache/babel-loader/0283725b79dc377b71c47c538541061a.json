{"ast":null,"code":"var _jsxFileName = \"/home/highdynamics/repos/dnd_app/src/dnd.js\";\nimport React from 'react';\nimport './dnd.css';\nconst {\n  useState\n} = React;\n/******************************Character Info****************************/\n\nconst character = {\n  name: 'Arn Hachem',\n  type: ['human', 'sanctified', 'deathless', 'spellstitched', 'archlich'],\n  hitPoints: {\n    dieSize: 12,\n    total: 255,\n    damage: 0,\n    temporaryHitPoints: 0\n  },\n  armorClass: {\n    ac: {\n      total: 37,\n      armor: 6,\n      shield: 0,\n      dexterity: 12,\n      size: 0,\n      naturalArmor: 5,\n      deflection: 4,\n      misc: 0\n    },\n    touch: 22,\n    flatFooted: 23\n  },\n  size: 'Medium',\n  alignment: 'Lawful-Good',\n  abilities: {\n    score: {\n      strength: 18,\n      dexterity: 24,\n      constitution: '--',\n      intelligence: 22,\n      wisdom: 17,\n      charisma: 35\n    },\n    modifier: ability => {\n      if (character.abilities.score[ability] === '--') {\n        return '--';\n      }\n\n      return Math.floor((character.abilities.score[ability] - 10) / 2);\n    },\n    primaryModifier: ability => {\n      return Math.floor((character.abilities.score[ability] - 10) / 2);\n    }\n  },\n  speed: 30,\n  level: '20',\n  class: ['Sorcerer(1)', 'Mindtender(2)', 'Fleshwarper(2)', 'Malconvoker(7)', 'Binder(1)', 'Bard(1)', 'Master of Masks(5)'],\n  skills: {\n    appraise: 10,\n    balance: 12,\n    bluff: 41,\n    climb: 4,\n    concentration: 27,\n    craft: 13,\n    diplomacy: 18,\n    diguise: 39,\n    escapeArtist: 12,\n    forgery: 6,\n    gatherInformation: 9,\n    heal: 16,\n    hide: 25,\n    intimidate: 19,\n    jump: 4,\n    listen: 4,\n    moveSilently: 12,\n    ride: 12,\n    search: 6,\n    senseMotive: 21,\n    spot: 4,\n    survival: 4,\n    swim: 12,\n    useRope: 12,\n    stealth: 28,\n    perception: 19\n  },\n  classSkills: {\n    knowledgeArcana: 26,\n    knowledgeDungeoneering: 14,\n    knowledgeReligion: 16,\n    knowledgePlanes: 8,\n    haha: 'haha'\n  },\n  characterAbilities: ['Light_Ray', 'Paralyzing_Touch', 'Positive_Energy_Touch', 'Turn_Undead'],\n  magic: {\n    slas: {\n      zero: '',\n      one: ['Chill_Touch', 'Floating_Disk'],\n      two: ['Command_Undead', 'Acid_Arrow'],\n      three: ['Vampiric_Touch', 'Phantom_Steed'],\n      four: ['Affliction', 'Enervation'],\n      five: ['Mage\\'s_Faithful_Hound', 'Wall_of_Force'],\n      six: ['Contingency'],\n      seven: '',\n      eight: '',\n      nine: ''\n    },\n    spellcaster: true,\n    type: {\n      arcane: true,\n      divine: false\n    },\n    spells: {\n      zero: ['Mending', 'Arcane_Mark', 'Ghost_Sound', 'Detect_Magic', 'Mage_Hand', 'Message', 'Light', 'Read Magic', 'Acid_Splash', 'Lullaby', 'Know_Direction', 'Open/Close', 'Prestidigitation'],\n      one: ['Silent_Image', 'Disguise_Self', 'Magic_Missile', 'Mage_Armor', 'Charm_Person'],\n      two: ['Ghoul_Touch', 'Arcane_Lock', 'Knock', 'Alter_Fortune', 'Scorching_Ray'],\n      three: ['Shrink_Item', 'Tiny_Hut', 'Ray_of_Exhaustion', 'Explosive_Runes'],\n      four: ['Resilient_Sphere', 'Create_Fetch', 'Dimension_Door', 'Polymorph'],\n      five: ['Telekinesis', 'Sending', 'Passwall', 'Planar_Binding,_Lesser', 'Feeblemind'],\n      six: ['Disintigrate', 'Freezing_Sphere', 'Planar_Binding', 'Permanent_Image'],\n      seven: ['Teleport_Object', 'Stun_Ray', 'Waves_of_Exhaustion'],\n      eight: ['Polymorph_any_Object', 'Horrid_Wilting', 'Planar_Binding,_Greater', 'Last_Judgment'],\n      nine: ['Replicate Casting', 'Sphere of Ultimate Destruction', 'Crushing_Hand']\n    },\n    spellbook: {\n      zero: ['Arcane_Mark', 'Prestidigitation', 'Mage Hand', 'Resistance', 'Disrupt Undead', 'Touch of Fatigue', 'Mending', 'Message', 'Open/Close', 'Preserve Organ', 'No-Light', 'Slash Tongue', 'Silent Portal'],\n      one: ['a'],\n      two: ['a'],\n      three: ['a'],\n      four: ['a'],\n      five: ['a'],\n      six: ['a'],\n      seven: ['a'],\n      eight: ['a'],\n      nine: ['a']\n    },\n    spellsPerDay: {\n      zero: 8,\n      one: 6,\n      two: 6,\n      three: 6,\n      four: 6,\n      five: 6,\n      six: 6,\n      seven: 6,\n      eight: 6,\n      nine: 6\n    },\n    bonusSpellsPerDay: level => {\n      return Math.ceil((character.abilities.primaryModifier('charisma') - (level - 1)) / 4);\n    },\n    //formula needs fixing\n    spellSave: () => {\n      return Math.floor(10 + character.abilities.primaryModifier('charisma'));\n    }\n  },\n  items: ['Mesmerist\\'s Gloves', 'Nolzure\\'s Orb', 'Vanisher Cloak', 'GateBreaker Ballista Bolt']\n};\nconst str = character.abilities.score.strength;\nconst dex = character.abilities.score.dexterity;\nconst con = character.abilities.score.constitution;\nconst int = character.abilities.score.intelligence;\nconst wis = character.abilities.score.wisdom;\nconst cha = character.abilities.score.charisma;\nconst strMod = character.abilities.modifier('strength');\nconst dexMod = character.abilities.modifier('dexterity');\nconst conMod = character.abilities.modifier('constitution');\nconst intMod = character.abilities.modifier('intelligence');\nconst wisMod = character.abilities.modifier('wisdom');\nconst chaMod = character.abilities.modifier('charisma');\n/******************************Character Info****************************/\n\nconst KnownSLAs = props => {\n  const [toggleInfo, setToggleInfo] = useState(false);\n  const spell = props.value;\n  const formattedSpell = spell.replace(/\\_/g, ' ');\n  const buttonAndSpellClass = 'spellButtons ' + spell;\n  return /*#__PURE__*/React.createElement(\"button\", {\n    className: buttonAndSpellClass,\n    onClick: () => setToggleInfo(!toggleInfo),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 5\n    }\n  }, formattedSpell + ' \\u221e');\n};\n\nconst SLAs = props => {\n  //cantrips or orisons? or both?\n  function casterType() {\n    if (character.magic.type.arcane && character.magic.type.divine) {\n      return 'Cantrips & Orisons';\n    } else if (character.magic.type.divine) {\n      return 'Orisons';\n    } else if (character.magic.type.arcane) {\n      return 'Cantrips';\n    }\n  }\n\n  function displaySLAs(level) {\n    const slas = Object.values(character.magic.slas[level]).map(s => /*#__PURE__*/React.createElement(KnownSLAs, {\n      key: s,\n      value: s,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 14\n      }\n    }));\n    return slas;\n  } //condense SLA code block into function\n\n\n  function spellCodeBlock(level, levelNum, levelRoman) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"spellItems\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"spellLevelWrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      className: \"spellLevelHeader\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 11\n      }\n    }, \"Level \", levelRoman)), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"spellList\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 9\n      }\n    }, displaySLAs(level)), /*#__PURE__*/React.createElement(\"hr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 9\n      }\n    }));\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"spellContainer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"spellItems\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"spellLevelWrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    className: \"spellLevelHeader\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 13\n    }\n  }, casterType())), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"spellList\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 11\n    }\n  }, displaySLAs('zero')), /*#__PURE__*/React.createElement(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 11\n    }\n  })), spellCodeBlock('one', 1, 'I'), spellCodeBlock('two', 2, 'II'), spellCodeBlock('three', 3, 'III'), spellCodeBlock('four', 4, 'IV'), spellCodeBlock('five', 5, 'V'), spellCodeBlock('six', 6, 'VI'), spellCodeBlock('seven', 7, 'VII'), spellCodeBlock('eight', 8, 'VIII'), spellCodeBlock('nine', 9, 'IX')));\n};\n\nconst Abilities = props => {\n  return /*#__PURE__*/React.createElement(React.Fragment, null, \"Abilities()\");\n};\n\nconst UseSpell = props => {\n  const newArray = Object.values(character.magic.spells.zero).map(spell => spell);\n\n  function spellList(level) {\n    if (character.magic.spells[level].length == 0) {\n      return 'LEVEL UP FIRST';\n    } else if (Array.isArray(character.magic.spells[level])) {\n      return '| ' + Object.values(character.magic.spells[level]).map(x => /*#__PURE__*/React.createElement(\"a\", {\n        href: \"#\",\n        key: x,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 9\n        }\n      }, x)).join(' | ') + ' |';\n    }\n\n    return '| ' + character.magic.spells[level] + ' |';\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 7\n    }\n  }, \"Level 1\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 7\n    }\n  }, Object.values(character.magic.spells.one).map(x => /*#__PURE__*/React.createElement(\"a\", {\n    href: \"#\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 9\n    }\n  }, `${x}`))));\n};\n\nconst Spellbook = props => {\n  const [toggleInfo, setToggleInfo] = useState(false);\n  const spell = props.value;\n  const formattedSpell = spell.replace(/\\_/g, ' ');\n  const buttonAndSpellClass = 'spellButtons ' + spell;\n  return /*#__PURE__*/React.createElement(\"button\", {\n    className: buttonAndSpellClass,\n    onClick: () => setToggleInfo(!toggleInfo),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 5\n    }\n  }, formattedSpell);\n};\n\nconst PrepSpells = props => {\n  function casterType() {\n    if (character.magic.type.arcane && character.magic.type.divine) {\n      return 'Cantrips & Orisons';\n    } else if (character.magic.type.divine) {\n      return 'Orisons';\n    } else if (character.magic.type.arcane) {\n      return 'Cantrips';\n    }\n  }\n\n  function displaySpells(level) {\n    const spells = Object.values(character.magic.spellbook[level]).map(s => /*#__PURE__*/React.createElement(Spellbook, {\n      key: s,\n      value: s,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 14\n      }\n    }));\n    return spells;\n  }\n\n  function totalSpells(level, levelNum) {\n    return character.magic.spellsPerDay[level] + character.magic.bonusSpellsPerDay(levelNum);\n  }\n\n  function spellCodeBlock(level, levelNum, levelRoman) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"spellItems\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 287,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"spellLevelWrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 288,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      className: \"spellLevelHeader\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 289,\n        columnNumber: 11\n      }\n    }, \"Level \", levelRoman), /*#__PURE__*/React.createElement(\"em\", {\n      className: \"remainingSpells\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 290,\n        columnNumber: 11\n      }\n    }, totalSpells(level, levelNum), \" remaining today\")), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"spellList\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 292,\n        columnNumber: 9\n      }\n    }, displaySpells(level)), /*#__PURE__*/React.createElement(\"hr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 293,\n        columnNumber: 9\n      }\n    }));\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 299,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"spellContainer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 300,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"spellItems\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 301,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"spellLevelWrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 302,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    className: \"spellLevelHeader\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 303,\n      columnNumber: 13\n    }\n  }, casterType()), /*#__PURE__*/React.createElement(\"em\", {\n    className: \"remainingSpells\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 304,\n      columnNumber: 13\n    }\n  }, totalSpells('zero', 0), \" remaining today\")), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"spellList\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 306,\n      columnNumber: 11\n    }\n  }, displaySpells('zero')), /*#__PURE__*/React.createElement(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 307,\n      columnNumber: 11\n    }\n  })), \" \", spellCodeBlock('one', 1, 'I'), spellCodeBlock('two', 2, 'II'), spellCodeBlock('three', 3, 'III'), spellCodeBlock('four', 4, 'IV'), spellCodeBlock('five', 5, 'V'), spellCodeBlock('six', 6, 'VI'), spellCodeBlock('seven', 7, 'VII'), spellCodeBlock('eight', 8, 'VIII'), spellCodeBlock('nine', 9, 'IX'))));\n};\n\nconst ClassSkillsListItem = props => {\n  return /*#__PURE__*/React.createElement(\"li\", {\n    className: \"skills\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 325,\n      columnNumber: 10\n    }\n  }, props.classSkills, props.skillPoints);\n};\n\nconst SkillsListItem = props => {\n  return /*#__PURE__*/React.createElement(\"li\", {\n    className: \"skills\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 328,\n      columnNumber: 10\n    }\n  }, props.skills, props.skillPoints);\n};\n\nconst Skills = props => {\n  let skillsBlock = Object.keys(character.skills).map(skill => /*#__PURE__*/React.createElement(\"div\", {\n    className: \"skillBorderTwo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 333,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(SkillsListItem, {\n    key: skill,\n    skills: skill.toLowerCase(),\n    skillPoints: character.skills[skill],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 334,\n      columnNumber: 9\n    }\n  })));\n  let classSkillsBlock = Object.keys(character.classSkills).map(skill => /*#__PURE__*/React.createElement(\"div\", {\n    className: \"skillBorderTwo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 344,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(ClassSkillsListItem, {\n    key: skill,\n    skills: skill.toLowerCase(),\n    skillPoints: character.classSkills[skill],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 345,\n      columnNumber: 11\n    }\n  })));\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h1\", {\n    id: \"skillsHeader\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 355,\n      columnNumber: 7\n    }\n  }, \"Skills\"), /*#__PURE__*/React.createElement(\"ul\", {\n    id: \"skills\",\n    style: {\n      listStyleType: 'none'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 356,\n      columnNumber: 7\n    }\n  }, skillsBlock, classSkillsBlock));\n};\n\nconst KnownSpells = props => {\n  const [toggleInfo, setToggleInfo] = useState(false);\n  const spell = props.value;\n  const formattedSpell = spell.replace(/\\_/g, ' ');\n  const buttonAndSpellClass = 'spellButtons ' + spell;\n  return /*#__PURE__*/React.createElement(\"button\", {\n    className: buttonAndSpellClass,\n    onClick: () => setToggleInfo(!toggleInfo),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 368,\n      columnNumber: 5\n    }\n  }, formattedSpell + ' \\u221e');\n};\n\nconst AbilitySelector = props => {\n  const [display, setDisplay] = useState('spells');\n\n  function selection(display) {\n    switch (display) {\n      case 'Spells':\n        return /*#__PURE__*/React.createElement(Spells, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 377,\n            columnNumber: 16\n          }\n        });\n\n      case 'Abilites':\n        return /*#__PURE__*/React.createElement(Abilities, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 379,\n            columnNumber: 16\n          }\n        });\n\n      case 'SLAs':\n        return /*#__PURE__*/React.createElement(SLAs, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 381,\n            columnNumber: 16\n          }\n        });\n    }\n  }\n\n  function navButtonCodeBlock(name) {\n    return /*#__PURE__*/React.createElement(\"button\", {\n      id: name,\n      onClick: () => setDisplay(name),\n      className: display == name ? 'navbarItemsOn' : 'navbarItemsOff',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 386,\n        columnNumber: 7\n      }\n    }, name);\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 394,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"ul\", {\n    id: \"abilitySelector\",\n    className: \"navbarContainer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 395,\n      columnNumber: 7\n    }\n  }, navButtonCodeBlock('Spells'), navButtonCodeBlock('Abilities'), navButtonCodeBlock('SLAs')), selection(display));\n};\n\nconst Spells = props => {\n  //cantrips or orisons? or both?\n  function casterType() {\n    if (character.magic.type.arcane && character.magic.type.divine) {\n      return 'Cantrips & Orisons';\n    } else if (character.magic.type.divine) {\n      return 'Orisons';\n    } else if (character.magic.type.arcane) {\n      return 'Cantrips';\n    }\n  }\n\n  function displaySpells(level) {\n    const spells = Object.values(character.magic.spells[level]).map(s => /*#__PURE__*/React.createElement(KnownSpells, {\n      key: s,\n      value: s,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 417,\n        columnNumber: 14\n      }\n    }));\n    return spells;\n  } //total castings per day\n\n\n  function totalSpells(level, levelNum) {\n    return character.magic.spellsPerDay[level] + character.magic.bonusSpellsPerDay(levelNum);\n  } //condense spell block into function\n\n\n  function spellCodeBlock(level, levelNum, levelRoman) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"spellItems\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 428,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"spellLevelWrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 429,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      className: \"spellLevelHeader\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 430,\n        columnNumber: 7\n      }\n    }, \"Level \", levelRoman), /*#__PURE__*/React.createElement(\"em\", {\n      className: \"remainingSpells\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 431,\n        columnNumber: 7\n      }\n    }, totalSpells(level, levelNum), \" remaining today\")), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"spellList\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 433,\n        columnNumber: 7\n      }\n    }, displaySpells(level)), /*#__PURE__*/React.createElement(\"hr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 434,\n        columnNumber: 7\n      }\n    }));\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 439,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"spellContainer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 440,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"spellItems\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 441,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"spellLevelWrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 442,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    className: \"spellLevelHeader\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 443,\n      columnNumber: 13\n    }\n  }, casterType()), /*#__PURE__*/React.createElement(\"em\", {\n    className: \"remainingSpells\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 444,\n      columnNumber: 13\n    }\n  }, character.magic.spellsPerDay.zero, \" remaining today\")), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"spellList\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 446,\n      columnNumber: 11\n    }\n  }, displaySpells('zero')), /*#__PURE__*/React.createElement(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 447,\n      columnNumber: 11\n    }\n  })), spellCodeBlock('one', 1, 'I'), spellCodeBlock('two', 2, 'II'), spellCodeBlock('three', 3, 'III'), spellCodeBlock('four', 4, 'IV'), spellCodeBlock('five', 5, 'V'), spellCodeBlock('six', 6, 'VI'), spellCodeBlock('seven', 7, 'VII'), spellCodeBlock('eight', 8, 'VIII'), spellCodeBlock('nine', 9, 'IX')));\n};\n\nconst Stats = props => {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 465,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"statsContainer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 466,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    id: \"abilitiesHeader\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 467,\n      columnNumber: 5\n    }\n  }, \"Abilities\"), /*#__PURE__*/React.createElement(\"div\", {\n    id: \"abilities\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 468,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"abilities\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 469,\n      columnNumber: 5\n    }\n  }, \"STR: \", str, \" | \", strMod), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"abilities\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 470,\n      columnNumber: 5\n    }\n  }, \"DEX: \", dex, \" | \", dexMod), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"abilities\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 471,\n      columnNumber: 5\n    }\n  }, \"CON: \", con, \" | \", conMod), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"abilities\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 472,\n      columnNumber: 5\n    }\n  }, \"INT: \", int, \" | \", intMod), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"abilities\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 473,\n      columnNumber: 5\n    }\n  }, \"WIS: \", wis, \" | \", wisMod), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"abilities\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 474,\n      columnNumber: 5\n    }\n  }, \"CHA: \", cha, \" | \", chaMod))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"skillsContainer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 477,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Skills, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 478,\n      columnNumber: 5\n    }\n  })));\n};\n\nconst Items = props => {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 486,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 487,\n      columnNumber: 7\n    }\n  }, \"Items\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 488,\n      columnNumber: 7\n    }\n  }, \"| \", character.items.map(x => x).join(' | '), \" |\"));\n};\n\nconst BasicInfo = props => {\n  //toggle for 'more' button\n  const [toggle, setToggle] = useState(false); //display conditional more/less\n\n  const moreLess = () => {\n    if (toggle) {\n      return '(less)';\n    } else {\n      return '(more)';\n    }\n  };\n\n  const health = character.hitPoints.total - character.hitPoints.damage + character.hitPoints.temporaryHitPoints;\n  const type = character.type.map(t => /*#__PURE__*/React.createElement(CharacterType, {\n    key: t,\n    value: t,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 508,\n      columnNumber: 12\n    }\n  }));\n  const classList = character.class.map(c => /*#__PURE__*/React.createElement(CharacterClasses, {\n    key: c,\n    value: c,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 511,\n      columnNumber: 12\n    }\n  }));\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 514,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"topContainer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 515,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: toggle ? 'moreButtonOn' : 'moreButtonOff',\n    onClick: () => setToggle(!toggle),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 516,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    id: \"nameAndLevel\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 517,\n      columnNumber: 15\n    }\n  }, character.name, \" (\", character.level, \")\"), /*#__PURE__*/React.createElement(\"em\", {\n    id: \"moreLess\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 518,\n      columnNumber: 15\n    }\n  }, moreLess())), toggle == true && /*#__PURE__*/React.createElement(\"div\", {\n    id: \"characterInfo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 522,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    id: \"characterType\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 523,\n      columnNumber: 15\n    }\n  }, \"type: \", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 523,\n      columnNumber: 45\n    }\n  }), \" \", type), /*#__PURE__*/React.createElement(\"ul\", {\n    id: \"classList\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 524,\n      columnNumber: 15\n    }\n  }, \"class: \", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 524,\n      columnNumber: 41\n    }\n  }), \" \", classList)), /*#__PURE__*/React.createElement(\"p\", {\n    id: \"hp\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 527,\n      columnNumber: 11\n    }\n  }, \"hp: \", health), /*#__PURE__*/React.createElement(\"p\", {\n    id: \"ac\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 528,\n      columnNumber: 11\n    }\n  }, \"ac: \", character.armorClass.ac.total)));\n};\n\nconst CharacterType = props => {\n  return /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 535,\n      columnNumber: 5\n    }\n  }, props.value, \" / \");\n};\n\nconst CharacterClasses = props => {\n  return /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 540,\n      columnNumber: 5\n    }\n  }, props.value);\n};\n\nconst MainDisplay = props => {\n  function screenSwitch(display) {\n    switch (display) {\n      case 'stats':\n        return /*#__PURE__*/React.createElement(Stats, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 548,\n            columnNumber: 16\n          }\n        });\n\n      case 'spells':\n        return /*#__PURE__*/React.createElement(Spells, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 550,\n            columnNumber: 16\n          }\n        });\n\n      case 'items':\n        return /*#__PURE__*/React.createElement(Items, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 552,\n            columnNumber: 16\n          }\n        });\n\n      case 'ability':\n        return /*#__PURE__*/React.createElement(AbilitySelector, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 554,\n            columnNumber: 16\n          }\n        });\n    }\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 559,\n      columnNumber: 7\n    }\n  }, screenSwitch(props.display));\n};\n\nconst Navbar = props => {\n  const statIcon = /*#__PURE__*/React.createElement(\"i\", {\n    id: \"statIcon\",\n    className: \"far fa-chart-bar\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 567,\n      columnNumber: 20\n    }\n  });\n  const abilityIcon = /*#__PURE__*/React.createElement(\"i\", {\n    id: \"spellIcon\",\n    className: \"fas fa-hand-sparkles\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 568,\n      columnNumber: 23\n    }\n  });\n  const itemIcon = /*#__PURE__*/React.createElement(\"i\", {\n    id: \"itemIcon\",\n    className: \"fas fa-scroll\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 569,\n      columnNumber: 20\n    }\n  });\n\n  function navButtonCodeBlock(name, icon) {\n    return /*#__PURE__*/React.createElement(\"button\", {\n      id: name,\n      onClick: () => props.setDisplay(name),\n      className: props.display == name ? 'navbarItemsOn' : 'navbarItemsOff',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 572,\n        columnNumber: 7\n      }\n    }, icon);\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 580,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"navbarContainer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 581,\n      columnNumber: 7\n    }\n  }, navButtonCodeBlock('stats', statIcon), navButtonCodeBlock('ability', abilityIcon), navButtonCodeBlock('items', itemIcon)));\n};\n\nconst App = () => {\n  const [display, setDisplay] = useState('stats');\n  return /*#__PURE__*/React.createElement(\"div\", {\n    id: \"appWrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 592,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 593,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    id: \"topWrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 594,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(BasicInfo, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 595,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Navbar, {\n    display: display,\n    setDisplay: setDisplay,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 596,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    id: \"mainContent\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 598,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(MainDisplay, {\n    display: display,\n    setDisplay: setDisplay,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 599,\n      columnNumber: 11\n    }\n  }))));\n};\n\nexport default App;","map":{"version":3,"sources":["/home/highdynamics/repos/dnd_app/src/dnd.js"],"names":["React","useState","character","name","type","hitPoints","dieSize","total","damage","temporaryHitPoints","armorClass","ac","armor","shield","dexterity","size","naturalArmor","deflection","misc","touch","flatFooted","alignment","abilities","score","strength","constitution","intelligence","wisdom","charisma","modifier","ability","Math","floor","primaryModifier","speed","level","class","skills","appraise","balance","bluff","climb","concentration","craft","diplomacy","diguise","escapeArtist","forgery","gatherInformation","heal","hide","intimidate","jump","listen","moveSilently","ride","search","senseMotive","spot","survival","swim","useRope","stealth","perception","classSkills","knowledgeArcana","knowledgeDungeoneering","knowledgeReligion","knowledgePlanes","haha","characterAbilities","magic","slas","zero","one","two","three","four","five","six","seven","eight","nine","spellcaster","arcane","divine","spells","spellbook","spellsPerDay","bonusSpellsPerDay","ceil","spellSave","items","str","dex","con","int","wis","cha","strMod","dexMod","conMod","intMod","wisMod","chaMod","KnownSLAs","props","toggleInfo","setToggleInfo","spell","value","formattedSpell","replace","buttonAndSpellClass","SLAs","casterType","displaySLAs","Object","values","map","s","spellCodeBlock","levelNum","levelRoman","Abilities","UseSpell","newArray","spellList","length","Array","isArray","x","join","Spellbook","PrepSpells","displaySpells","totalSpells","ClassSkillsListItem","skillPoints","SkillsListItem","Skills","skillsBlock","keys","skill","toLowerCase","classSkillsBlock","listStyleType","KnownSpells","AbilitySelector","display","setDisplay","selection","navButtonCodeBlock","Spells","Stats","Items","BasicInfo","toggle","setToggle","moreLess","health","t","classList","c","CharacterType","CharacterClasses","MainDisplay","screenSwitch","Navbar","statIcon","abilityIcon","itemIcon","icon","App"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './dnd.css';\n\nconst { useState } = React;\n\n/******************************Character Info****************************/\nconst character = {\n  name: 'Arn Hachem',\n  type: ['human', 'sanctified', 'deathless', 'spellstitched', 'archlich'],\n  hitPoints: {\n    dieSize: 12,\n    total: 255,\n    damage: 0,\n    temporaryHitPoints: 0,\n  },\n  armorClass: {\n    ac: {\n      total: 37,\n      armor: 6,\n      shield: 0,\n      dexterity: 12,\n      size: 0,\n      naturalArmor: 5,\n      deflection: 4,\n      misc: 0\n    },\n    touch: 22,\n    flatFooted: 23\n  },\n  size: 'Medium',\n  alignment: 'Lawful-Good',\n  abilities: {\n    score: {\n      strength: 18,\n      dexterity: 24,\n      constitution: '--',\n      intelligence: 22,\n      wisdom: 17,\n      charisma: 35\n    },\n    modifier: (ability) => {\n      if(character.abilities.score[ability] === '--'){\n        return '--'\n      }\n      return Math.floor((character.abilities.score[ability] - 10) / 2)\n    },\n    primaryModifier: (ability) => {return Math.floor((character.abilities.score[ability] - 10) / 2)}\n  },\n  speed: 30,\n  level: '20',\n  class: ['Sorcerer(1)', 'Mindtender(2)', 'Fleshwarper(2)', 'Malconvoker(7)', 'Binder(1)', 'Bard(1)', 'Master of Masks(5)'],\n  skills: {\n    appraise: 10,\n    balance: 12,\n    bluff: 41,\n    climb: 4,\n    concentration: 27,\n    craft: 13,\n    diplomacy: 18,\n    diguise: 39,\n    escapeArtist: 12,\n    forgery: 6,\n    gatherInformation: 9,\n    heal: 16,\n    hide: 25,\n    intimidate: 19,\n    jump: 4,\n    listen: 4,\n    moveSilently: 12,\n    ride: 12,\n    search: 6,\n    senseMotive: 21,\n    spot: 4,\n    survival: 4,\n    swim: 12,\n    useRope: 12,\n    stealth: 28,\n    perception: 19\n  },\n  classSkills: {\n    knowledgeArcana: 26,\n    knowledgeDungeoneering: 14,\n    knowledgeReligion: 16,\n    knowledgePlanes: 8,\n    haha: 'haha'\n  },\n  characterAbilities: [\n    'Light_Ray', 'Paralyzing_Touch', 'Positive_Energy_Touch', 'Turn_Undead'\n  ],\n  magic: {\n    slas: {\n      zero: '',\n      one: ['Chill_Touch', 'Floating_Disk'],\n      two: ['Command_Undead', 'Acid_Arrow'],\n      three: ['Vampiric_Touch', 'Phantom_Steed'],\n      four: ['Affliction', 'Enervation'],\n      five: ['Mage\\'s_Faithful_Hound', 'Wall_of_Force'],\n      six: ['Contingency'],\n      seven: '',\n      eight: '',\n      nine: '',\n    },\n    spellcaster: true,\n    type: {\n      arcane: true,\n      divine: false,\n    },\n    spells: {\n      zero: ['Mending', 'Arcane_Mark', 'Ghost_Sound', 'Detect_Magic', 'Mage_Hand', 'Message', 'Light', 'Read Magic', 'Acid_Splash', 'Lullaby', 'Know_Direction', 'Open/Close', 'Prestidigitation'],\n      one: ['Silent_Image', 'Disguise_Self', 'Magic_Missile', 'Mage_Armor', 'Charm_Person'],\n      two: ['Ghoul_Touch', 'Arcane_Lock', 'Knock', 'Alter_Fortune', 'Scorching_Ray'],\n      three: ['Shrink_Item', 'Tiny_Hut', 'Ray_of_Exhaustion', 'Explosive_Runes'],\n      four: ['Resilient_Sphere', 'Create_Fetch', 'Dimension_Door', 'Polymorph'],\n      five: ['Telekinesis', 'Sending', 'Passwall', 'Planar_Binding,_Lesser', 'Feeblemind'],\n      six: ['Disintigrate', 'Freezing_Sphere', 'Planar_Binding', 'Permanent_Image'],\n      seven: ['Teleport_Object', 'Stun_Ray', 'Waves_of_Exhaustion'],\n      eight: ['Polymorph_any_Object', 'Horrid_Wilting', 'Planar_Binding,_Greater', 'Last_Judgment'],\n      nine: ['Replicate Casting', 'Sphere of Ultimate Destruction', 'Crushing_Hand']\n    },\n    spellbook: {\n      zero: ['Arcane_Mark', 'Prestidigitation', 'Mage Hand', 'Resistance', 'Disrupt Undead', 'Touch of Fatigue', 'Mending', 'Message', 'Open/Close', 'Preserve Organ', 'No-Light', 'Slash Tongue', 'Silent Portal'],\n      one: ['a'],\n      two: ['a'],\n      three: ['a'],\n      four: ['a'],\n      five: ['a'],\n      six: ['a'],\n      seven: ['a'],\n      eight: ['a'],\n      nine: ['a'],\n    },\n    spellsPerDay: {\n      zero: 8,\n      one: 6,\n      two: 6,\n      three: 6,\n      four: 6,\n      five: 6,\n      six: 6,\n      seven: 6,\n      eight: 6,\n      nine: 6,\n    },\n    bonusSpellsPerDay: (level) => {\n      return Math.ceil((character.abilities.primaryModifier('charisma') - (level - 1)) / 4)\n    }, //formula needs fixing\n    spellSave: () => {return Math.floor(10 + character.abilities.primaryModifier('charisma'))}\n  },\n  items: [\n    'Mesmerist\\'s Gloves', 'Nolzure\\'s Orb', 'Vanisher Cloak', 'GateBreaker Ballista Bolt'\n  ],\n}\nconst str = character.abilities.score.strength\nconst dex = character.abilities.score.dexterity\nconst con = character.abilities.score.constitution\nconst int = character.abilities.score.intelligence\nconst wis = character.abilities.score.wisdom\nconst cha = character.abilities.score.charisma\nconst strMod = character.abilities.modifier('strength')\nconst dexMod = character.abilities.modifier('dexterity')\nconst conMod = character.abilities.modifier('constitution')\nconst intMod = character.abilities.modifier('intelligence')\nconst wisMod = character.abilities.modifier('wisdom')\nconst chaMod = character.abilities.modifier('charisma')\n/******************************Character Info****************************/\nconst KnownSLAs = (props) => {\n  const [toggleInfo, setToggleInfo] = useState(false);\n  const spell = props.value\n  const formattedSpell = spell.replace(/\\_/g, ' ')\n  const buttonAndSpellClass = 'spellButtons ' + spell\n  return(\n    <button className={buttonAndSpellClass} onClick={() => setToggleInfo(!toggleInfo)}>{formattedSpell + ' \\u221e'}</button>\n  )\n}\nconst SLAs = (props) => {\n  //cantrips or orisons? or both?\n  function casterType() {\n    if (character.magic.type.arcane && character.magic.type.divine){\n      return 'Cantrips & Orisons'\n    } else if (character.magic.type.divine){\n      return 'Orisons'\n    } else if (character.magic.type.arcane){\n      return 'Cantrips'\n    }\n  }\n  function displaySLAs(level){\n    const slas = Object.values(character.magic.slas[level]).map(\n      (s) => <KnownSLAs key={s} value={s} />\n    );\n    return slas;\n  }\n  //condense SLA code block into function\n  function spellCodeBlock(level, levelNum, levelRoman){\n    return (\n      <div className='spellItems'>\n        <div className='spellLevelWrapper'>\n          <h2 className='spellLevelHeader'>Level {levelRoman}</h2>\n        </div>\n        <p className='spellList'>{displaySLAs(level)}</p>\n        <hr/>\n      </div>\n    )\n  }\n  return (\n    <div>\n      <div className='spellContainer'>\n        <div className='spellItems'>\n          <div className='spellLevelWrapper'>\n            <h2 className='spellLevelHeader'>{casterType()}</h2>\n          </div>\n          <p className='spellList'>{displaySLAs('zero')}</p>\n          <hr/>\n        </div>\n        {spellCodeBlock('one', 1, 'I')}\n        {spellCodeBlock('two', 2, 'II')}\n        {spellCodeBlock('three', 3, 'III')}\n        {spellCodeBlock('four', 4, 'IV')}\n        {spellCodeBlock('five', 5, 'V')}\n        {spellCodeBlock('six', 6, 'VI')}\n        {spellCodeBlock('seven', 7, 'VII')}\n        {spellCodeBlock('eight', 8, 'VIII')}\n        {spellCodeBlock('nine', 9, 'IX')}\n      </div>\n    </div>\n  );\n}\n\nconst Abilities = (props) => {\n  return(\n    <>\n      Abilities()\n    </>\n  )\n}\n\nconst UseSpell = (props) => {\n  const newArray = Object.values(character.magic.spells.zero).map(spell => spell)\n  function spellList(level) {\n    if (character.magic.spells[level].length == 0){\n      return 'LEVEL UP FIRST'\n    }else if (Array.isArray(character.magic.spells[level])) {\n      return '| ' + Object.values(character.magic.spells[level]).map(x => (\n        <a href='#' key={x}>{x}</a>))\n        .join(' | ') + ' |'\n    }\n    return '| ' + character.magic.spells[level] + ' |'\n  }\n  return (\n    <div>\n      <h1>Level 1</h1>\n      <p>{Object.values(character.magic.spells.one).map(x => (\n        <a href='#'>{`${x}`}</a>\n      ))}</p>\n    </div>\n  )\n}\nconst Spellbook = (props) => {\n  const [toggleInfo, setToggleInfo] = useState(false);\n  const spell = props.value\n  const formattedSpell = spell.replace(/\\_/g, ' ')\n  const buttonAndSpellClass = 'spellButtons ' + spell\n  return(\n    <button className={buttonAndSpellClass} onClick={() => setToggleInfo(!toggleInfo)}>{formattedSpell}</button>\n  )\n}\nconst PrepSpells = (props) => {\n  function casterType() {\n    if (character.magic.type.arcane && character.magic.type.divine){\n      return 'Cantrips & Orisons'\n    } else if (character.magic.type.divine){\n      return 'Orisons'\n    } else if (character.magic.type.arcane){\n      return 'Cantrips'\n    }\n  }\n  function displaySpells(level){\n    const spells = Object.values(character.magic.spellbook[level]).map(\n      (s) => <Spellbook key={s} value={s} />\n    );\n    return spells;\n  }\n  function totalSpells(level, levelNum) {\n    return character.magic.spellsPerDay[level] + character.magic.bonusSpellsPerDay(levelNum)\n  }\n  function spellCodeBlock(level, levelNum, levelRoman){\n    return (\n      <div className='spellItems'>\n        <div className='spellLevelWrapper'>\n          <h2 className='spellLevelHeader'>Level {levelRoman}</h2>\n          <em className='remainingSpells'>{totalSpells(level, levelNum)} remaining today</em>\n        </div>\n        <p className='spellList'>{displaySpells(level)}</p>\n        <hr/>\n      </div>\n    )\n  }\n  return (\n    <>\n      <div>\n      <div className='spellContainer'>\n        <div className='spellItems'>\n          <div className='spellLevelWrapper'>\n            <h2 className='spellLevelHeader'>{casterType()}</h2>\n            <em className='remainingSpells'>{totalSpells('zero', 0)} remaining today</em>\n          </div>\n          <p className='spellList'>{displaySpells('zero')}</p>\n          <hr/>\n        </div> {/*0*/}\n        {spellCodeBlock('one', 1, 'I')}\n        {spellCodeBlock('two', 2, 'II')}\n        {spellCodeBlock('three', 3, 'III')}\n        {spellCodeBlock('four', 4, 'IV')}\n        {spellCodeBlock('five', 5, 'V')}\n        {spellCodeBlock('six', 6, 'VI')}\n        {spellCodeBlock('seven', 7, 'VII')}\n        {spellCodeBlock('eight', 8, 'VIII')}\n        {spellCodeBlock('nine', 9, 'IX')}\n      </div>\n    </div>\n    </>\n  )\n}\n\nconst ClassSkillsListItem = (props) => {\n  return <li className='skills'>{props.classSkills}{props.skillPoints}</li>\n}\nconst SkillsListItem = (props) => {\n  return <li className='skills'>{props.skills}{props.skillPoints}</li>\n}\nconst Skills = (props) =>  {\n  let skillsBlock = Object.keys(character.skills).map((skill) =>\n    (\n      <div className='skillBorderTwo'>\n        <SkillsListItem\n          key={skill}\n          skills={skill.toLowerCase()}\n          skillPoints={character.skills[skill]}\n        />\n      </div>\n    )\n  )\n  let classSkillsBlock = Object.keys(character.classSkills).map((skill) =>\n      (\n        <div className='skillBorderTwo'>\n          <ClassSkillsListItem\n            key={skill}\n            skills={skill.toLowerCase()}\n            skillPoints={character.classSkills[skill]}\n          />\n        </div>\n      )\n    );\n  return(\n    <>\n      <h1 id='skillsHeader'>Skills</h1>\n      <ul id='skills' style={{listStyleType: 'none'}}>\n        {skillsBlock}{classSkillsBlock}\n      </ul>\n    </>\n  );}\n\nconst KnownSpells = (props) => {\n  const [toggleInfo, setToggleInfo] = useState(false);\n  const spell = props.value\n  const formattedSpell = spell.replace(/\\_/g, ' ')\n  const buttonAndSpellClass = 'spellButtons ' + spell\n  return(\n    <button className={buttonAndSpellClass} onClick={() => setToggleInfo(!toggleInfo)}>{formattedSpell + ' \\u221e'}</button>\n  )\n}\n\nconst AbilitySelector = (props) => {\n  const [display, setDisplay] = useState('spells')\n  function selection(display){\n    switch(display){\n      case 'Spells':\n        return <Spells />\n      case 'Abilites':\n        return <Abilities />\n      case 'SLAs':\n        return <SLAs />\n    }\n  }\n  function navButtonCodeBlock(name){\n    return(\n      <button id={name}\n              onClick={() => setDisplay(name)}\n              className={(display == name ? 'navbarItemsOn' : 'navbarItemsOff')}>\n          {name}\n      </button>\n    )\n  }\n  return(\n    <div>\n      <ul id='abilitySelector' className='navbarContainer'>\n        {navButtonCodeBlock('Spells')}\n        {navButtonCodeBlock('Abilities')}\n        {navButtonCodeBlock('SLAs')}\n      </ul>\n      {selection(display)}\n    </div>\n  )\n}\nconst Spells = (props) => {\n  //cantrips or orisons? or both?\n  function casterType() {\n    if (character.magic.type.arcane && character.magic.type.divine){\n      return 'Cantrips & Orisons'\n    } else if (character.magic.type.divine){\n      return 'Orisons'\n    } else if (character.magic.type.arcane){\n      return 'Cantrips'\n    }\n  }\n  function displaySpells(level){\n    const spells = Object.values(character.magic.spells[level]).map(\n      (s) => <KnownSpells key={s} value={s} />\n    );\n    return spells;\n  }\n  //total castings per day\n  function totalSpells(level, levelNum) {\n    return character.magic.spellsPerDay[level] + character.magic.bonusSpellsPerDay(levelNum)\n  }\n  //condense spell block into function\n  function spellCodeBlock(level, levelNum, levelRoman){\n    return (\n      <div className='spellItems'>\n      <div className='spellLevelWrapper'>\n      <h2 className='spellLevelHeader'>Level {levelRoman}</h2>\n      <em className='remainingSpells'>{totalSpells(level, levelNum)} remaining today</em>\n      </div>\n      <p className='spellList'>{displaySpells(level)}</p>\n      <hr/>\n      </div>\n    )\n  }\n  return (\n    <div>\n      <div className='spellContainer'>\n        <div className='spellItems'>\n          <div className='spellLevelWrapper'>\n            <h2 className='spellLevelHeader'>{casterType()}</h2>\n            <em className='remainingSpells'>{character.magic.spellsPerDay.zero} remaining today</em>\n          </div>\n          <p className='spellList'>{displaySpells('zero')}</p>\n          <hr/>\n        </div>\n        {spellCodeBlock('one', 1, 'I')}\n        {spellCodeBlock('two', 2, 'II')}\n        {spellCodeBlock('three', 3, 'III')}\n        {spellCodeBlock('four', 4, 'IV')}\n        {spellCodeBlock('five', 5, 'V')}\n        {spellCodeBlock('six', 6, 'VI')}\n        {spellCodeBlock('seven', 7, 'VII')}\n        {spellCodeBlock('eight', 8, 'VIII')}\n        {spellCodeBlock('nine', 9, 'IX')}\n      </div>\n    </div>\n  );\n}\n\nconst Stats = (props) => {\n  return (\n    <div>\n    <div className='statsContainer'>\n    <h1 id='abilitiesHeader'>Abilities</h1>\n    <div id='abilities'>\n    <p className='abilities'>STR: {str} | {strMod}</p>\n    <p className='abilities'>DEX: {dex} | {dexMod}</p>\n    <p className='abilities'>CON: {con} | {conMod}</p>\n    <p className='abilities'>INT: {int} | {intMod}</p>\n    <p className='abilities'>WIS: {wis} | {wisMod}</p>\n    <p className='abilities'>CHA: {cha} | {chaMod}</p>\n    </div>\n    </div>\n    <div className='skillsContainer'>\n    <Skills />\n    </div>\n    </div>\n  );\n}\n\nconst Items = (props) => {\n  return (\n    <div>\n      <h1>Items</h1>\n      <p>| {character.items.map(x => x).join(' | ')} |</p>\n    </div>\n  );\n}\n\nconst BasicInfo = (props) => {\n//toggle for 'more' button\n  const [toggle, setToggle] = useState(false);\n//display conditional more/less\n  const moreLess = () => {\n    if(toggle){\n      return '(less)'\n    } else {\n      return '(more)'\n    }\n  }\n  const health = (\n      character.hitPoints.total - character.hitPoints.damage + character.hitPoints.temporaryHitPoints\n  );\n  const type = (character.type).map(\n    (t) => <CharacterType key={t} value={t} />\n  );\n  const classList = (character.class).map(\n    (c) => <CharacterClasses key={c} value={c} />\n  );\n  return (\n      <div>\n        <div className='topContainer'>\n            <button className={(toggle ? 'moreButtonOn' : 'moreButtonOff')} onClick={() => setToggle(!toggle)}>\n              <h1 id='nameAndLevel'>{character.name} ({character.level})</h1>\n              <em id='moreLess'>{moreLess()}</em>\n            </button>\n\n          {toggle == true &&\n            <div id='characterInfo'>\n              <div id='characterType'>type: <br /> {type}</div>\n              <ul id='classList'>class: <br /> {classList}</ul>\n            </div>\n          }\n          <p id='hp'>hp: {health}</p>\n          <p id='ac'>ac: {character.armorClass.ac.total}</p>\n        </div>\n      </div>\n    );\n}\nconst CharacterType = (props) => {\n  return(\n    <span>{props.value} / </span>\n  )\n}\nconst CharacterClasses = (props) => {\n  return(\n    <li>{props.value}</li>\n  )\n}\n\nconst MainDisplay = (props) => {\n  function screenSwitch(display) {\n    switch(display) {\n      case 'stats':\n        return <Stats />\n      case 'spells':\n        return <Spells />\n      case 'items':\n        return <Items />\n      case 'ability':\n        return <AbilitySelector />\n    }\n  }\n\n    return(\n      <div>\n        {screenSwitch(props.display)}\n      </div>\n    );\n\n}\n\nconst Navbar = (props) => {\n  const statIcon = <i id='statIcon' className=\"far fa-chart-bar\"></i>;\n  const abilityIcon = <i id=\"spellIcon\" className=\"fas fa-hand-sparkles\"></i>;\n  const itemIcon = <i id='itemIcon' className=\"fas fa-scroll\"></i>;\n  function navButtonCodeBlock(name, icon){\n    return(\n      <button id={name}\n              onClick={() => props.setDisplay(name)}\n              className={(props.display == name ? 'navbarItemsOn' : 'navbarItemsOff')}>\n                      {icon}\n      </button>\n    )\n  }\n  return (\n    <div>\n      <ul className='navbarContainer'>\n        {navButtonCodeBlock('stats', statIcon)}\n        {navButtonCodeBlock('ability', abilityIcon)}\n        {navButtonCodeBlock('items', itemIcon)}\n      </ul>\n    </div>\n  );\n}\nconst App = () => {\n  const [display, setDisplay] = useState('stats')\n  return (\n    <div id='appWrapper'>\n      <div>\n        <div id='topWrapper'>\n          <BasicInfo />\n          <Navbar display={display} setDisplay={setDisplay} />\n        </div>\n        <div id='mainContent'>\n          <MainDisplay display={display} setDisplay={setDisplay} />\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default App\n"]},"metadata":{},"sourceType":"module"}