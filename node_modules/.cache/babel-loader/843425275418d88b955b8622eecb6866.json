{"ast":null,"code":"import _toConsumableArray from\"/home/highdynamics/repos/dnd_app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _slicedToArray from\"/home/highdynamics/repos/dnd_app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React from'react';import'./dnd.css';import{character}from'./Arn_Hachem.js';var useState=React.useState,useContext=React.useContext,useEffect=React.useEffect;document.title=character.name;function rollDice(size,mod,use){var dice=Math.floor(Math.random()*size+1);function edgeRollClassAssignment(dice){if(dice===1){return'natOne';}else if(dice===20){return'natTwenty';}else{return null;}}var result=/*#__PURE__*/React.createElement(\"span\",null,/*#__PURE__*/React.createElement(\"span\",{id:\"rollUse\"},use),/*#__PURE__*/React.createElement(\"div\",{id:\"rollTopLine\"},/*#__PURE__*/React.createElement(\"span\",{id:\"rollTotal\",className:edgeRollClassAssignment(dice)},dice),\" \",/*#__PURE__*/React.createElement(\"span\",{id:\"modTotal\"},\" + \",mod,\" =\")),/*#__PURE__*/React.createElement(\"p\",{id:\"rollModTotal\"},dice+mod));return result;}var TossDice=React.createContext(null);var ReadDice=React.createContext(null);var GetSetDisplay=React.createContext(null);var GetSetDisplayTwo=React.createContext(null);/******************************Character Info****************************/var str=character.abilities.score.strength;var dex=character.abilities.score.dexterity;var con=character.abilities.score.constitution;var int=character.abilities.score.intelligence;var wis=character.abilities.score.wisdom;var cha=character.abilities.score.charisma;function abilityModifier(ability){if(character.abilities.score[ability]==='--'){return'--';}return Math.floor((character.abilities.score[ability]-10)/2);}var strMod=abilityModifier('strength');var dexMod=abilityModifier('dexterity');var conMod=abilityModifier('constitution');var intMod=abilityModifier('intelligence');var wisMod=abilityModifier('wisdom');var chaMod=abilityModifier('charisma');var primaryModifier=chaMod;function bonusSpellsPerDay(levelNum){return Math.ceil((primaryModifier-(levelNum-1))/4);}function spellSave(){return Math.floor(10+character.abilities.primaryModifier('charisma'));}/******************************Character Info****************************/var ItemsHeld=function ItemsHeld(props){var _useState=useState(false),_useState2=_slicedToArray(_useState,2),toggleInfo=_useState2[0],setToggleInfo=_useState2[1];var item=props.value;var formattedItem=item.replace(/_/g,' ');var buttonAndSpellClass='spellButtons '+item;return/*#__PURE__*/React.createElement(\"button\",{className:buttonAndSpellClass,onClick:function onClick(){return setToggleInfo(!toggleInfo);}},formattedItem);};var Items=function Items(props){function displayItems(){var items=Object.values(character.items).map(function(s){return/*#__PURE__*/React.createElement(ItemsHeld,{key:s,value:s});});return items;}return/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"h1\",null,\"Items\"),/*#__PURE__*/React.createElement(\"div\",{className:\"spellContainer\"},/*#__PURE__*/React.createElement(\"div\",{className:\"spellItems\"},/*#__PURE__*/React.createElement(\"p\",{className:\"spellList\"},displayItems()))));};var KnownSLAs=function KnownSLAs(props){var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),toggleInfo=_useState4[0],setToggleInfo=_useState4[1];var spell=props.value;var formattedSpell=spell.replace(/_/g,' ');var buttonAndSpellClass='spellButtons '+spell;return/*#__PURE__*/React.createElement(\"button\",{className:buttonAndSpellClass,onClick:function onClick(){return setToggleInfo(!toggleInfo);}},formattedSpell);};var SLAs=function SLAs(props){//cantrips or orisons? or both?\nfunction casterType(){if(character.magic.type.arcane&&character.magic.type.divine){return'Cantrips & Orisons';}else if(character.magic.type.divine){return'Orisons';}else if(character.magic.type.arcane){return'Cantrips';}}function displaySLAs(level){var slas=Object.values(character.magic.slas[level]).map(function(s){return/*#__PURE__*/React.createElement(KnownSLAs,{key:s,value:s});});return slas;}//condense SLA code block into function\nfunction spellCodeBlock(level,levelNum,levelRoman){return/*#__PURE__*/React.createElement(\"div\",{className:\"spellItems\"},/*#__PURE__*/React.createElement(\"div\",{className:\"spellLevelWrapper\"},/*#__PURE__*/React.createElement(\"h2\",{className:\"spellLevelHeader\"},\"Level \",levelRoman)),/*#__PURE__*/React.createElement(\"p\",{className:\"spellList\"},displaySLAs(level)),/*#__PURE__*/React.createElement(\"hr\",null));}return/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"div\",{className:\"spellContainer\"},/*#__PURE__*/React.createElement(\"div\",{className:\"spellItems\"},/*#__PURE__*/React.createElement(\"div\",{className:\"spellLevelWrapper\"},/*#__PURE__*/React.createElement(\"h2\",{className:\"spellLevelHeader\"},casterType())),/*#__PURE__*/React.createElement(\"p\",{className:\"spellList\"},displaySLAs('zero')),/*#__PURE__*/React.createElement(\"hr\",null)),spellCodeBlock('one',1,'I'),spellCodeBlock('two',2,'II'),spellCodeBlock('three',3,'III'),spellCodeBlock('four',4,'IV'),spellCodeBlock('five',5,'V'),spellCodeBlock('six',6,'VI'),spellCodeBlock('seven',7,'VII'),spellCodeBlock('eight',8,'VIII'),spellCodeBlock('nine',9,'IX')));};var KnownActiveAbilities=function KnownActiveAbilities(props){var _useState5=useState(false),_useState6=_slicedToArray(_useState5,2),toggleInfo=_useState6[0],setToggleInfo=_useState6[1];var ability=props.value;var formattedAbility=ability.replace(/_/g,' ');var buttonAndSpellClass='spellButtons '+ability;return/*#__PURE__*/React.createElement(\"button\",{className:buttonAndSpellClass,onClick:function onClick(){return setToggleInfo(!toggleInfo);}},formattedAbility);};var ActiveAbilities=function ActiveAbilities(props){function displayAbilities(){var abilities=Object.values(character.characterAbilities.active).map(function(s){return/*#__PURE__*/React.createElement(KnownActiveAbilities,{key:s,value:s});});return abilities;}return/*#__PURE__*/React.createElement(\"div\",{className:\"spellContainer\"},/*#__PURE__*/React.createElement(\"div\",{className:\"spellItems\"},/*#__PURE__*/React.createElement(\"p\",{className:\"spellList\"},displayAbilities())));};/*const UseSpell = (props) => {\n  const newArray = Object.values(character.magic.spells.zero).map(spell => spell)\n  function spellList(level) {\n    if (character.magic.spells[level].length == 0){\n      return 'LEVEL UP FIRST'\n    }else if (Array.isArray(character.magic.spells[level])) {\n      return '| ' + Object.values(character.magic.spells[level]).map(x => (\n        <a href='#' key={x}>{x}</a>))\n        .join(' | ') + ' |'\n    }\n    return '| ' + character.magic.spells[level] + ' |'\n  }\n  return (\n    <div>\n      <h1>Level 1</h1>\n      <p>{Object.values(character.magic.spells.one).map(x => (\n        <a href='#'>{`${x}`}</a>\n      ))}</p>\n    </div>\n  )\n} */var Spellbook=function Spellbook(props){var _useState7=useState(false),_useState8=_slicedToArray(_useState7,2),toggleInfo=_useState8[0],setToggleInfo=_useState8[1];var spell=props.value;var formattedSpell=spell.replace(/_/g,' ');var buttonAndSpellClass='spellButtons '+spell;return/*#__PURE__*/React.createElement(\"button\",{className:buttonAndSpellClass,onClick:function onClick(){return setToggleInfo(!toggleInfo);}},formattedSpell);};var PrepSpells=function PrepSpells(props){var setDisplay=useContext(GetSetDisplay);function casterType(){if(character.magic.type.arcane&&character.magic.type.divine){return'Cantrips & Orisons';}else if(character.magic.type.divine){return'Orisons';}else if(character.magic.type.arcane){return'Cantrips';}}function displaySpells(level){var spells=Object.values(character.magic.spellbook[level]).map(function(s){return/*#__PURE__*/React.createElement(Spellbook,{key:s,value:s});});return spells;}function totalSpells(level,levelNum){return character.magic.spellsPerDay[level]+bonusSpellsPerDay(levelNum);}function spellCodeBlock(level,levelNum,levelRoman){return/*#__PURE__*/React.createElement(\"div\",{className:\"spellItems\"},/*#__PURE__*/React.createElement(\"div\",{className:\"spellLevelWrapper\"},/*#__PURE__*/React.createElement(\"h2\",{className:\"spellLevelHeader\"},\"Level \",levelRoman),/*#__PURE__*/React.createElement(\"em\",{className:\"remainingSpells\"},totalSpells(level,levelNum),\" remaining today\")),/*#__PURE__*/React.createElement(\"p\",{className:\"spellList\"},displaySpells(level)),/*#__PURE__*/React.createElement(\"hr\",null));}return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"button\",{id:\"returnToSpells\",onClick:function onClick(){return setDisplay('Spells');}},/*#__PURE__*/React.createElement(\"i\",{class:\"fas fa-arrow-left\"})),/*#__PURE__*/React.createElement(\"div\",{className:\"spellContainer\"},/*#__PURE__*/React.createElement(\"div\",{className:\"spellItems\"},/*#__PURE__*/React.createElement(\"div\",{className:\"spellLevelWrapper\"},/*#__PURE__*/React.createElement(\"h2\",{className:\"spellLevelHeader\"},casterType()),/*#__PURE__*/React.createElement(\"em\",{className:\"remainingSpells\"},totalSpells('zero',0),\" remaining today\")),/*#__PURE__*/React.createElement(\"p\",{className:\"spellList\"},displaySpells('zero')),/*#__PURE__*/React.createElement(\"hr\",null)),\" \",spellCodeBlock('one',1,'I'),spellCodeBlock('two',2,'II'),spellCodeBlock('three',3,'III'),spellCodeBlock('four',4,'IV'),spellCodeBlock('five',5,'V'),spellCodeBlock('six',6,'VI'),spellCodeBlock('seven',7,'VII'),spellCodeBlock('eight',8,'VIII'),spellCodeBlock('nine',9,'IX'))));};var KnownSpells=function KnownSpells(props){var _useState9=useState(false),_useState10=_slicedToArray(_useState9,2),toggleInfo=_useState10[0],setToggleInfo=_useState10[1];var spell=props.value;var formattedSpell=spell.replace(/_/g,' ');var buttonAndSpellClass='spellButtons '+spell;return/*#__PURE__*/React.createElement(\"button\",{className:buttonAndSpellClass,onClick:function onClick(){return setToggleInfo(!toggleInfo);}},formattedSpell+\" \\u221E\");};var Spells=function Spells(props){var _useContext=useContext(GetSetDisplay),_useContext2=_slicedToArray(_useContext,2),display=_useContext2[0],setDisplay=_useContext2[1];//cantrips or orisons? or both?\nfunction casterType(){if(character.magic.type.arcane&&character.magic.type.divine){return'Cantrips & Orisons';}else if(character.magic.type.divine){return'Orisons';}else if(character.magic.type.arcane){return'Cantrips';}}function displaySpells(level){var spells=Object.values(character.magic.spells[level]).map(function(s){return/*#__PURE__*/React.createElement(KnownSpells,{key:s,value:s});});return spells;}//total castings per day\nfunction totalSpells(level,levelNum){return character.magic.spellsPerDay[level]+bonusSpellsPerDay(levelNum);}//condense spell block into function\nfunction spellCodeBlock(level,levelNum,levelRoman){return/*#__PURE__*/React.createElement(\"div\",{className:\"spellItems\"},/*#__PURE__*/React.createElement(\"div\",{className:\"spellLevelWrapper\"},/*#__PURE__*/React.createElement(\"h2\",{className:\"spellLevelHeader\"},\"Level \",levelRoman),/*#__PURE__*/React.createElement(\"em\",{className:\"remainingSpells\"},totalSpells(level,levelNum),\" remaining today\")),/*#__PURE__*/React.createElement(\"p\",{className:\"spellList\"},displaySpells(level)),/*#__PURE__*/React.createElement(\"hr\",null));}return/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"button\",{id:\"prepSpellsButton\",onClick:function onClick(){return setDisplay('Prep');}},/*#__PURE__*/React.createElement(\"i\",{class:\"fas fa-book\"}),/*#__PURE__*/React.createElement(\"span\",null,\"PREP\")),/*#__PURE__*/React.createElement(\"div\",{className:\"spellContainer\"},/*#__PURE__*/React.createElement(\"div\",{className:\"spellItems\"},/*#__PURE__*/React.createElement(\"div\",{className:\"spellLevelWrapper\"},/*#__PURE__*/React.createElement(\"h2\",{id:\"levelZeroHeader\",className:\"spellLevelHeader\"},casterType()),/*#__PURE__*/React.createElement(\"em\",{className:\"remainingSpells\"},character.magic.spellsPerDay.zero,\" remaining today\")),/*#__PURE__*/React.createElement(\"p\",{className:\"spellList\"},displaySpells('zero')),/*#__PURE__*/React.createElement(\"hr\",null)),spellCodeBlock('one',1,'I'),spellCodeBlock('two',2,'II'),spellCodeBlock('three',3,'III'),spellCodeBlock('four',4,'IV'),spellCodeBlock('five',5,'V'),spellCodeBlock('six',6,'VI'),spellCodeBlock('seven',7,'VII'),spellCodeBlock('eight',8,'VIII'),spellCodeBlock('nine',9,'IX')));};var AbilitySelector=function AbilitySelector(props){var _useContext3=useContext(GetSetDisplayTwo),_useContext4=_slicedToArray(_useContext3,2),displayTwo=_useContext4[0],setDisplayTwo=_useContext4[1];function navButtonCodeBlock(name){return/*#__PURE__*/React.createElement(\"button\",{id:name,onClick:function onClick(){return setDisplayTwo(name);},className:displayTwo===name?'navbarItemsOn':'navbarItemsOff'},name);}return/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"ul\",{id:\"abilitySelector\",className:\"navbarContainer\"},navButtonCodeBlock('Spells'),navButtonCodeBlock('Abilities'),navButtonCodeBlock('SLAs')));};var KnownPassiveAbilities=function KnownPassiveAbilities(props){var _useState11=useState(false),_useState12=_slicedToArray(_useState11,2),toggleInfo=_useState12[0],setToggleInfo=_useState12[1];var ability=props.value;var formattedAbility=ability.replace(/_/g,' ');var buttonAndSpellClass='spellButtons '+ability;return/*#__PURE__*/React.createElement(\"button\",{className:buttonAndSpellClass,onClick:function onClick(){return setToggleInfo(!toggleInfo);}},formattedAbility);};var PassiveAbilities=function PassiveAbilities(props){function displayAbilities(){var abilities=Object.values(character.characterAbilities.passive).map(function(s){return/*#__PURE__*/React.createElement(KnownPassiveAbilities,{key:s,value:s});});return abilities;}return/*#__PURE__*/React.createElement(\"div\",{className:\"spellContainer\"},/*#__PURE__*/React.createElement(\"div\",{className:\"spellItems\"},/*#__PURE__*/React.createElement(\"p\",{className:\"spellList\"},displayAbilities())));};var AbilityScores=function AbilityScores(props){var roll=useContext(TossDice);function abilityScoreCodeBlock(abilityString,abilityScore,abilityMod){return/*#__PURE__*/React.createElement(\"p\",{className:\"abilityScores\"},/*#__PURE__*/React.createElement(\"button\",{className:\"rollAbility\",onClick:function onClick(){return roll(rollDice(20,abilityMod,abilityString));}},\"roll\"),abilityString,\": \",abilityScore,\" | \",abilityMod);}return/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"div\",{id:\"statsContainer\"},/*#__PURE__*/React.createElement(\"h1\",{id:\"abilityScoresHeader\"},\"Abilities\"),/*#__PURE__*/React.createElement(\"div\",{id:\"abilityScoresWrapper\"},abilityScoreCodeBlock('STR',str,strMod),abilityScoreCodeBlock('DEX',dex,dexMod),abilityScoreCodeBlock('CON',con,conMod),abilityScoreCodeBlock('INT',int,intMod),abilityScoreCodeBlock('WIS',wis,wisMod),abilityScoreCodeBlock('CHA',cha,chaMod))));};var SkillsListItem=function SkillsListItem(props){var roll=useContext(TossDice);// store props to make code simpler\nvar skills=props.skills;// replace underscore with space and store\nvar formattedSkill=skills[0].replace(/_/g,' ');// update variable replacing (Know)ledge with :\nformattedSkill=formattedSkill.replace(/ledge/g,':');// store skill points separately\nvar skillPoints=skills[1];// confirm class skill to add css class\nfunction findClassSkills(skill){if(character.classSkills.hasOwnProperty(skill)){return'classSkills';}else{return'';}}return/*#__PURE__*/React.createElement(\"button\",{className:\"skills \".concat(findClassSkills(skills[0]),\" \").concat(skills[0]),onClick:function onClick(){return roll(rollDice(20,skillPoints,formattedSkill));}},formattedSkill,\" | \",/*#__PURE__*/React.createElement(\"span\",{className:\"skillPoints\"},skillPoints));};var Skills=function Skills(props){//put character's skills into array as [key, value]\nvar skillsArray=Object.keys(character.skills).map(function(skill){return[skill,character.skills[skill]];});// put character's class skills into array as [key, value]\nvar classSkillsArray=Object.keys(character.classSkills).map(function(skill){return[skill,character.classSkills[skill]];});// combine both arrays into new array, sorted alphabetically\nvar allSkills=[].concat(_toConsumableArray(skillsArray),_toConsumableArray(classSkillsArray)).sort();// pass skills to child component\nvar skillsBlock=allSkills.map(function(s){return/*#__PURE__*/React.createElement(SkillsListItem,{key:s,skills:s});});return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(\"h1\",{id:\"skillsHeader\"},\"Skills\"),/*#__PURE__*/React.createElement(\"ul\",{id:\"skillsListWrapper\",style:{listStyleType:'none'}},/*#__PURE__*/React.createElement(\"div\",{id:\"skillsWrapper\"},skillsBlock)));};var StatsSelector=function StatsSelector(props){var _useContext5=useContext(GetSetDisplayTwo),_useContext6=_slicedToArray(_useContext5,2),displayTwo=_useContext6[0],setDisplayTwo=_useContext6[1];function navButtonCodeBlock(name){return/*#__PURE__*/React.createElement(\"button\",{id:name,onClick:function onClick(){return setDisplayTwo(name);},className:displayTwo===name?'navbarItemsOn':'navbarItemsOff'},name);}return/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"ul\",{id:\"statsSelector\",className:\"navbarContainer\"},navButtonCodeBlock('Skills'),navButtonCodeBlock('Scores'),navButtonCodeBlock('Passive')));};var BasicInfo=function BasicInfo(props){var result=useContext(ReadDice);//toggle for 'more' button\nvar _useState13=useState(false),_useState14=_slicedToArray(_useState13,2),toggle=_useState14[0],setToggle=_useState14[1];//display conditional more/less\nvar moreLess=function moreLess(){if(toggle){return'(less)';}else{return'(more)';}};var health=character.hitPoints.total-character.hitPoints.damage+character.hitPoints.temporaryHitPoints;var type=character.type.map(function(t){return/*#__PURE__*/React.createElement(CharacterType,{key:t,value:t});});var classList=character.class.map(function(c){return/*#__PURE__*/React.createElement(CharacterClasses,{key:c,value:c});});return/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"div\",{className:\"topContainer\"},/*#__PURE__*/React.createElement(\"button\",{className:toggle?'moreButtonOn':'moreButtonOff',onClick:function onClick(){return setToggle(!toggle);}},/*#__PURE__*/React.createElement(\"h1\",{id:\"nameAndLevel\"},character.name,\" (\",character.level,\")\"),/*#__PURE__*/React.createElement(\"em\",{id:\"moreLess\"},moreLess())),toggle===true&&/*#__PURE__*/React.createElement(\"div\",{id:\"characterInfo\"},/*#__PURE__*/React.createElement(\"div\",{id:\"characterType\"},\"type: \",/*#__PURE__*/React.createElement(\"br\",null),\" \",type),/*#__PURE__*/React.createElement(\"ul\",{id:\"classList\"},\"class: \",/*#__PURE__*/React.createElement(\"br\",null),\" \",classList)),/*#__PURE__*/React.createElement(\"div\",{id:\"HPACDiceWrapper\"},/*#__PURE__*/React.createElement(\"div\",{id:\"hpacWrapper\"},/*#__PURE__*/React.createElement(\"p\",{id:\"hp\"},\"hp: \",health),/*#__PURE__*/React.createElement(\"p\",{id:\"ac\"},\"ac: \",character.armorClass.ac.total)),/*#__PURE__*/React.createElement(\"div\",{id:\"diceRollResultWrapper\"},result))));};var CharacterType=function CharacterType(props){return/*#__PURE__*/React.createElement(\"span\",null,props.value,\" / \");};var CharacterClasses=function CharacterClasses(props){return/*#__PURE__*/React.createElement(\"li\",null,props.value);};var MainDisplay=function MainDisplay(props){var _useContext7=useContext(GetSetDisplayTwo),_useContext8=_slicedToArray(_useContext7,2),displayTwo=_useContext8[0],setDisplayTwo=_useContext8[1];function screenSwitch(display){switch(display){case'Skills':return/*#__PURE__*/React.createElement(Skills,null);case'Scores':return/*#__PURE__*/React.createElement(AbilityScores,null);case'Passive':return/*#__PURE__*/React.createElement(PassiveAbilities,null);case'Spells':return/*#__PURE__*/React.createElement(Spells,null);case'Abilities':return/*#__PURE__*/React.createElement(ActiveAbilities,null);case'SLAs':return/*#__PURE__*/React.createElement(SLAs,null);case'Prep':return/*#__PURE__*/React.createElement(PrepSpells,null);case'Items':return/*#__PURE__*/React.createElement(Items,null);default:return/*#__PURE__*/React.createElement(Skills,null);}}return/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"div\",{id:\"mainContent\"},screenSwitch(displayTwo)));};var SecondaryNavbar=function SecondaryNavbar(props){function navSwitch(display){switch(display){case'stats':return/*#__PURE__*/React.createElement(StatsSelector,null);case'ability':return/*#__PURE__*/React.createElement(AbilitySelector,null);case null:return null;default:return/*#__PURE__*/React.createElement(StatsSelector,null);}}return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(\"div\",{id:\"secondaryNavbar\"},navSwitch(props.display)));};var Navbar=function Navbar(props){var statIcon=/*#__PURE__*/React.createElement(\"i\",{id:\"statIcon\",className:\"far fa-chart-bar\"});var abilityIcon=/*#__PURE__*/React.createElement(\"i\",{id:\"spellIcon\",className:\"fas fa-hand-sparkles\"});var itemIcon=/*#__PURE__*/React.createElement(\"i\",{id:\"itemIcon\",className:\"fas fa-scroll\"});function setBothDisplays(name,secondaryName){props.setDisplay(name);if(secondaryName!==null){props.setDisplayTwo(secondaryName);}}function navButtonCodeBlock(name,icon,secondaryName){return/*#__PURE__*/React.createElement(\"button\",{id:name,onClick:function onClick(){return setBothDisplays(name,secondaryName);},className:props.display==name?'navbarItemsOn':'navbarItemsOff'},icon);}return/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"ul\",{id:\"primaryNavbar\",className:\"navbarContainer\"},navButtonCodeBlock('stats',statIcon,'Skills'),navButtonCodeBlock('ability',abilityIcon,'Spells'),navButtonCodeBlock(null,itemIcon,'Items')));};var App=function App(){var _useState15=useState('stats'),_useState16=_slicedToArray(_useState15,2),display=_useState16[0],setDisplay=_useState16[1];var _useState17=useState('Skills'),_useState18=_slicedToArray(_useState17,2),displayTwo=_useState18[0],setDisplayTwo=_useState18[1];var _useState19=useState('Good luck,\\n'+character.name),_useState20=_slicedToArray(_useState19,2),rollResult=_useState20[0],setRollResult=_useState20[1];return/*#__PURE__*/React.createElement(\"div\",{id:\"appWrapper\"},/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"div\",{id:\"topWrapper\"},/*#__PURE__*/React.createElement(ReadDice.Provider,{value:rollResult},/*#__PURE__*/React.createElement(BasicInfo,null)),/*#__PURE__*/React.createElement(Navbar,{display:display,setDisplay:setDisplay,setDisplayTwo:setDisplayTwo}),/*#__PURE__*/React.createElement(GetSetDisplayTwo.Provider,{value:[displayTwo,setDisplayTwo]},/*#__PURE__*/React.createElement(SecondaryNavbar,{display:display}))),/*#__PURE__*/React.createElement(GetSetDisplay.Provider,{value:[display,setDisplay]},/*#__PURE__*/React.createElement(GetSetDisplayTwo.Provider,{value:[displayTwo,setDisplayTwo]},/*#__PURE__*/React.createElement(TossDice.Provider,{value:setRollResult},/*#__PURE__*/React.createElement(MainDisplay,null)))),/*#__PURE__*/React.createElement(\"div\",{id:\"bottomSpacer\"})));};export default App;","map":{"version":3,"sources":["/home/highdynamics/repos/dnd_app/src/dnd.js"],"names":["React","character","useState","useContext","useEffect","document","title","name","rollDice","size","mod","use","dice","Math","floor","random","edgeRollClassAssignment","result","TossDice","createContext","ReadDice","GetSetDisplay","GetSetDisplayTwo","str","abilities","score","strength","dex","dexterity","con","constitution","int","intelligence","wis","wisdom","cha","charisma","abilityModifier","ability","strMod","dexMod","conMod","intMod","wisMod","chaMod","primaryModifier","bonusSpellsPerDay","levelNum","ceil","spellSave","ItemsHeld","props","toggleInfo","setToggleInfo","item","value","formattedItem","replace","buttonAndSpellClass","Items","displayItems","items","Object","values","map","s","KnownSLAs","spell","formattedSpell","SLAs","casterType","magic","type","arcane","divine","displaySLAs","level","slas","spellCodeBlock","levelRoman","KnownActiveAbilities","formattedAbility","ActiveAbilities","displayAbilities","characterAbilities","active","Spellbook","PrepSpells","setDisplay","displaySpells","spells","spellbook","totalSpells","spellsPerDay","KnownSpells","Spells","display","zero","AbilitySelector","displayTwo","setDisplayTwo","navButtonCodeBlock","KnownPassiveAbilities","PassiveAbilities","passive","AbilityScores","roll","abilityScoreCodeBlock","abilityString","abilityScore","abilityMod","SkillsListItem","skills","formattedSkill","skillPoints","findClassSkills","skill","classSkills","hasOwnProperty","Skills","skillsArray","keys","classSkillsArray","allSkills","sort","skillsBlock","listStyleType","StatsSelector","BasicInfo","toggle","setToggle","moreLess","health","hitPoints","total","damage","temporaryHitPoints","t","classList","class","c","armorClass","ac","CharacterType","CharacterClasses","MainDisplay","screenSwitch","SecondaryNavbar","navSwitch","Navbar","statIcon","abilityIcon","itemIcon","setBothDisplays","secondaryName","icon","App","rollResult","setRollResult"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './dnd.css';\nimport { character } from './Arn_Hachem.js'\nconst { useState, useContext, useEffect } = React;\ndocument.title = character.name;\n\n\nfunction rollDice(size, mod, use){\n  const dice = Math.floor((Math.random() * size) +1)\n  function edgeRollClassAssignment(dice){\n    if(dice === 1){\n      return 'natOne'\n    }else if(dice === 20){\n      return 'natTwenty'\n    }else{\n      return null\n    }\n  }\n  const result =\n  <span>\n    <span id='rollUse'>{use}</span>\n    <div id='rollTopLine'>\n      <span id='rollTotal' className={edgeRollClassAssignment(dice)}>{dice}</span> <span id='modTotal'> + {mod} =</span>\n    </div>\n    <p id='rollModTotal'>{dice + mod}</p>\n  </span>\n  return result\n}\nconst TossDice = React.createContext(null)\nconst ReadDice = React.createContext(null)\nconst GetSetDisplay = React.createContext(null)\nconst GetSetDisplayTwo = React.createContext(null)\n/******************************Character Info****************************/\nconst str = character.abilities.score.strength\nconst dex = character.abilities.score.dexterity\nconst con = character.abilities.score.constitution\nconst int = character.abilities.score.intelligence\nconst wis = character.abilities.score.wisdom\nconst cha = character.abilities.score.charisma\nfunction abilityModifier(ability) {\n  if(character.abilities.score[ability] === '--'){\n    return '--'\n  }\n  return Math.floor((character.abilities.score[ability] - 10) / 2)\n}\nconst strMod = abilityModifier('strength')\nconst dexMod = abilityModifier('dexterity')\nconst conMod = abilityModifier('constitution')\nconst intMod = abilityModifier('intelligence')\nconst wisMod = abilityModifier('wisdom')\nconst chaMod = abilityModifier('charisma')\nlet primaryModifier = chaMod\nfunction bonusSpellsPerDay(levelNum){\n  return Math.ceil((primaryModifier - (levelNum - 1)) / 4)\n}\nfunction spellSave(){\n  return Math.floor(10 + character.abilities.primaryModifier('charisma'))\n}\n/******************************Character Info****************************/\nconst ItemsHeld = (props) => {\n  const [toggleInfo, setToggleInfo] = useState(false);\n  const item = props.value\n  const formattedItem = item.replace(/_/g, ' ')\n  const buttonAndSpellClass = 'spellButtons ' + item\n  return(\n    <button className={buttonAndSpellClass} onClick={() => setToggleInfo(!toggleInfo)}>{formattedItem}</button>\n  )\n}\nconst Items = (props) => {\n  function displayItems(){\n    const items = Object.values(character.items).map(\n      (s) => <ItemsHeld key={s} value={s} />\n    );\n    return items;\n  }\n  return(\n    <div>\n      <h1>Items</h1>\n      <div className='spellContainer'>\n        <div className='spellItems'>\n          <p className='spellList'>{displayItems()}</p>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nconst KnownSLAs = (props) => {\n  const [toggleInfo, setToggleInfo] = useState(false);\n  const spell = props.value\n  const formattedSpell = spell.replace(/_/g, ' ')\n  const buttonAndSpellClass = 'spellButtons ' + spell\n  return(\n    <button className={buttonAndSpellClass} onClick={() => setToggleInfo(!toggleInfo)}>{formattedSpell}</button>\n  )\n}\nconst SLAs = (props) => {\n  //cantrips or orisons? or both?\n  function casterType() {\n    if (character.magic.type.arcane && character.magic.type.divine){\n      return 'Cantrips & Orisons'\n    } else if (character.magic.type.divine){\n      return 'Orisons'\n    } else if (character.magic.type.arcane){\n      return 'Cantrips'\n    }\n  }\n  function displaySLAs(level){\n    const slas = Object.values(character.magic.slas[level]).map(\n      (s) => <KnownSLAs key={s} value={s} />\n    );\n    return slas;\n  }\n  //condense SLA code block into function\n  function spellCodeBlock(level, levelNum, levelRoman){\n    return (\n      <div className='spellItems'>\n        <div className='spellLevelWrapper'>\n          <h2 className='spellLevelHeader'>Level {levelRoman}</h2>\n        </div>\n        <p className='spellList'>{displaySLAs(level)}</p>\n        <hr/>\n      </div>\n    )\n  }\n  return (\n    <div>\n      <div className='spellContainer'>\n        <div className='spellItems'>\n          <div className='spellLevelWrapper'>\n            <h2 className='spellLevelHeader'>{casterType()}</h2>\n          </div>\n          <p className='spellList'>{displaySLAs('zero')}</p>\n          <hr/>\n        </div>\n        {spellCodeBlock('one', 1, 'I')}\n        {spellCodeBlock('two', 2, 'II')}\n        {spellCodeBlock('three', 3, 'III')}\n        {spellCodeBlock('four', 4, 'IV')}\n        {spellCodeBlock('five', 5, 'V')}\n        {spellCodeBlock('six', 6, 'VI')}\n        {spellCodeBlock('seven', 7, 'VII')}\n        {spellCodeBlock('eight', 8, 'VIII')}\n        {spellCodeBlock('nine', 9, 'IX')}\n      </div>\n    </div>\n  );\n}\n\nconst KnownActiveAbilities = (props) => {\n  const [toggleInfo, setToggleInfo] = useState(false);\n  const ability = props.value\n  const formattedAbility = ability.replace(/_/g, ' ')\n  const buttonAndSpellClass = 'spellButtons ' + ability\n  return(\n    <button className={buttonAndSpellClass} onClick={() => setToggleInfo(!toggleInfo)}>{formattedAbility}</button>\n  )\n}\nconst ActiveAbilities = (props) => {\n  function displayAbilities(){\n    const abilities = Object.values(character.characterAbilities.active).map(\n      (s) => <KnownActiveAbilities key={s} value={s} />\n    );\n    return abilities;\n  }\n  return(\n    <div className='spellContainer'>\n      <div className='spellItems'>\n        <p className='spellList'>{displayAbilities()}</p>\n      </div>\n    </div>\n  )\n}\n\n/*const UseSpell = (props) => {\n  const newArray = Object.values(character.magic.spells.zero).map(spell => spell)\n  function spellList(level) {\n    if (character.magic.spells[level].length == 0){\n      return 'LEVEL UP FIRST'\n    }else if (Array.isArray(character.magic.spells[level])) {\n      return '| ' + Object.values(character.magic.spells[level]).map(x => (\n        <a href='#' key={x}>{x}</a>))\n        .join(' | ') + ' |'\n    }\n    return '| ' + character.magic.spells[level] + ' |'\n  }\n  return (\n    <div>\n      <h1>Level 1</h1>\n      <p>{Object.values(character.magic.spells.one).map(x => (\n        <a href='#'>{`${x}`}</a>\n      ))}</p>\n    </div>\n  )\n} */\nconst Spellbook = (props) => {\n  const [toggleInfo, setToggleInfo] = useState(false);\n  const spell = props.value\n  const formattedSpell = spell.replace(/_/g, ' ')\n  const buttonAndSpellClass = 'spellButtons ' + spell\n  return(\n    <button className={buttonAndSpellClass} onClick={() => setToggleInfo(!toggleInfo)}>{formattedSpell}</button>\n  )\n}\nconst PrepSpells = (props) => {\n  const setDisplay = useContext(GetSetDisplay)\n  function casterType() {\n    if (character.magic.type.arcane && character.magic.type.divine){\n      return 'Cantrips & Orisons'\n    } else if (character.magic.type.divine){\n      return 'Orisons'\n    } else if (character.magic.type.arcane){\n      return 'Cantrips'\n    }\n  }\n  function displaySpells(level){\n    const spells = Object.values(character.magic.spellbook[level]).map(\n      (s) => <Spellbook key={s} value={s} />\n    );\n    return spells;\n  }\n  function totalSpells(level, levelNum) {\n    return character.magic.spellsPerDay[level] + bonusSpellsPerDay(levelNum)\n  }\n  function spellCodeBlock(level, levelNum, levelRoman){\n    return (\n      <div className='spellItems'>\n        <div className='spellLevelWrapper'>\n          <h2 className='spellLevelHeader'>Level {levelRoman}</h2>\n          <em className='remainingSpells'>{totalSpells(level, levelNum)} remaining today</em>\n        </div>\n        <p className='spellList'>{displaySpells(level)}</p>\n        <hr/>\n      </div>\n    )\n  }\n  return (\n    <>\n      <div>\n        <button id='returnToSpells' onClick={() => setDisplay('Spells')}>\n          <i class=\"fas fa-arrow-left\"></i>\n        </button>\n      <div className='spellContainer'>\n        <div className='spellItems'>\n          <div className='spellLevelWrapper'>\n            <h2 className='spellLevelHeader'>{casterType()}</h2>\n            <em className='remainingSpells'>{totalSpells('zero', 0)} remaining today</em>\n          </div>\n          <p className='spellList'>{displaySpells('zero')}</p>\n          <hr/>\n        </div> {/*0*/}\n        {spellCodeBlock('one', 1, 'I')}\n        {spellCodeBlock('two', 2, 'II')}\n        {spellCodeBlock('three', 3, 'III')}\n        {spellCodeBlock('four', 4, 'IV')}\n        {spellCodeBlock('five', 5, 'V')}\n        {spellCodeBlock('six', 6, 'VI')}\n        {spellCodeBlock('seven', 7, 'VII')}\n        {spellCodeBlock('eight', 8, 'VIII')}\n        {spellCodeBlock('nine', 9, 'IX')}\n      </div>\n    </div>\n    </>\n  )\n}\nconst KnownSpells = (props) => {\n  const [toggleInfo, setToggleInfo] = useState(false);\n  const spell = props.value\n  const formattedSpell = spell.replace(/_/g, ' ')\n  const buttonAndSpellClass = 'spellButtons ' + spell\n  return(\n    <button className={buttonAndSpellClass} onClick={() => setToggleInfo(!toggleInfo)}>{formattedSpell + ' \\u221e'}</button>\n  )\n}\nconst Spells = (props) => {\n  const [display, setDisplay] = useContext(GetSetDisplay);\n  //cantrips or orisons? or both?\n  function casterType() {\n    if (character.magic.type.arcane && character.magic.type.divine){\n      return 'Cantrips & Orisons'\n    } else if (character.magic.type.divine){\n      return 'Orisons'\n    } else if (character.magic.type.arcane){\n      return 'Cantrips'\n    }\n  }\n  function displaySpells(level){\n    const spells = Object.values(character.magic.spells[level]).map(\n      (s) => <KnownSpells key={s} value={s} />\n    );\n    return spells;\n  }\n  //total castings per day\n  function totalSpells(level, levelNum) {\n    return character.magic.spellsPerDay[level] + bonusSpellsPerDay(levelNum)\n  }\n  //condense spell block into function\n  function spellCodeBlock(level, levelNum, levelRoman){\n    return (\n      <div className='spellItems'>\n      <div className='spellLevelWrapper'>\n      <h2 className='spellLevelHeader'>Level {levelRoman}</h2>\n      <em className='remainingSpells'>{totalSpells(level, levelNum)} remaining today</em>\n      </div>\n      <p className='spellList'>{displaySpells(level)}</p>\n      <hr/>\n      </div>\n    )\n  }\n  return (\n    <div>\n      <button id='prepSpellsButton' onClick={() => setDisplay('Prep')}>\n        <i class=\"fas fa-book\"></i><span>PREP</span>\n      </button>\n      <div className='spellContainer'>\n        <div className='spellItems'>\n          <div className='spellLevelWrapper'>\n            <h2 id='levelZeroHeader' className='spellLevelHeader'>{casterType()}</h2>\n            <em className='remainingSpells'>{character.magic.spellsPerDay.zero} remaining today</em>\n          </div>\n    <p className='spellList'>{displaySpells('zero')}</p>\n    <hr/>\n    </div>\n    {spellCodeBlock('one', 1, 'I')}\n    {spellCodeBlock('two', 2, 'II')}\n    {spellCodeBlock('three', 3, 'III')}\n    {spellCodeBlock('four', 4, 'IV')}\n    {spellCodeBlock('five', 5, 'V')}\n    {spellCodeBlock('six', 6, 'VI')}\n    {spellCodeBlock('seven', 7, 'VII')}\n    {spellCodeBlock('eight', 8, 'VIII')}\n    {spellCodeBlock('nine', 9, 'IX')}\n    </div>\n    </div>\n  );\n}\n\nconst AbilitySelector = (props) => {\n  const [displayTwo, setDisplayTwo] = useContext(GetSetDisplayTwo)\n  function navButtonCodeBlock(name){\n    return(\n      <button id={name}\n              onClick={() => setDisplayTwo(name)}\n              className={(displayTwo === name ? 'navbarItemsOn' : 'navbarItemsOff')}>\n          {name}\n      </button>\n    )\n  }\n  return(\n    <div>\n      <ul id='abilitySelector' className='navbarContainer'>\n        {navButtonCodeBlock('Spells')}\n        {navButtonCodeBlock('Abilities')}\n        {navButtonCodeBlock('SLAs')}\n      </ul>\n    </div>\n  )\n}\n\nconst KnownPassiveAbilities = (props) => {\n  const [toggleInfo, setToggleInfo] = useState(false);\n  const ability = props.value\n  const formattedAbility = ability.replace(/_/g, ' ')\n  const buttonAndSpellClass = 'spellButtons ' + ability\n  return(\n    <button className={buttonAndSpellClass} onClick={() => setToggleInfo(!toggleInfo)}>{formattedAbility}</button>\n  )\n}\nconst PassiveAbilities = (props) => {\n  function displayAbilities(){\n    const abilities = Object.values(character.characterAbilities.passive).map(\n      (s) => <KnownPassiveAbilities key={s} value={s} />\n    );\n    return abilities;\n  }\n  return(\n    <div className='spellContainer'>\n      <div className='spellItems'>\n        <p className='spellList'>{displayAbilities()}</p>\n      </div>\n    </div>\n  )\n}\nconst AbilityScores = (props) => {\n  const roll = useContext(TossDice)\n  function abilityScoreCodeBlock(abilityString, abilityScore, abilityMod){\n    return(\n    <p className='abilityScores'>\n      {/*button appears on same line*/}\n      <button className='rollAbility' onClick={() => roll(rollDice(20, abilityMod, abilityString))}>roll</button>\n      {abilityString}: {abilityScore} | {abilityMod}\n    </p>\n    )\n  }\n  return (\n    <div>\n    <div id='statsContainer'>\n    <h1 id='abilityScoresHeader'>Abilities</h1>\n    <div id='abilityScoresWrapper'>\n      {abilityScoreCodeBlock('STR', str, strMod)}\n      {abilityScoreCodeBlock('DEX', dex, dexMod)}\n      {abilityScoreCodeBlock('CON', con, conMod)}\n      {abilityScoreCodeBlock('INT', int, intMod)}\n      {abilityScoreCodeBlock('WIS', wis, wisMod)}\n      {abilityScoreCodeBlock('CHA', cha, chaMod)}\n    </div>\n    </div>\n    </div>\n  );\n}\nconst SkillsListItem = (props) => {\n  const roll = useContext(TossDice);\n  // store props to make code simpler\n  const skills = props.skills\n  // replace underscore with space and store\n  let formattedSkill = skills[0].replace(/_/g, ' ');\n  // update variable replacing (Know)ledge with :\n  formattedSkill = formattedSkill.replace(/ledge/g, ':')\n  // store skill points separately\n  const skillPoints = skills[1];\n  // confirm class skill to add css class\n  function findClassSkills(skill){\n    if(character.classSkills.hasOwnProperty(skill)){\n      return 'classSkills'\n    }else{\n      return ''\n    }\n  }\n  return (\n    <button\n      className={`skills ${findClassSkills(skills[0])} ${skills[0]}`}\n      onClick={() => roll(rollDice(20, skillPoints, formattedSkill))}>\n      {formattedSkill} | <span className='skillPoints'>{skillPoints}</span>\n    </button>\n  )\n}\nconst Skills = (props) =>  {\n  //put character's skills into array as [key, value]\n  let skillsArray = Object.keys(character.skills).map((skill) => {\n    return [skill, character.skills[skill]]\n  });\n  // put character's class skills into array as [key, value]\n  let classSkillsArray = Object.keys(character.classSkills).map((skill) => {\n    return [skill, character.classSkills[skill]];\n  });\n  // combine both arrays into new array, sorted alphabetically\n  let allSkills = [...skillsArray, ...classSkillsArray].sort();\n  // pass skills to child component\n  const skillsBlock = allSkills.map((s) =>\n    <SkillsListItem key={s} skills={s} />\n  );\nreturn(\n  <>\n    <h1 id='skillsHeader'>Skills</h1>\n    <ul id='skillsListWrapper' style={{listStyleType: 'none'}}>\n      <div id='skillsWrapper'>\n        {skillsBlock}\n      </div>\n    </ul>\n  </>\n);}\nconst StatsSelector = (props) => {\n  const [displayTwo, setDisplayTwo] = useContext(GetSetDisplayTwo);\n  function navButtonCodeBlock(name){\n    return(\n      <button id={name}\n              onClick={() => setDisplayTwo(name)}\n              className={(displayTwo === name ? 'navbarItemsOn' : 'navbarItemsOff')}>\n          {name}\n      </button>\n    )\n  }\n  return(\n    <div>\n      <ul id='statsSelector' className='navbarContainer'>\n        {navButtonCodeBlock('Skills')}\n        {navButtonCodeBlock('Scores')}\n        {navButtonCodeBlock('Passive')}\n      </ul>\n    {/*  <div id='statsDisplay'>\n        {selection(display)}\n      </div>   */}\n    </div>\n  )\n}\n\nconst BasicInfo = (props) => {\n  const result = useContext(ReadDice);\n//toggle for 'more' button\n  const [toggle, setToggle] = useState(false);\n//display conditional more/less\n  const moreLess = () => {\n    if(toggle){\n      return '(less)'\n    } else {\n      return '(more)'\n    }\n  }\n  const health = (\n      character.hitPoints.total - character.hitPoints.damage + character.hitPoints.temporaryHitPoints\n  );\n  const type = (character.type).map(\n    (t) => <CharacterType key={t} value={t} />\n  );\n  const classList = (character.class).map(\n    (c) => <CharacterClasses key={c} value={c} />\n  );\n  return (\n      <div>\n        <div className='topContainer'>\n            <button className={(toggle ? 'moreButtonOn' : 'moreButtonOff')} onClick={() => setToggle(!toggle)}>\n              <h1 id='nameAndLevel'>{character.name} ({character.level})</h1>\n              <em id='moreLess'>{moreLess()}</em>\n            </button>\n\n          {toggle === true &&\n            <div id='characterInfo'>\n              <div id='characterType'>type: <br /> {type}</div>\n              <ul id='classList'>class: <br /> {classList}</ul>\n            </div>\n          }\n          <div id='HPACDiceWrapper'>\n            <div id='hpacWrapper'>\n              <p id='hp'>hp: {health}</p>\n              <p id='ac'>ac: {character.armorClass.ac.total}</p>\n            </div>\n            <div id='diceRollResultWrapper'>{result}</div>\n          </div>\n        </div>\n      </div>\n    );\n}\nconst CharacterType = (props) => {\n  return(\n    <span>{props.value} / </span>\n  )\n}\nconst CharacterClasses = (props) => {\n  return(\n    <li>{props.value}</li>\n  )\n}\n\nconst MainDisplay = (props) => {\n  const [displayTwo, setDisplayTwo] = useContext(GetSetDisplayTwo);\n  function screenSwitch(display){\n    switch(display) {\n      case 'Skills':\n        return <Skills />\n      case 'Scores':\n        return <AbilityScores />\n      case 'Passive':\n        return <PassiveAbilities />\n      case 'Spells':\n        return <Spells />\n      case 'Abilities':\n        return <ActiveAbilities />\n      case 'SLAs':\n        return <SLAs />\n      case 'Prep':\n        return <PrepSpells />\n      case 'Items':\n        return <Items />\n      default:\n        return <Skills />\n    }\n  }\n\n    return(\n      <div>\n        <div id='mainContent'>{screenSwitch(displayTwo)}</div>\n      </div>\n    );\n\n}\nconst SecondaryNavbar = (props) => {\n  function navSwitch(display){\n    switch(display){\n      case 'stats':\n        return <StatsSelector />\n      case 'ability':\n        return <AbilitySelector />\n      case null:\n        return null\n      default:\n        return <StatsSelector />\n    }\n  }\n  return(\n      <>\n        <div id='secondaryNavbar'>{navSwitch(props.display)}</div>\n      </>\n  )\n}\nconst Navbar = (props) => {\n  const statIcon = <i id='statIcon' className=\"far fa-chart-bar\"></i>;\n  const abilityIcon = <i id=\"spellIcon\" className=\"fas fa-hand-sparkles\"></i>;\n  const itemIcon = <i id='itemIcon' className=\"fas fa-scroll\"></i>;\n  function setBothDisplays(name, secondaryName){\n    props.setDisplay(name);\n    if(secondaryName !== null){\n      props.setDisplayTwo(secondaryName)\n    }\n  }\n  function navButtonCodeBlock(name, icon, secondaryName){\n    return(\n      <button id={name}\n              onClick={() => setBothDisplays(name, secondaryName)}\n              className={(props.display == name ? 'navbarItemsOn' : 'navbarItemsOff')}>\n                      {icon}\n      </button>\n    )\n  }\n  return (\n    <div>\n      <ul id='primaryNavbar' className='navbarContainer'>\n        {navButtonCodeBlock('stats', statIcon, 'Skills')}\n        {navButtonCodeBlock('ability', abilityIcon, 'Spells')}\n        {navButtonCodeBlock(null, itemIcon, 'Items')}\n      </ul>\n    </div>\n  );\n}\nconst App = () => {\n  const [display, setDisplay] = useState('stats')\n  const [displayTwo, setDisplayTwo] = useState('Skills')\n  const [rollResult, setRollResult] = useState('Good luck,\\n' + character.name)\n  return (\n    <div id='appWrapper'>\n      <div>\n        <div id='topWrapper'>\n          <ReadDice.Provider value={rollResult}>\n            <BasicInfo />\n          </ReadDice.Provider>\n          <Navbar display={display} setDisplay={setDisplay} setDisplayTwo={setDisplayTwo} />\n          <GetSetDisplayTwo.Provider value={[displayTwo, setDisplayTwo]}>\n            <SecondaryNavbar display={display}/>\n          </GetSetDisplayTwo.Provider>\n        </div>\n        <GetSetDisplay.Provider value={[display, setDisplay]}>\n        <GetSetDisplayTwo.Provider value={[displayTwo, setDisplayTwo]}>\n            <TossDice.Provider value={setRollResult}>\n              <MainDisplay />\n            </TossDice.Provider>\n        </GetSetDisplayTwo.Provider>\n        </GetSetDisplay.Provider>\n        <div id='bottomSpacer'></div>\n      </div>\n    </div>\n  )\n}\n\nexport default App\n"]},"metadata":{},"sourceType":"module"}