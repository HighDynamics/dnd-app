{"ast":null,"code":"var _jsxFileName = \"/home/highdynamics/repos/dnd_app/src/components/dnd.js\";\nimport React, { useState, useContext, useEffect } from \"react\";\nimport useSWR from \"swr\";\nimport * as Navbar from \"./Navbars.js\";\nimport BasicInfo from \"./BasicInfo.js\";\nimport MainDisplay from \"./MainDisplay.js\";\nimport \"./dnd.css\";\nexport function rollDice(size, mod, use) {\n  const dice = Math.floor(Math.random() * size + 1);\n\n  function edgeRollClassAssignment(dice) {\n    if (dice === 1) {\n      return \"natOne\";\n    } else if (dice === 20) {\n      return \"natTwenty\";\n    } else {\n      return null;\n    }\n  }\n\n  const result = /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    id: \"rollUse\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }\n  }, use), /*#__PURE__*/React.createElement(\"div\", {\n    id: \"rollTopLine\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    id: \"rollTotal\",\n    className: edgeRollClassAssignment(dice),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }\n  }, dice), \" \", /*#__PURE__*/React.createElement(\"span\", {\n    id: \"modTotal\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }\n  }, \" + \", mod, \" =\")), /*#__PURE__*/React.createElement(\"p\", {\n    id: \"rollModTotal\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }\n  }, dice + mod));\n  return result;\n}\nexport const ReadTossDice = React.createContext(null);\nexport const GetSetDisplay = React.createContext(null);\nexport const GetSetDisplayTwo = React.createContext(null);\nexport const ToggleInfo = React.createContext(null);\nexport const Selection = React.createContext(null);\nexport const Character = React.createContext(null);\nexport const PrimaryModifier = React.createContext(null);\n/******************************Character functions****************************/\n\nexport function abilityModifier(character, ability) {\n  if (character.abilities.score[ability] === \"--\") {\n    return \"--\";\n  }\n\n  return Math.floor((character.abilities.score[ability] - 10) / 2);\n}\nexport function totalSpells(character, primaryModifier, level, levelNum) {\n  function bonusSpellsPerDay(levelNum) {\n    return Math.ceil((primaryModifier - (levelNum - 1)) / 4);\n  }\n\n  return character.magic.spellsPerDay[level] + bonusSpellsPerDay(levelNum);\n}\n/******************************Character functions****************************/\n\nconst App = props => {\n  const [display, setDisplay] = useState(\"stats\");\n  const [displayTwo, setDisplayTwo] = useState(\"Skills\");\n  const [toggleInfo, setToggleInfo] = useState(false);\n  const [rollResult, setRollResult] = useState(\"Good luck,\\n\" + props.character.name);\n  const [primaryModifier, setPrimaryModifier] = useState(abilityModifier(props.character, \"charisma\"));\n  useEffect(function setDocTitle() {\n    document.title = props.character.name;\n  }, [props.character]);\n  return /*#__PURE__*/React.createElement(Character.Provider, {\n    value: props.character,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    id: \"appWrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    id: \"topWrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(ReadTossDice.Provider, {\n    value: [rollResult, setRollResult],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(BasicInfo, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(Navbar.PrimaryNavbar, {\n    display: display,\n    setDisplay: setDisplay,\n    setDisplayTwo: setDisplayTwo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(GetSetDisplayTwo.Provider, {\n    value: [displayTwo, setDisplayTwo],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Navbar.SecondaryNavbar, {\n    display: display,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 15\n    }\n  }))), /*#__PURE__*/React.createElement(GetSetDisplay.Provider, {\n    value: [display, setDisplay],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(GetSetDisplayTwo.Provider, {\n    value: [displayTwo, setDisplayTwo],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(ToggleInfo.Provider, {\n    value: [toggleInfo, setToggleInfo],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(ReadTossDice.Provider, {\n    value: [rollResult, setRollResult],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(PrimaryModifier.Provider, {\n    value: [primaryModifier, setPrimaryModifier],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(MainDisplay, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 21\n    }\n  })))))), /*#__PURE__*/React.createElement(\"div\", {\n    id: \"bottomSpacer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 11\n    }\n  }))));\n};\n\nconst LoadApp = () => {\n  // Load data from the characters server endpoint\n  const {\n    data\n  } = useSWR(\"/api/characters\"); // Before the data is loaded, it will be `undefined`\n\n  return data ? /*#__PURE__*/React.createElement(App, {\n    character: data.characters[0],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 17\n    }\n  }) : /*#__PURE__*/React.createElement(React.Fragment, null, \"Loading...\");\n};\n\nexport default LoadApp;","map":{"version":3,"sources":["/home/highdynamics/repos/dnd_app/src/components/dnd.js"],"names":["React","useState","useContext","useEffect","useSWR","Navbar","BasicInfo","MainDisplay","rollDice","size","mod","use","dice","Math","floor","random","edgeRollClassAssignment","result","ReadTossDice","createContext","GetSetDisplay","GetSetDisplayTwo","ToggleInfo","Selection","Character","PrimaryModifier","abilityModifier","character","ability","abilities","score","totalSpells","primaryModifier","level","levelNum","bonusSpellsPerDay","ceil","magic","spellsPerDay","App","props","display","setDisplay","displayTwo","setDisplayTwo","toggleInfo","setToggleInfo","rollResult","setRollResult","name","setPrimaryModifier","setDocTitle","document","title","LoadApp","data","characters"],"mappings":"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","sourcesContent":["import React, { useState, useContext, useEffect } from \"react\";\nimport useSWR from \"swr\";\n\nimport * as Navbar from \"./Navbars.js\";\nimport BasicInfo from \"./BasicInfo.js\";\nimport MainDisplay from \"./MainDisplay.js\";\n\nimport \"./dnd.css\";\n\nexport function rollDice(size, mod, use) {\n  const dice = Math.floor(Math.random() * size + 1);\n  function edgeRollClassAssignment(dice) {\n    if (dice === 1) {\n      return \"natOne\";\n    } else if (dice === 20) {\n      return \"natTwenty\";\n    } else {\n      return null;\n    }\n  }\n  const result = (\n    <span>\n      <span id=\"rollUse\">{use}</span>\n      <div id=\"rollTopLine\">\n        <span id=\"rollTotal\" className={edgeRollClassAssignment(dice)}>\n          {dice}\n        </span>{\" \"}\n        <span id=\"modTotal\"> + {mod} =</span>\n      </div>\n      <p id=\"rollModTotal\">{dice + mod}</p>\n    </span>\n  );\n  return result;\n}\nexport const ReadTossDice = React.createContext(null);\nexport const GetSetDisplay = React.createContext(null);\nexport const GetSetDisplayTwo = React.createContext(null);\nexport const ToggleInfo = React.createContext(null);\nexport const Selection = React.createContext(null);\nexport const Character = React.createContext(null);\nexport const PrimaryModifier = React.createContext(null);\n/******************************Character functions****************************/\nexport function abilityModifier(character, ability) {\n  if (character.abilities.score[ability] === \"--\") {\n    return \"--\";\n  }\n  return Math.floor((character.abilities.score[ability] - 10) / 2);\n}\nexport function totalSpells(character, primaryModifier, level, levelNum) {\n  function bonusSpellsPerDay(levelNum) {\n    return Math.ceil((primaryModifier - (levelNum - 1)) / 4);\n  }\n  return character.magic.spellsPerDay[level] + bonusSpellsPerDay(levelNum);\n}\n/******************************Character functions****************************/\nconst App = props => {\n  const [display, setDisplay] = useState(\"stats\");\n  const [displayTwo, setDisplayTwo] = useState(\"Skills\");\n  const [toggleInfo, setToggleInfo] = useState(false);\n  const [rollResult, setRollResult] = useState(\n    \"Good luck,\\n\" + props.character.name\n  );\n  const [primaryModifier, setPrimaryModifier] = useState(\n    abilityModifier(props.character, \"charisma\")\n  );\n  useEffect(\n    function setDocTitle() {\n      document.title = props.character.name;\n    },\n    [props.character]\n  );\n  return (\n    <Character.Provider value={props.character}>\n      <div id=\"appWrapper\">\n        <div>\n          <div id=\"topWrapper\">\n            <ReadTossDice.Provider value={[rollResult, setRollResult]}>\n              <BasicInfo />\n            </ReadTossDice.Provider>\n            <Navbar.PrimaryNavbar\n              display={display}\n              setDisplay={setDisplay}\n              setDisplayTwo={setDisplayTwo}\n            />\n            <GetSetDisplayTwo.Provider value={[displayTwo, setDisplayTwo]}>\n              <Navbar.SecondaryNavbar display={display} />\n            </GetSetDisplayTwo.Provider>\n          </div>\n          <GetSetDisplay.Provider value={[display, setDisplay]}>\n            <GetSetDisplayTwo.Provider value={[displayTwo, setDisplayTwo]}>\n              <ToggleInfo.Provider value={[toggleInfo, setToggleInfo]}>\n                <ReadTossDice.Provider value={[rollResult, setRollResult]}>\n                  <PrimaryModifier.Provider\n                    value={[primaryModifier, setPrimaryModifier]}\n                  >\n                    <MainDisplay />\n                  </PrimaryModifier.Provider>\n                </ReadTossDice.Provider>\n              </ToggleInfo.Provider>\n            </GetSetDisplayTwo.Provider>\n          </GetSetDisplay.Provider>\n          <div id=\"bottomSpacer\"></div>\n        </div>\n      </div>\n    </Character.Provider>\n  );\n};\n\nconst LoadApp = () => {\n  // Load data from the characters server endpoint\n  const { data } = useSWR(\"/api/characters\");\n\n  // Before the data is loaded, it will be `undefined`\n  return data ? <App character={data.characters[0]} /> : <>Loading...</>;\n};\n\nexport default LoadApp;\n"]},"metadata":{},"sourceType":"module"}