{"ast":null,"code":"import { Server, Model, RestSerializer } from \"miragejs\";\nimport characters from './characters';\nexport function makeServer({\n  environment = \"test\"\n} = {}) {\n  let server = new Server({\n    environment,\n    models: {\n      character: Model\n    },\n    serializers: {\n      application: RestSerializer\n    },\n\n    seeds(server) {\n      // set up all the starting data\n      characters.forEach(char => server.create(\"character\", char));\n    },\n\n    routes() {\n      this.namespace = \"api\"; // Here is where you add the server endpoints for your app:\n\n      this.get(\"/characters\", schema => {\n        return schema.characters.all();\n      });\n    }\n\n  });\n  return server;\n}","map":{"version":3,"sources":["/home/highdynamics/repos/dnd_app/src/server/index.js"],"names":["Server","Model","RestSerializer","characters","makeServer","environment","server","models","character","serializers","application","seeds","forEach","char","create","routes","namespace","get","schema","all"],"mappings":"AAAA,SAASA,MAAT,EAAiBC,KAAjB,EAAwBC,cAAxB,QAA8C,UAA9C;AACA,OAAOC,UAAP,MAAuB,cAAvB;AAEA,OAAO,SAASC,UAAT,CAAoB;AAAEC,EAAAA,WAAW,GAAG;AAAhB,IAA2B,EAA/C,EAAmD;AACxD,MAAIC,MAAM,GAAG,IAAIN,MAAJ,CAAW;AACtBK,IAAAA,WADsB;AAGtBE,IAAAA,MAAM,EAAE;AACNC,MAAAA,SAAS,EAAEP;AADL,KAHc;AAOtBQ,IAAAA,WAAW,EAAE;AACXC,MAAAA,WAAW,EAAER;AADF,KAPS;;AAWtBS,IAAAA,KAAK,CAACL,MAAD,EAAS;AACZ;AACAH,MAAAA,UAAU,CAACS,OAAX,CAAmBC,IAAI,IAAIP,MAAM,CAACQ,MAAP,CAAc,WAAd,EAA2BD,IAA3B,CAA3B;AACD,KAdqB;;AAgBtBE,IAAAA,MAAM,GAAG;AACP,WAAKC,SAAL,GAAiB,KAAjB,CADO,CAGP;;AAEA,WAAKC,GAAL,CAAS,aAAT,EAAyBC,MAAD,IAAY;AAClC,eAAOA,MAAM,CAACf,UAAP,CAAkBgB,GAAlB,EAAP;AACD,OAFD;AAGD;;AAxBqB,GAAX,CAAb;AA2BA,SAAOb,MAAP;AACD","sourcesContent":["import { Server, Model, RestSerializer } from \"miragejs\"\nimport characters from './characters'\n\nexport function makeServer({ environment = \"test\" } = {}) {\n  let server = new Server({\n    environment,\n\n    models: {\n      character: Model,\n    },\n\n    serializers: {\n      application: RestSerializer\n    },\n\n    seeds(server) {\n      // set up all the starting data\n      characters.forEach(char => server.create(\"character\", char))\n    },\n\n    routes() {\n      this.namespace = \"api\"\n\n      // Here is where you add the server endpoints for your app:\n\n      this.get(\"/characters\", (schema) => {\n        return schema.characters.all()\n      })\n    },\n  })\n\n  return server\n}"]},"metadata":{},"sourceType":"module"}