{"ast":null,"code":"var _jsxFileName = \"/home/highdynamics/repos/dnd_app/src/components/Spells.js\";\nimport React, { useContext } from 'react';\nimport { Character, ToggleInfo, Selection, GetSetDisplayTwo } from './dnd.js';\n\nconst KnownSpells = props => {\n  const [toggleInfo, setToggleInfo] = useContext(ToggleInfo);\n  const [selection, setSelection] = useContext(Selection);\n  const spell = props.value;\n  const formattedSpell = spell.replace(/_/g, ' ');\n  const buttonAndSpellClass = 'spellButtons ' + spell;\n\n  function displayInfo(spell) {\n    setToggleInfo('Spell');\n    setSelection(spell);\n  }\n\n  return /*#__PURE__*/React.createElement(\"button\", {\n    className: buttonAndSpellClass,\n    onClick: () => displayInfo(spell),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 5\n    }\n  }, formattedSpell + ' \\u221e');\n};\n\nconst Spells = props => {\n  const character = useContext(Character);\n  const primaryModifier = useContext(PrimaryModifier);\n  const [toggleInfo, setToggleInfo] = useContext(ToggleInfo);\n  const [displayTwo, setDisplayTwo] = useContext(GetSetDisplayTwo); //cantrips or orisons? or both?\n\n  function casterType() {\n    if (character.magic.type.arcane && character.magic.type.divine) {\n      return 'Cantrips & Orisons';\n    } else if (character.magic.type.divine) {\n      return 'Orisons';\n    } else if (character.magic.type.arcane) {\n      return 'Cantrips';\n    }\n  }\n\n  function displaySpells(level) {\n    const spells = Object.values(character.magic.spells[level]).map(s => /*#__PURE__*/React.createElement(KnownSpells, {\n      key: s,\n      value: s,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 14\n      }\n    }));\n    return spells;\n  } //condense spell block into function\n\n\n  function spellCodeBlock(level, levelNum, levelRoman) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"spellItems\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"spellLevelWrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      className: \"spellLevelHeader\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 7\n      }\n    }, \"Level \", levelRoman), /*#__PURE__*/React.createElement(\"em\", {\n      className: \"remainingSpells\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 7\n      }\n    }, totalSpells(character, primaryModifier, level, levelNum), \" remaining today\")), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"spellList\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 7\n      }\n    }, displaySpells(level)), /*#__PURE__*/React.createElement(\"hr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 7\n      }\n    }));\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    id: \"prepSpellsButton\",\n    onClick: () => setDisplayTwo('Prep'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"fas fa-book\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 40\n    }\n  }, \"PREP\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"spellContainer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"spellItems\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"spellLevelWrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    id: \"levelZeroHeader\",\n    className: \"spellLevelHeader\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }\n  }, casterType()), /*#__PURE__*/React.createElement(\"em\", {\n    className: \"remainingSpells\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }\n  }, totalSpells(character, primaryModifier, 'zero', 0), \" remaining today\")), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"spellList\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 5\n    }\n  }, displaySpells('zero')), /*#__PURE__*/React.createElement(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 5\n    }\n  })), spellCodeBlock('one', 1, 'I'), spellCodeBlock('two', 2, 'II'), spellCodeBlock('three', 3, 'III'), spellCodeBlock('four', 4, 'IV'), spellCodeBlock('five', 5, 'V'), spellCodeBlock('six', 6, 'VI'), spellCodeBlock('seven', 7, 'VII'), spellCodeBlock('eight', 8, 'VIII'), spellCodeBlock('nine', 9, 'IX')));\n};\n\nexport default Spells;","map":{"version":3,"sources":["/home/highdynamics/repos/dnd_app/src/components/Spells.js"],"names":["React","useContext","Character","ToggleInfo","Selection","GetSetDisplayTwo","KnownSpells","props","toggleInfo","setToggleInfo","selection","setSelection","spell","value","formattedSpell","replace","buttonAndSpellClass","displayInfo","Spells","character","primaryModifier","PrimaryModifier","displayTwo","setDisplayTwo","casterType","magic","type","arcane","divine","displaySpells","level","spells","Object","values","map","s","spellCodeBlock","levelNum","levelRoman","totalSpells"],"mappings":"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","sourcesContent":["import React, { useContext } from 'react';\nimport { Character, ToggleInfo, Selection, GetSetDisplayTwo } from './dnd.js'\n\nconst KnownSpells = (props) => {\n  const [toggleInfo, setToggleInfo] = useContext(ToggleInfo);\n  const [selection, setSelection] = useContext(Selection);\n  const spell = props.value;\n  const formattedSpell = spell.replace(/_/g, ' ');\n  const buttonAndSpellClass = 'spellButtons ' + spell;\n  function displayInfo(spell){\n    setToggleInfo('Spell');\n    setSelection(spell);\n  }\n  return(\n    <button className={buttonAndSpellClass} onClick={() => displayInfo(spell)}>{formattedSpell + ' \\u221e'}</button>\n  )\n}\nconst Spells = (props) => {\n  const character = useContext(Character)\n  const primaryModifier = useContext(PrimaryModifier)\n  const [toggleInfo, setToggleInfo] = useContext(ToggleInfo);\n  const [displayTwo, setDisplayTwo] = useContext(GetSetDisplayTwo);\n  //cantrips or orisons? or both?\n  function casterType() {\n    if (character.magic.type.arcane && character.magic.type.divine){\n      return 'Cantrips & Orisons'\n    } else if (character.magic.type.divine){\n      return 'Orisons'\n    } else if (character.magic.type.arcane){\n      return 'Cantrips'\n    }\n  }\n  function displaySpells(level){\n    const spells = Object.values(character.magic.spells[level]).map(\n      (s) => <KnownSpells key={s} value={s} />\n    );\n    return spells;\n  }\n  //condense spell block into function\n  function spellCodeBlock(level, levelNum, levelRoman){\n    return (\n      <div className='spellItems'>\n      <div className='spellLevelWrapper'>\n      <h2 className='spellLevelHeader'>Level {levelRoman}</h2>\n      <em className='remainingSpells'>{totalSpells(character, primaryModifier, level, levelNum)} remaining today</em>\n      </div>\n      <p className='spellList'>{displaySpells(level)}</p>\n      <hr/>\n      </div>\n    )\n  }\n  return (\n    <div>\n      <button id='prepSpellsButton' onClick={() => setDisplayTwo('Prep')}>\n        <i className=\"fas fa-book\"></i><span>PREP</span>\n      </button>\n      <div className='spellContainer'>\n        <div className='spellItems'>\n          <div className='spellLevelWrapper'>\n            <h2 id='levelZeroHeader' className='spellLevelHeader'>{casterType()}</h2>\n            <em className='remainingSpells'>{totalSpells(character, primaryModifier, 'zero', 0)} remaining today</em>\n          </div>\n    <p className='spellList'>{displaySpells('zero')}</p>\n    <hr/>\n    </div>\n    {spellCodeBlock('one', 1, 'I')}\n    {spellCodeBlock('two', 2, 'II')}\n    {spellCodeBlock('three', 3, 'III')}\n    {spellCodeBlock('four', 4, 'IV')}\n    {spellCodeBlock('five', 5, 'V')}\n    {spellCodeBlock('six', 6, 'VI')}\n    {spellCodeBlock('seven', 7, 'VII')}\n    {spellCodeBlock('eight', 8, 'VIII')}\n    {spellCodeBlock('nine', 9, 'IX')}\n    </div>\n    </div>\n  );\n}\n\nexport default Spells\n"]},"metadata":{},"sourceType":"module"}