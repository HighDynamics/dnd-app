{"ast":null,"code":"var _jsxFileName = \"/home/highdynamics/repos/dnd_app/src/components/MainDisplay.js\";\nimport React, { useState, useContext } from 'react';\nimport Items from './Items.js';\nimport SLAs from './SLAs.js';\nimport ActiveAbilities from './ActiveAbilities.js';\nimport SpellInfo from './SpellInfo.js';\nimport PrepSpells from './PrepSpells.js';\nimport Spells from './Spells.js';\nimport PassiveAbilities from './PassiveAbilities.js';\nimport AbilityScores from './AbilityScores.js';\nimport Skills from './Skills.js';\nimport { ToggleInfo, GetSetDisplayTwo, Selection } from './dnd.js';\n\nconst MainDisplay = props => {\n  const [toggleInfo, setToggleInfo] = useContext(ToggleInfo);\n  const [displayTwo, setDisplayTwo] = useContext(GetSetDisplayTwo);\n  const [selection, setSelection] = useState('');\n\n  function screenSwitch(display) {\n    switch (display) {\n      case 'Skills':\n        return /*#__PURE__*/React.createElement(Skills, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 16\n          }\n        });\n\n      case 'Scores':\n        return /*#__PURE__*/React.createElement(AbilityScores, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 16\n          }\n        });\n\n      case 'Passive':\n        return /*#__PURE__*/React.createElement(PassiveAbilities, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 16\n          }\n        });\n\n      case 'Spells':\n        return /*#__PURE__*/React.createElement(Spells, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 16\n          }\n        });\n\n      case 'Abilities':\n        return /*#__PURE__*/React.createElement(ActiveAbilities, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 16\n          }\n        });\n\n      case 'SLAs':\n        return /*#__PURE__*/React.createElement(SLAs, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 16\n          }\n        });\n\n      case 'Prep':\n        return /*#__PURE__*/React.createElement(PrepSpells, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 16\n          }\n        });\n\n      case 'Items':\n        return /*#__PURE__*/React.createElement(Items, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 16\n          }\n        });\n\n      default:\n        return /*#__PURE__*/React.createElement(Skills, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 16\n          }\n        });\n    }\n  }\n\n  function infoSheet(toggleInfo) {\n    switch (toggleInfo) {\n      case 'Spell':\n        return /*#__PURE__*/React.createElement(SpellInfo, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 16\n          }\n        });\n\n      case 'Off':\n        return null;\n\n      default:\n        return null;\n    }\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Selection.Provider, {\n    value: [selection, setSelection],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    id: \"infoSheet\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 11\n    }\n  }, infoSheet(toggleInfo)), /*#__PURE__*/React.createElement(\"div\", {\n    id: \"mainContent\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 11\n    }\n  }, screenSwitch(displayTwo))));\n};\n\nexport default MainDisplay;","map":{"version":3,"sources":["/home/highdynamics/repos/dnd_app/src/components/MainDisplay.js"],"names":["React","useState","useContext","Items","SLAs","ActiveAbilities","SpellInfo","PrepSpells","Spells","PassiveAbilities","AbilityScores","Skills","ToggleInfo","GetSetDisplayTwo","Selection","MainDisplay","props","toggleInfo","setToggleInfo","displayTwo","setDisplayTwo","selection","setSelection","screenSwitch","display","infoSheet"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,UAA1B,QAA4C,OAA5C;AACA,OAAOC,KAAP,MAAkB,YAAlB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,eAAP,MAA4B,sBAA5B;AACA,OAAOC,SAAP,MAAsB,gBAAtB;AACA,OAAOC,UAAP,MAAuB,iBAAvB;AACA,OAAOC,MAAP,MAAmB,aAAnB;AACA,OAAOC,gBAAP,MAA6B,uBAA7B;AAEA,OAAOC,aAAP,MAA0B,oBAA1B;AACA,OAAOC,MAAP,MAAmB,aAAnB;AAEA,SAASC,UAAT,EAAqBC,gBAArB,EAAuCC,SAAvC,QAAwD,UAAxD;;AAEA,MAAMC,WAAW,GAAIC,KAAD,IAAW;AAC7B,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BhB,UAAU,CAACU,UAAD,CAA9C;AACA,QAAM,CAACO,UAAD,EAAaC,aAAb,IAA8BlB,UAAU,CAACW,gBAAD,CAA9C;AACA,QAAM,CAACQ,SAAD,EAAYC,YAAZ,IAA4BrB,QAAQ,CAAC,EAAD,CAA1C;;AACA,WAASsB,YAAT,CAAsBC,OAAtB,EAA8B;AAC5B,YAAOA,OAAP;AACE,WAAK,QAAL;AACE,4BAAO,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;;AACF,WAAK,QAAL;AACE,4BAAO,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;;AACF,WAAK,SAAL;AACE,4BAAO,oBAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;;AACF,WAAK,QAAL;AACE,4BAAO,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;;AACF,WAAK,WAAL;AACE,4BAAO,oBAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;;AACF,WAAK,MAAL;AACE,4BAAO,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;;AACF,WAAK,MAAL;AACE,4BAAO,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;;AACF,WAAK,OAAL;AACE,4BAAO,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;;AACF;AACE,4BAAO,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AAlBJ;AAoBD;;AACD,WAASC,SAAT,CAAmBR,UAAnB,EAA8B;AAC5B,YAAOA,UAAP;AACE,WAAK,OAAL;AACE,4BAAO,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;;AACF,WAAK,KAAL;AACE,eAAO,IAAP;;AACF;AACE,eAAO,IAAP;AANJ;AAQD;;AACC,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,SAAD,CAAW,QAAX;AAAoB,IAAA,KAAK,EAAE,CAACI,SAAD,EAAYC,YAAZ,CAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,EAAE,EAAC,WAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAqBG,SAAS,CAACR,UAAD,CAA9B,CADF,eAEE;AAAK,IAAA,EAAE,EAAC,aAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAuBM,YAAY,CAACJ,UAAD,CAAnC,CAFF,CADF,CADF;AASH,CA7CD;;AA+CA,eAAeJ,WAAf","sourcesContent":["import React, { useState, useContext } from 'react';\nimport Items from './Items.js'\nimport SLAs from './SLAs.js'\nimport ActiveAbilities from './ActiveAbilities.js'\nimport SpellInfo from './SpellInfo.js'\nimport PrepSpells from './PrepSpells.js'\nimport Spells from './Spells.js'\nimport PassiveAbilities from './PassiveAbilities.js'\n\nimport AbilityScores from './AbilityScores.js'\nimport Skills from './Skills.js'\n\nimport { ToggleInfo, GetSetDisplayTwo, Selection } from './dnd.js'\n\nconst MainDisplay = (props) => {\n  const [toggleInfo, setToggleInfo] = useContext(ToggleInfo);\n  const [displayTwo, setDisplayTwo] = useContext(GetSetDisplayTwo);\n  const [selection, setSelection] = useState('')\n  function screenSwitch(display){\n    switch(display) {\n      case 'Skills':\n        return <Skills />\n      case 'Scores':\n        return <AbilityScores />\n      case 'Passive':\n        return <PassiveAbilities />\n      case 'Spells':\n        return <Spells />\n      case 'Abilities':\n        return <ActiveAbilities />\n      case 'SLAs':\n        return <SLAs />\n      case 'Prep':\n        return <PrepSpells />\n      case 'Items':\n        return <Items />\n      default:\n        return <Skills />\n    }\n  }\n  function infoSheet(toggleInfo){\n    switch(toggleInfo){\n      case 'Spell':\n        return <SpellInfo />\n      case 'Off':\n        return null\n      default:\n        return null\n    }\n  }\n    return(\n      <div>\n        <Selection.Provider value={[selection, setSelection]}>\n          <div id='infoSheet'>{infoSheet(toggleInfo)}</div>\n          <div id='mainContent'>{screenSwitch(displayTwo)}</div>\n        </Selection.Provider>\n      </div>\n    );\n\n}\n\nexport default MainDisplay\n"]},"metadata":{},"sourceType":"module"}