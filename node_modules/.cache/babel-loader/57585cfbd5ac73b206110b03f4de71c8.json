{"ast":null,"code":"var _jsxFileName = \"/home/highdynamics/repos/dnd_app/src/components/ActiveAbilities.js\";\nimport React, { useState, useContext } from 'react';\nimport { ToggleInfo, Character } from './dnd.js';\n\nconst KnownActiveAbilities = props => {\n  const [toggleInfo, setToggleInfo] = useContext(ToggleInfo);\n  const ability = props.value;\n  const formattedAbility = ability.replace(/_/g, ' ');\n  const buttonAndSpellClass = 'spellButtons ' + ability;\n  return /*#__PURE__*/React.createElement(\"button\", {\n    className: buttonAndSpellClass,\n    onClick: () => setToggleInfo(!toggleInfo),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 5\n    }\n  }, formattedAbility);\n};\n\nconst ActiveAbilities = props => {\n  const character = useContext(Character);\n  const [toggleInfo, setToggleInfo] = useContext(ToggleInfo);\n\n  function displayAbilities() {\n    const abilities = Object.values(character.characterAbilities.active).map(s => /*#__PURE__*/React.createElement(KnownActiveAbilities, {\n      key: s,\n      value: s,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 14\n      }\n    }));\n    return abilities;\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"spellContainer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"spellItems\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"spellList\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }\n  }, displayAbilities())));\n};\n\nexport default ActiveAbilities;","map":{"version":3,"sources":["/home/highdynamics/repos/dnd_app/src/components/ActiveAbilities.js"],"names":["React","useState","useContext","ToggleInfo","Character","KnownActiveAbilities","props","toggleInfo","setToggleInfo","ability","value","formattedAbility","replace","buttonAndSpellClass","ActiveAbilities","character","displayAbilities","abilities","Object","values","characterAbilities","active","map","s"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,UAA1B,QAA4C,OAA5C;AACA,SAASC,UAAT,EAAqBC,SAArB,QAAsC,UAAtC;;AAEA,MAAMC,oBAAoB,GAAIC,KAAD,IAAW;AACtC,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BN,UAAU,CAACC,UAAD,CAA9C;AACA,QAAMM,OAAO,GAAGH,KAAK,CAACI,KAAtB;AACA,QAAMC,gBAAgB,GAAGF,OAAO,CAACG,OAAR,CAAgB,IAAhB,EAAsB,GAAtB,CAAzB;AACA,QAAMC,mBAAmB,GAAG,kBAAkBJ,OAA9C;AACA,sBACE;AAAQ,IAAA,SAAS,EAAEI,mBAAnB;AAAwC,IAAA,OAAO,EAAE,MAAML,aAAa,CAAC,CAACD,UAAF,CAApE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAoFI,gBAApF,CADF;AAGD,CARD;;AASA,MAAMG,eAAe,GAAIR,KAAD,IAAW;AACjC,QAAMS,SAAS,GAAGb,UAAU,CAACE,SAAD,CAA5B;AACA,QAAM,CAACG,UAAD,EAAaC,aAAb,IAA8BN,UAAU,CAACC,UAAD,CAA9C;;AACA,WAASa,gBAAT,GAA2B;AACzB,UAAMC,SAAS,GAAGC,MAAM,CAACC,MAAP,CAAcJ,SAAS,CAACK,kBAAV,CAA6BC,MAA3C,EAAmDC,GAAnD,CACfC,CAAD,iBAAO,oBAAC,oBAAD;AAAsB,MAAA,GAAG,EAAEA,CAA3B;AAA8B,MAAA,KAAK,EAAEA,CAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADS,CAAlB;AAGA,WAAON,SAAP;AACD;;AACD,sBACE;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAG,IAAA,SAAS,EAAC,WAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA0BD,gBAAgB,EAA1C,CADF,CADF,CADF;AAOD,CAhBD;;AAmBA,eAAeF,eAAf","sourcesContent":["import React, { useState, useContext } from 'react'\nimport { ToggleInfo, Character } from './dnd.js'\n\nconst KnownActiveAbilities = (props) => {\n  const [toggleInfo, setToggleInfo] = useContext(ToggleInfo);\n  const ability = props.value\n  const formattedAbility = ability.replace(/_/g, ' ')\n  const buttonAndSpellClass = 'spellButtons ' + ability\n  return(\n    <button className={buttonAndSpellClass} onClick={() => setToggleInfo(!toggleInfo)}>{formattedAbility}</button>\n  )\n}\nconst ActiveAbilities = (props) => {\n  const character = useContext(Character)\n  const [toggleInfo, setToggleInfo] = useContext(ToggleInfo);\n  function displayAbilities(){\n    const abilities = Object.values(character.characterAbilities.active).map(\n      (s) => <KnownActiveAbilities key={s} value={s} />\n    );\n    return abilities;\n  }\n  return(\n    <div className='spellContainer'>\n      <div className='spellItems'>\n        <p className='spellList'>{displayAbilities()}</p>\n      </div>\n    </div>\n  )\n}\n\n\nexport default ActiveAbilities\n"]},"metadata":{},"sourceType":"module"}