{"ast":null,"code":"var _jsxFileName = \"/home/highdynamics/repos/dnd_app/src/components/Items.js\";\nimport React, { useState, useContext } from 'react';\n\nconst ItemsHeld = props => {\n  const [toggleInfo, setToggleInfo] = useContext(ToggleInfo);\n  const item = props.value;\n  const formattedItem = item.replace(/_/g, ' ');\n  const buttonAndSpellClass = 'spellButtons ' + item;\n  return /*#__PURE__*/React.createElement(\"button\", {\n    className: buttonAndSpellClass,\n    onClick: () => setToggleInfo(!toggleInfo),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 5\n    }\n  }, formattedItem);\n};\n\nconst Items = props => {\n  const character = useContext(Character);\n  const [toggleInfo, setToggleInfo] = useContext(ToggleInfo);\n\n  function displayItems() {\n    const items = Object.values(character.items).map(s => /*#__PURE__*/React.createElement(ItemsHeld, {\n      key: s,\n      value: s,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 14\n      }\n    }));\n    return items;\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }\n  }, \"Items\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"spellContainer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"spellItems\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"spellList\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 11\n    }\n  }, displayItems()))));\n};\n\nexport default Items;","map":{"version":3,"sources":["/home/highdynamics/repos/dnd_app/src/components/Items.js"],"names":["React","useState","useContext","ItemsHeld","props","toggleInfo","setToggleInfo","ToggleInfo","item","value","formattedItem","replace","buttonAndSpellClass","Items","character","Character","displayItems","items","Object","values","map","s"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,UAA1B,QAA4C,OAA5C;;AAEA,MAAMC,SAAS,GAAIC,KAAD,IAAW;AAC3B,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BJ,UAAU,CAACK,UAAD,CAA9C;AACA,QAAMC,IAAI,GAAGJ,KAAK,CAACK,KAAnB;AACA,QAAMC,aAAa,GAAGF,IAAI,CAACG,OAAL,CAAa,IAAb,EAAmB,GAAnB,CAAtB;AACA,QAAMC,mBAAmB,GAAG,kBAAkBJ,IAA9C;AACA,sBACE;AAAQ,IAAA,SAAS,EAAEI,mBAAnB;AAAwC,IAAA,OAAO,EAAE,MAAMN,aAAa,CAAC,CAACD,UAAF,CAApE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAoFK,aAApF,CADF;AAGD,CARD;;AASA,MAAMG,KAAK,GAAIT,KAAD,IAAW;AACvB,QAAMU,SAAS,GAAGZ,UAAU,CAACa,SAAD,CAA5B;AACA,QAAM,CAACV,UAAD,EAAaC,aAAb,IAA8BJ,UAAU,CAACK,UAAD,CAA9C;;AACA,WAASS,YAAT,GAAuB;AACrB,UAAMC,KAAK,GAAGC,MAAM,CAACC,MAAP,CAAcL,SAAS,CAACG,KAAxB,EAA+BG,GAA/B,CACXC,CAAD,iBAAO,oBAAC,SAAD;AAAW,MAAA,GAAG,EAAEA,CAAhB;AAAmB,MAAA,KAAK,EAAEA,CAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADK,CAAd;AAGA,WAAOJ,KAAP;AACD;;AACD,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,eAEE;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAG,IAAA,SAAS,EAAC,WAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA0BD,YAAY,EAAtC,CADF,CADF,CAFF,CADF;AAUD,CAnBD;;AAqBA,eAAeH,KAAf","sourcesContent":["import React, { useState, useContext } from 'react';\n\nconst ItemsHeld = (props) => {\n  const [toggleInfo, setToggleInfo] = useContext(ToggleInfo);\n  const item = props.value\n  const formattedItem = item.replace(/_/g, ' ')\n  const buttonAndSpellClass = 'spellButtons ' + item\n  return(\n    <button className={buttonAndSpellClass} onClick={() => setToggleInfo(!toggleInfo)}>{formattedItem}</button>\n  )\n}\nconst Items = (props) => {\n  const character = useContext(Character)\n  const [toggleInfo, setToggleInfo] = useContext(ToggleInfo);\n  function displayItems(){\n    const items = Object.values(character.items).map(\n      (s) => <ItemsHeld key={s} value={s} />\n    );\n    return items;\n  }\n  return(\n    <div>\n      <h1>Items</h1>\n      <div className='spellContainer'>\n        <div className='spellItems'>\n          <p className='spellList'>{displayItems()}</p>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Items\n"]},"metadata":{},"sourceType":"module"}