{"version":3,"sources":["dnd.js","serviceWorker.js","index.js"],"names":["useState","React","character","name","type","hitPoints","dieSize","total","damage","temporaryHitPoints","armorClass","ac","armor","shield","dexterity","size","naturalArmor","deflection","misc","touch","flatFooted","alignment","abilities","score","strength","constitution","intelligence","wisdom","charisma","modifier","ability","Math","floor","primaryModifier","speed","level","class","skills","appraise","balance","bluff","climb","concentration","craft","diplomacy","diguise","escapeArtist","forgery","gatherInformation","heal","hide","intimidate","jump","listen","moveSilently","ride","search","senseMotive","spot","survival","swim","useRope","stealth","perception","classSkills","knowledgeArcana","knowledgeDungeoneering","knowledgeReligion","knowledgePlanes","haha","magic","spellcaster","arcane","divine","spells","zero","one","two","three","four","five","six","seven","eight","nine","spellbook","spellsPerDay","bonusSpellsPerDay","ceil","spellSave","items","str","dex","con","int","wis","cha","strMod","dexMod","conMod","intMod","wisMod","chaMod","ClassSkillsListItem","props","className","skillPoints","SkillsListItem","Skills","skillsBlock","Object","keys","map","skill","key","toLowerCase","classSkillsBlock","id","style","listStyleType","KnownSpells","toggleInfo","setToggleInfo","spell","value","formattedSpell","replace","buttonAndSpellClass","onClick","Spells","displaySpells","values","s","spellCodeBlock","levelNum","levelRoman","totalSpells","Stats","Items","x","join","BasicInfo","Component","toggle","setToggle","health","t","classList","c","CharacterType","CharacterClasses","MainDisplay","display","screenSwitch","Navbar","statIcon","spellIcon","itemIcon","navButtonCodeBlock","icon","setDisplay","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.7374e988.chunk.js","sourcesContent":["import React from 'react';\nimport './dnd.css';\n\nconst { useState } = React;\n\n/******************************Character Info****************************/\nconst character = {\n  name: 'Arn Hachem',\n  type: ['human', 'sanctified', 'deathless', 'spellstitched', 'archlich'],\n  hitPoints: {\n    dieSize: 12,\n    total: 255,\n    damage: 0,\n    temporaryHitPoints: 0,\n  },\n  armorClass: {\n    ac: {\n      total: 37,\n      armor: 6,\n      shield: 0,\n      dexterity: 12,\n      size: 0,\n      naturalArmor: 5,\n      deflection: 4,\n      misc: 0\n    },\n    touch: 22,\n    flatFooted: 23\n  },\n  size: 'Medium',\n  alignment: 'Lawful-Good',\n  abilities: {\n    score: {\n      strength: 18,\n      dexterity: 24,\n      constitution: '--',\n      intelligence: 22,\n      wisdom: 17,\n      charisma: 35\n    },\n    modifier: (ability) => {\n      if(character.abilities.score[ability] === '--'){\n        return '--'\n      }\n      return Math.floor((character.abilities.score[ability] - 10) / 2)\n    },\n    primaryModifier: (ability) => {return Math.floor((character.abilities.score[ability] - 10) / 2)}\n  },\n  speed: 30,\n  level: '20',\n  class: ['Sorcerer(1)', 'Mindtender(2)', 'Fleshwarper(2)', 'Malconvoker(7)', 'Binder(1)', 'Bard(1)', 'Master of Masks(5)'],\n  skills: {\n    appraise: 10,\n    balance: 12,\n    bluff: 41,\n    climb: 4,\n    concentration: 27,\n    craft: 13,\n    diplomacy: 18,\n    diguise: 39,\n    escapeArtist: 12,\n    forgery: 6,\n    gatherInformation: 9,\n    heal: 16,\n    hide: 25,\n    intimidate: 19,\n    jump: 4,\n    listen: 4,\n    moveSilently: 12,\n    ride: 12,\n    search: 6,\n    senseMotive: 21,\n    spot: 4,\n    survival: 4,\n    swim: 12,\n    useRope: 12,\n    stealth: 28,\n    perception: 19\n  },\n  classSkills: {\n    knowledgeArcana: 26,\n    knowledgeDungeoneering: 14,\n    knowledgeReligion: 16,\n    knowledgePlanes: 8,\n    haha: 'haha'\n  },\n  magic: {\n    spellcaster: true,\n    type: {\n      arcane: true,\n      divine: false,\n    },\n    spells: {\n      zero: ['Mending', 'Arcane_Mark', 'Ghost_Sound', 'Detect_Magic', 'Mage_Hand', 'Message', 'Light', 'Read Magic', 'Acid_Splash', 'Lullaby', 'Know_Direction', 'Open/Close', 'Prestidigitation'],\n      one: ['Silent_Image', 'Disguise_Self', 'Magic_Missile', 'Mage_Armor', 'Charm_Person'],\n      two: ['Ghoul_Touch', 'Arcane_Lock', 'Knock', 'Alter_Fortune', 'Scorching_Ray'],\n      three: ['Shrink_Item', 'Tiny_Hut', 'Ray_of_Exhaustion', 'Explosive_Runes'],\n      four: ['Resilient_Sphere', 'Create_Fetch', 'Dimension_Door', 'Polymorph'],\n      five: ['Telekinesis', 'Sending', 'Passwall', 'Planar_Binding,_Lesser', 'Feeblemind'],\n      six: ['Disintigrate', 'Freezing_Sphere', 'Planar_Binding', 'Permanent_Image'],\n      seven: ['Teleport_Object', 'Stun_Ray', 'Waves_of_Exhaustion'],\n      eight: ['Polymorph_any_Object', 'Horrid_Wilting', 'Planar_Binding,_Greater', 'Last_Judgment'],\n      nine: ['Replicate Casting', 'Sphere of Ultimate Destruction', 'Crushing_Hand']\n    },\n    spellbook: {\n      zero: ['Arcane_Mark', 'Prestidigitation', 'Mage Hand', 'Resistance', 'Disrupt Undead', 'Touch of Fatigue', 'Mending', 'Message', 'Open/Close', 'Preserve Organ', 'No-Light', 'Slash Tongue', 'Silent Portal'],\n      one: ['a'],\n      two: ['a'],\n      three: ['a'],\n      four: ['a'],\n      five: ['a'],\n      six: ['a'],\n      seven: ['a'],\n      eight: ['a'],\n      nine: ['a'],\n    },\n    spellsPerDay: {\n      zero: 8,\n      one: 6,\n      two: 6,\n      three: 6,\n      four: 6,\n      five: 6,\n      six: 6,\n      seven: 6,\n      eight: 6,\n      nine: 6,\n    },\n    bonusSpellsPerDay: (level) => {\n      return Math.ceil((character.abilities.primaryModifier('charisma') - (level - 1)) / 4)\n    }, //formula needs fixing\n    spellSave: () => {return Math.floor(10 + character.abilities.primaryModifier('charisma'))}\n  },\n  items: [\n    'Mesmerist\\'s Gloves', 'Nolzure\\'s Orb', 'Vanisher Cloak', 'GateBreaker Ballista Bolt'\n  ],\n}\nconst str = character.abilities.score.strength\nconst dex = character.abilities.score.dexterity\nconst con = character.abilities.score.constitution\nconst int = character.abilities.score.intelligence\nconst wis = character.abilities.score.wisdom\nconst cha = character.abilities.score.charisma\nconst strMod = character.abilities.modifier('strength')\nconst dexMod = character.abilities.modifier('dexterity')\nconst conMod = character.abilities.modifier('constitution')\nconst intMod = character.abilities.modifier('intelligence')\nconst wisMod = character.abilities.modifier('wisdom')\nconst chaMod = character.abilities.modifier('charisma')\n/******************************Character Info****************************/\nconst UseSpell = (props) => {\n  const newArray = Object.values(character.magic.spells.zero).map(spell => spell)\n  function spellList(level) {\n    if (character.magic.spells[level].length == 0){\n      return 'LEVEL UP FIRST'\n    }else if (Array.isArray(character.magic.spells[level])) {\n      return '| ' + Object.values(character.magic.spells[level]).map(x => (\n        <a href='#' key={x}>{x}</a>))\n        .join(' | ') + ' |'\n    }\n    return '| ' + character.magic.spells[level] + ' |'\n  }\n  return (\n    <div>\n      <h1>Level 1</h1>\n      <p>{Object.values(character.magic.spells.one).map(x => (\n        <a href='#'>{`${x}`}</a>\n      ))}</p>\n    </div>\n  )\n}\nconst Spellbook = (props) => {\n  const [toggleInfo, setToggleInfo] = useState(false);\n  const spell = props.value\n  const formattedSpell = spell.replace(/\\_/g, ' ')\n  const buttonAndSpellClass = 'spellButtons ' + spell\n  return(\n    <button className={buttonAndSpellClass} onClick={() => setToggleInfo(!toggleInfo)}>{formattedSpell}</button>\n  )\n}\nconst PrepSpells = (props) => {\n  function casterType() {\n    if (character.magic.type.arcane && character.magic.type.divine){\n      return 'Cantrips & Orisons'\n    } else if (character.magic.type.divine){\n      return 'Orisons'\n    } else if (character.magic.type.arcane){\n      return 'Cantrips'\n    }\n  }\n  function displaySpells(level){\n    const spells = Object.values(character.magic.spellbook[level]).map(\n      (s) => <Spellbook key={s} value={s} />\n    );\n    return spells;\n  }\n  function totalSpells(level, levelNum) {\n    return character.magic.spellsPerDay[level] + character.magic.bonusSpellsPerDay(levelNum)\n  }\n  function spellCodeBlock(level, levelNum, levelRoman){\n    return (\n      <div className='spellItems'>\n        <div className='spellLevelWrapper'>\n          <h2 className='spellLevelHeader'>Level {levelRoman}</h2>\n          <em className='remainingSpells'>{totalSpells(level, levelNum)} remaining today</em>\n        </div>\n        <p className='spellList'>{displaySpells(level)}</p>\n        <hr/>\n      </div>\n    )\n  }\n  return (\n    <>\n      <div>\n      <div className='spellContainer'>\n        <div className='spellItems'>\n          <div className='spellLevelWrapper'>\n            <h2 className='spellLevelHeader'>{casterType()}</h2>\n            <em className='remainingSpells'>{totalSpells('zero', 0)} remaining today</em>\n          </div>\n          <p className='spellList'>{displaySpells('zero')}</p>\n          <hr/>\n        </div> {/*0*/}\n        {spellCodeBlock('one', 1, 'I')}\n        {spellCodeBlock('two', 2, 'II')}\n        {spellCodeBlock('three', 3, 'III')}\n        {spellCodeBlock('four', 4, 'IV')}\n        {spellCodeBlock('five', 5, 'V')}\n        {spellCodeBlock('six', 6, 'VI')}\n        {spellCodeBlock('seven', 7, 'VII')}\n        {spellCodeBlock('eight', 8, 'VIII')}\n        {spellCodeBlock('nine', 9, 'IX')}\n      </div>\n    </div>\n    </>\n  )\n}\n\nconst ClassSkillsListItem = (props) => {\n  return <li className='skills'>{props.classSkills}{props.skillPoints}</li>\n}\nconst SkillsListItem = (props) => {\n  return <li className='skills'>{props.skills}{props.skillPoints}</li>\n}\nconst Skills = (props) =>  {\n  let skillsBlock = Object.keys(character.skills).map((skill) =>\n    (\n      <div className='skillBorderTwo'>\n        <SkillsListItem\n          key={skill}\n          skills={skill.toLowerCase()}\n          skillPoints={character.skills[skill]}\n        />\n      </div>\n    )\n  )\n  let classSkillsBlock = Object.keys(character.classSkills).map((skill) =>\n      (\n        <div className='skillBorderTwo'>\n          <ClassSkillsListItem\n            key={skill}\n            skills={skill.toLowerCase()}\n            skillPoints={character.classSkills[skill]}\n          />\n        </div>\n      )\n    );\n  return(\n    <>\n      <h1 id='skillsHeader'>Skills</h1>\n      <ul id='skills' style={{listStyleType: 'none'}}>\n        {skillsBlock}{classSkillsBlock}\n      </ul>\n    </>\n  );}\n\nconst KnownSpells = (props) => {\n  const [toggleInfo, setToggleInfo] = useState(false);\n  const spell = props.value\n  const formattedSpell = spell.replace(/\\_/g, ' ')\n  const buttonAndSpellClass = 'spellButtons ' + spell\n  return(\n    <button className={buttonAndSpellClass} onClick={() => setToggleInfo(!toggleInfo)}>{formattedSpell + ' \\u221e'}</button>\n  )\n}\n\nconst AbilitySelector = (props) => {\n\n}\nconst Spells = (props) => {\n  //cantrips or orisons? or both?\n  function casterType() {\n    if (character.magic.type.arcane && character.magic.type.divine){\n      return 'Cantrips & Orisons'\n    } else if (character.magic.type.divine){\n      return 'Orisons'\n    } else if (character.magic.type.arcane){\n      return 'Cantrips'\n    }\n  }\n  function displaySpells(level){\n    const spells = Object.values(character.magic.spells[level]).map(\n      (s) => <KnownSpells key={s} value={s} />\n    );\n    return spells;\n  }\n  //total castings per day\n  function totalSpells(level, levelNum) {\n    return character.magic.spellsPerDay[level] + character.magic.bonusSpellsPerDay(levelNum)\n  }\n  //condense spell block into function\n  function spellCodeBlock(level, levelNum, levelRoman){\n    return (\n      <div className='spellItems'>\n      <div className='spellLevelWrapper'>\n      <h2 className='spellLevelHeader'>Level {levelRoman}</h2>\n      <em className='remainingSpells'>{totalSpells(level, levelNum)} remaining today</em>\n      </div>\n      <p className='spellList'>{displaySpells(level)}</p>\n      <hr/>\n      </div>\n    )\n  }\n  return (\n    <div>\n      <div className='spellContainer'>\n        <div className='spellItems'>\n          <div className='spellLevelWrapper'>\n            <h2 className='spellLevelHeader'>{casterType()}</h2>\n            <em className='remainingSpells'>{character.magic.spellsPerDay.zero} remaining today</em>\n          </div>\n          <p className='spellList'>{displaySpells('zero')}</p>\n          <hr/>\n        </div>\n        {spellCodeBlock('one', 1, 'I')}\n        {spellCodeBlock('two', 2, 'II')}\n        {spellCodeBlock('three', 3, 'III')}\n        {spellCodeBlock('four', 4, 'IV')}\n        {spellCodeBlock('five', 5, 'V')}\n        {spellCodeBlock('six', 6, 'VI')}\n        {spellCodeBlock('seven', 7, 'VII')}\n        {spellCodeBlock('eight', 8, 'VIII')}\n        {spellCodeBlock('nine', 9, 'IX')}\n      </div>\n    </div>\n  );\n}\n\nconst Stats = (props) => {\n  return (\n    <div>\n    <div className='statsContainer'>\n    <h1 id='abilitiesHeader'>Abilities</h1>\n    <div id='abilities'>\n    <p className='abilities'>STR: {str} | {strMod}</p>\n    <p className='abilities'>DEX: {dex} | {dexMod}</p>\n    <p className='abilities'>CON: {con} | {conMod}</p>\n    <p className='abilities'>INT: {int} | {intMod}</p>\n    <p className='abilities'>WIS: {wis} | {wisMod}</p>\n    <p className='abilities'>CHA: {cha} | {chaMod}</p>\n    </div>\n    </div>\n    <div className='skillsContainer'>\n    <Skills />\n    </div>\n    </div>\n  );\n}\n\nconst Items = (props) => {\n  return (\n    <div>\n      <h1>Items</h1>\n      <p>| {character.items.map(x => x).join(' | ')} |</p>\n    </div>\n  );\n}\n\nclass Actions extends React.Component{\n  constructor(props){\n    super(props)\n    this.state = {\n      action: 'default'\n    }\n  }\n  render() {\n    return (\n      <div>\n        <button id='4' onClick={this.props.click}>Prep Spells</button>\n        <button id='5' onClick={this.props.click}>Use Spell</button>\n        <button>Full Rest</button>\n        <button id='6' onClick={this.props.click}>Fight</button>\n      </div>\n    );\n  }\n}\n\nconst BasicInfo = (props) => {\n//toggle for 'more' button\n  const [toggle, setToggle] = useState(false);\n//display conditional more/less\n  const moreLess = () => {\n    if(toggle){\n      return '(less)'\n    } else {\n      return '(more)'\n    }\n  }\n  const health = (\n      character.hitPoints.total - character.hitPoints.damage + character.hitPoints.temporaryHitPoints\n  );\n  const type = (character.type).map(\n    (t) => <CharacterType key={t} value={t} />\n  );\n  const classList = (character.class).map(\n    (c) => <CharacterClasses key={c} value={c} />\n  );\n  return (\n      <div>\n        <div className='topContainer'>\n            <button className={(toggle ? 'moreButtonOn' : 'moreButtonOff')} onClick={() => setToggle(!toggle)}>\n              <h1 id='nameAndLevel'>{character.name} ({character.level})</h1>\n              <em id='moreLess'>{moreLess()}</em>\n            </button>\n\n          {toggle == true &&\n            <div id='characterInfo'>\n              <div id='characterType'>type: <br /> {type}</div>\n              <ul id='classList'>class: <br /> {classList}</ul>\n            </div>\n          }\n          <p id='hp'>hp: {health}</p>\n          <p id='ac'>ac: {character.armorClass.ac.total}</p>\n        </div>\n      </div>\n    );\n}\nconst CharacterType = (props) => {\n  return(\n    <span>{props.value} / </span>\n  )\n}\nconst CharacterClasses = (props) => {\n  return(\n    <li>{props.value}</li>\n  )\n}\n\nconst MainDisplay = (props) => {\n  function screenSwitch(display) {\n    switch(display) {\n      case 'stats':\n        return <Stats />\n      case 'spells':\n        return <Spells />\n      case 'items':\n        return <Items />\n    }\n  }\n\n    return(\n      <div>\n        {screenSwitch(props.display)}\n      </div>\n    );\n\n}\n\nconst Navbar = (props) => {\n  const statIcon = <i id='statIcon' className=\"far fa-chart-bar\"></i>;\n  const spellIcon = <i id=\"spellIcon\" className=\"fas fa-hand-sparkles\"></i>;\n  const itemIcon = <i id='itemIcon' className=\"fas fa-scroll\"></i>;\n  function navButtonCodeBlock(name, icon){\n    return(\n      <button id={name}\n              onClick={() => props.setDisplay(name)}\n              className={(props.display == name ? 'navbarItemsOn' : 'navbarItemsOff')}>\n                      {icon}\n      </button>\n    )\n  }\n  return (\n    <div>\n      <ul id='navbarContainer'>\n        {navButtonCodeBlock('stats', statIcon)}\n        {navButtonCodeBlock('spells', spellIcon)}\n        {navButtonCodeBlock('items', itemIcon)}\n      </ul>\n    </div>\n  );\n}\nconst App = () => {\n  const [display, setDisplay] = useState('stats')\n  return (\n    <div id='appWrapper'>\n      <div>\n        <div id='topWrapper'>\n          <BasicInfo />\n          <Navbar display={display} setDisplay={setDisplay} />\n        </div>\n        <div id='mainContent'>\n          <MainDisplay display={display} setDisplay={setDisplay} />\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './dnd.css';\nimport App from './dnd';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}