{"version":3,"sources":["recoilState.js","components/Modal/Modal.js","components/Modal/AllSpellInfo/AllSpellInfo.js","components/SpellInfo/SpellInfo.js","utilities/utilities.js","components/Navbars/Navbars.js","components/TopComponent/TopComponent.js","components/BasicInfo/BasicInfo.js","components/Items/Items.js","components/SLAs/SLAs.js","components/ActiveAndPassiveAbilities/ActiveAndPassiveAbilities.js","components/Modal/AbilityScores/AbilityScores.js","components/Modal/HitPointInfo/HitPointInfo.js","components/Modal/ArmorClassInfo/ArmorClassInfo.js","components/Modal/DefenseInfo/DefenseInfo.js","components/PrepSpells/PrepSpells.js","components/Spells/Spells.js","components/Skills/Skills.js","components/Attacks/Attacks.js","components/More/More.js","components/Edit/EditSkills/EditSkillForm.js","components/Edit/EditSkills/NewSkillForm.js","components/Edit/EditSkills/EditSkills.js","components/Edit/EditAbilities/EditAbilities.js","components/Edit/EditSpells/EditSpells.js","components/Edit/EditSLAs/EditSLAs.js","components/Edit/EditAttacks/EditAttacks.js","components/Edit/EditItems/EditItems.js","components/Edit/EditCharacter/EditCharacter.js","components/AddCharacter/AddCharacter.js","components/Modal/AbilityInfo/AbilityInfo.js","components/Modal/SLAInfo/SLAInfo.js","components/Modal/ItemInfo/ItemInfo.js","components/MainDisplay/MainDisplay.js","components/dnd.js","serviceWorker.js","server/characters/index.js","server/characters/Arn_Hachem.js","server/spells/index.js","server/index.js","index.js"],"names":["compendiumState","atom","key","default","characterState","damageState","temporaryHitPointsState","primaryModifierState","diceRollState","mainContentState","secondaryNavbarState","modalTypeState","selectionState","emptySpellsArray","innateSpellsCastState","preppedSpellsState","preppedSpellsCastState","slaState","Modal","props","onClose","children","rest","useEffect","document","body","classList","add","remove","className","onClick","CastingSpell","compendium","useRecoilValue","selection","addUsedSpell","matchedSpell","spells","find","name","id","undefined","displayCompendiumInfo","PreppingSpell","CastingPreppedSpell","removeUsedSpell","disableSpell","UsedPreppedSpell","disabled","CompendiumSpell","property","formattedValue","value","replace","input","trim","formatProperty","SpellInfo","character","useRecoilState","modalType","setModalType","innateSpellsCast","setInnateSpellsCast","preppedSpells","setPreppedSpells","preppedSpellsCast","setPreppedSpellsCast","getSpellLevel","innatePrepOrPrepped","foundLevel","Object","keys","magic","forEach","level","values","includes","spellbook","lvlConversion","zero","one","two","three","four","five","six","seven","eight","nine","levelString","newArray","clone","push","used","findIndex","item","splice","chooseModal","object","JSON","parse","stringify","size","roll20","mod","use","roll","Math","floor","random","edgeRollClassAssignment","map","getAbilityMod","ability","score","abilities","getAC","ac","armorClass","armor","deflection","dexterity","misc","naturalArmor","shield","textClassToGreenOrRed","current","expected","camelCaseToTitleCase","string","x","charAt","toUpperCase","slice","NavButtonCodeBlock","mainContent","setMainContent","AbilitySelector","StatsSelector","SecondaryNavbar","secondaryNavbar","display","navSwitch","PrimaryNavbar","setSecondaryNavbar","useSetRecoilState","statIcon","abilityIcon","itemIcon","navButtonCodeBlock","icon","secondaryName","setBothDisplays","CharacterType","CharacterClasses","TopComponent","useState","toggle","setToggle","setpreppedSpells","damage","setDamage","fullRest","max","type","t","class","c","BasicInfo","rollResult","temporaryHitPoints","welcome","currentHP","hitPoints","total","currentAC","textColorClass","toggleModal","ItemsHeld","formattedItem","buttonAndSpellClass","Items","items","s","romans","numStrings","KnownSLAs","setSelection","usedSLAs","uses","frequency","formattedName","modalDestination","indexOfMatch","checkForMatch","timesUsed","displayUsesLeft","SLACodeBlock","levelNum","displaySLAs","levelRoman","Array","isArray","slas","SLAs","arcane","divine","_","i","formatType","KnownActiveAbilities","formattedAbility","ActiveAbilities","characterAbilities","active","a","KnownPassiveAbilities","PassiveAbilities","passive","ActiveAndPassiveAbilities","AbilityScores","setRollResult","abilityScore","modifier","str","strength","dex","con","constitution","int","intelligence","wis","wisdom","cha","charisma","strMod","dexMod","conMod","intMod","wisMod","chaMod","renderAbilityScore","abilityScoreCodeBlock","abilityString","abilityMod","HitPointInfo","tempHP","setTempHP","damageInput","setDamageInput","tempHPInput","setTempHPInput","handleDamageSubmit","addOrSubtract","handleTempHPSubmit","onChange","e","Number","target","ArmorClassItem","ArmorClassInfo","armorClassItems","entries","EnergyResistanceItem","defense","energyResistance","WillSaveItem","ReflexSaveItem","FortitudeSaveItem","DefenseInfo","setRoll","getMod","fortSave","getSavesTotalValue","refSave","willSave","energyResistanceItems","saves","fortitude","reduce","y","reflex","will","getSavesBreakdown","damageReduction","amount","weakness","spellResistance","KnownSpell","spell","displayInfo","Spellbook","CasterType","SpellCodeBlock","primaryModifier","remainingSpells","totalSpells","length","PrepSpells","PreppedSpellCast","PreppedSpellsCast","psc","PreppedSpell","PreppedSpells","ps","KnownSpells","getDifficultyClass","Spells","spellsPerDay","SkillsListItem","skill","formattedSkill","skillPoints","skills","classSkill","renderClassSkillsClassName","style","float","Skills","skillsBlock","sort","filter","ranks","miscModifier","Attacks","More","magicToggle","setMagicToggle","EditSkillForm","setCharacter","skillPath","isClassSkill","setIsClassSkill","setAbility","setRanks","setMiscModifier","setDisplay","armorCheck","setArmorCheck","handleChange","onSubmit","preventDefault","updatedCharacter","fetch","method","then","mutate","htmlFor","defaultChecked","min","NewSkillForm","newSkillForm","setNewSkillForm","newName","setNewName","EditSkills","skillForm","EditAbilities","EditSpells","EditSLAs","EditAttacks","EditItems","EditCharacter","AddCharacter","AbilityInfo","SLAInfo","setUsedSLAs","logUsedSLA","checkForUseState","ItemInfo","MainDisplay","infoSheet","screenSwitch","ceil","bonusSpellsPerDay","App","title","LoadApp","charactersResponse","useSWR","data","spellsResponse","setCompendium","setPrimaryModifier","characters","primary","Boolean","window","location","hostname","match","dieSize","acid","cold","electricity","fire","sonic","base","alignment","speed","Appraise","Balance","Bluff","Climb","Concentration","Craft_Tailor","Decipher_Script","Diplomacy","Disable_Device","Diguise","Escape_Artist","Forgery","Gather_Information","Heal","Hide","Intimidate","Jump","Knowledge_Arcana","Knowledge_Dungeoneering","Knowledge_Religion","Knowledge_Planes","Knowledge_History","Listen","Move_Silently","Perception","Perform_Acting","Perform_Dancing","Ride","Search","SenseMotive","Spellcraft","Spot","Stealth","Survival","Swim","Use_Magic_Device","Use_Rope","spellcaster","components","castingTime","range","duration","savingThrow","description","effect","source","area","environment","server","Server","models","Model","serializers","application","RestSerializer","seeds","char","create","routes","this","namespace","get","schema","all","post","request","requestBody","makeServer","ReactDOM","render","StrictMode","fetcher","res","json","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.ba442968.chunk.js","sourcesContent":["import { atom } from \"recoil\";\n\nexport const compendiumState = atom({\n  key: \"compendiumState\",\n  default: null,\n});\n\nexport const characterState = atom({\n  key: \"characterState\",\n  default: null,\n});\n\nexport const damageState = atom({\n  key: \"damageState\",\n  default: 0,\n});\n\nexport const temporaryHitPointsState = atom({\n  key: \"temporaryHitPointsState\",\n  default: 0,\n});\n\nexport const primaryModifierState = atom({\n  key: \"primaryModifierState\",\n  default: null,\n});\n\nexport const diceRollState = atom({\n  key: \"diceRollState\",\n  default: \"\",\n});\nexport const mainContentState = atom({\n  key: \"mainContentState\",\n  default: \"Skills\",\n});\nexport const secondaryNavbarState = atom({\n  key: \"secondaryNavbarDisplayState\",\n  default: \"stats\",\n});\nexport const modalTypeState = atom({\n  key: \"modalTypeState\",\n  default: \"Off\",\n});\nexport const selectionState = atom({\n  key: \"selectionState\",\n  default: \"\",\n});\n\nexport const emptySpellsArray = [[], [], [], [], [], [], [], [], [], []];\nexport const innateSpellsCastState = atom({\n  key: \"innateSpellsCastState\",\n  default: emptySpellsArray,\n});\nexport const preppedSpellsState = atom({\n  key: \"preppedSpellsState\",\n  default: emptySpellsArray,\n});\nexport const preppedSpellsCastState = atom({\n  key: \"preppedSpellsCastState\",\n  default: emptySpellsArray,\n});\nexport const slaState = atom({\n  key: \"slaState\",\n  default: [],\n});\n","import React, { useEffect } from \"react\";\nimport \"./Modal.css\";\n\nexport const Modal = (props) => {\n  const { onClose, children, ...rest } = props;\n\n  useEffect(function blockBodyScrolling() {\n    document.body.classList.add(\"noScroll\");\n\n    return () => {\n      document.body.classList.remove(\"noScroll\");\n    };\n  }, []);\n\n  return (\n    <div className=\"modal\" {...rest}>\n      <button className=\"modal_closeButton\" onClick={onClose}>\n        x\n      </button>\n      {children}\n    </div>\n  );\n};\n","import React from \"react\";\nimport { useRecoilValue } from \"recoil\";\n\nimport { compendiumState } from \"../../../recoilState\";\nimport { displayCompendiumInfo } from \"../../../utilities/utilities\";\nimport \"./AllSpellInfo.css\";\n\nexport const CastingSpell = (props) => {\n  const compendium = useRecoilValue(compendiumState);\n  const { selection, addUsedSpell } = props;\n  const matchedSpell = compendium.spells.find(({ name }) => name === selection);\n  return (\n    <>\n      <button\n        id=\"castSpell\"\n        className=\"confirmSpellButton\"\n        onClick={() => addUsedSpell(selection, \"innate\")}\n      >\n        Cast Spell\n      </button>\n      {matchedSpell !== undefined && (\n        <div>{displayCompendiumInfo(matchedSpell)}</div>\n      )}\n    </>\n  );\n};\nexport const PreppingSpell = (props) => {\n  const compendium = useRecoilValue(compendiumState);\n  const { selection, addUsedSpell } = props;\n  const matchedSpell = compendium.spells.find(({ name }) => name === selection);\n\n  return (\n    <>\n      <button\n        id=\"prepSpell\"\n        className=\"confirmSpellButton\"\n        onClick={() => addUsedSpell(selection, \"prep\")}\n      >\n        Prep Spell\n      </button>\n      {matchedSpell !== undefined && (\n        <div>{displayCompendiumInfo(matchedSpell)}</div>\n      )}\n    </>\n  );\n};\nexport const CastingPreppedSpell = (props) => {\n  const compendium = useRecoilValue(compendiumState);\n  const { selection, addUsedSpell, removeUsedSpell } = props;\n  const matchedSpell = compendium.spells.find(({ name }) => name === selection);\n\n  function disableSpell(selection) {\n    addUsedSpell(selection, \"PreppedCast\");\n    removeUsedSpell(selection, \"prep\");\n  }\n  return (\n    <>\n      <button\n        className=\"confirmSpellButton\"\n        onClick={() => disableSpell(selection)}\n      >\n        Use Prepped Spell\n      </button>{\" \"}\n      ||{\" \"}\n      <button\n        id=\"removePrepSpell\"\n        className=\"confirmSpellButton\"\n        onClick={() => removeUsedSpell(selection, \"prep\")}\n      >\n        Cancel Prep\n      </button>\n      {matchedSpell !== undefined && (\n        <div>{displayCompendiumInfo(matchedSpell)}</div>\n      )}\n    </>\n  );\n};\nexport const UsedPreppedSpell = (props) => {\n  const compendium = useRecoilValue(compendiumState);\n  const { selection, addUsedSpell, removeUsedSpell } = props;\n  const matchedSpell = compendium.spells.find(({ name }) => name === selection);\n\n  function disableSpell(selection) {\n    addUsedSpell(selection, \"preppedCast\");\n    removeUsedSpell(selection, \"prep\");\n  }\n  return (\n    <>\n      <button\n        className=\"confirmSpellButton\"\n        onClick={() => disableSpell(selection)}\n        disabled\n      >\n        Already Used\n      </button>\n      {matchedSpell !== undefined && (\n        <div>{displayCompendiumInfo(matchedSpell)}</div>\n      )}\n    </>\n  );\n};\n","import React from \"react\";\nimport { useRecoilValue, useRecoilState } from \"recoil\";\n\nimport {\n  modalTypeState,\n  selectionState,\n  preppedSpellsState,\n  innateSpellsCastState,\n  preppedSpellsCastState,\n  characterState,\n} from \"../../recoilState.js\";\nimport { clone } from \"../../utilities/utilities.js\";\nimport { Modal } from \"../Modal/Modal\";\nimport {\n  CastingSpell,\n  PreppingSpell,\n  CastingPreppedSpell,\n  UsedPreppedSpell,\n} from \"../Modal/AllSpellInfo/AllSpellInfo\";\nimport \"./SpellInfo.css\";\n\nexport const CompendiumSpell = (props) => {\n  const property = props.property;\n  const value = props.value;\n  function formatProperty(input) {\n    switch (input) {\n      case \"name:\":\n      case \"type:\":\n        return \"\";\n      case \"description:\":\n        return <hr id=\"spellSheetHR\" />;\n      default:\n        const spacedProperty = input.replace(/([A-Z])/g, \" $1\").trim();\n        return spacedProperty;\n    }\n  }\n  const formattedValue = value.replace(/_/g, \" \");\n\n  return (\n    <>\n      {property !== \"id\" && (\n        <div className=\"infoSheetContent\" id={property}>\n          <span className=\"property\">{formatProperty(property + \":\")} </span>\n          <span className=\"value\">{formattedValue}</span>\n        </div>\n      )}\n    </>\n  );\n};\n\nconst SpellInfo = (props) => {\n  //bring in react/recoil context\n  const character = useRecoilValue(characterState);\n  const [modalType, setModalType] = useRecoilState(modalTypeState);\n  const selection = useRecoilValue(selectionState);\n  const [innateSpellsCast, setInnateSpellsCast] = useRecoilState(\n    innateSpellsCastState\n  );\n  const [preppedSpells, setPreppedSpells] = useRecoilState(preppedSpellsState);\n  const [preppedSpellsCast, setPreppedSpellsCast] = useRecoilState(\n    preppedSpellsCastState\n  );\n  function getSpellLevel(selection, innatePrepOrPrepped) {\n    let foundLevel = null;\n    if (innatePrepOrPrepped === \"innate\") {\n      Object.keys(character.magic.spells).forEach((level) => {\n        if (Object.values(character.magic.spells[level]).includes(selection)) {\n          foundLevel = level;\n        }\n      });\n    } else {\n      Object.keys(character.magic.spellbook).forEach((level) => {\n        if (\n          Object.values(character.magic.spellbook[level]).includes(selection)\n        ) {\n          foundLevel = level;\n        }\n      });\n    }\n    return foundLevel;\n  }\n  const lvlConversion = {\n    zero: 0,\n    one: 1,\n    two: 2,\n    three: 3,\n    four: 4,\n    five: 5,\n    six: 6,\n    seven: 7,\n    eight: 8,\n    nine: 9,\n  };\n  function addUsedSpell(selection, innatePrepOrPrepped) {\n    const levelString = getSpellLevel(selection, innatePrepOrPrepped);\n    //assign a number from string\n    const level = lvlConversion[levelString];\n    if (innatePrepOrPrepped === \"innate\") {\n      const newArray = clone(innateSpellsCast);\n      newArray[level].push(selection);\n      setInnateSpellsCast(newArray);\n      setModalType(\"Off\");\n    } else if (innatePrepOrPrepped === \"prep\") {\n      const newArray = clone(preppedSpells);\n      newArray[level].push(selection);\n      setPreppedSpells(newArray);\n      setModalType(\"Off\");\n    } else {\n      const newArray = clone(preppedSpellsCast);\n      newArray[level].push(selection);\n      setPreppedSpellsCast(newArray);\n      setModalType(\"Off\");\n    }\n  }\n  function removeUsedSpell(selection, innatePrepOrPrepped) {\n    const levelString = getSpellLevel(selection, innatePrepOrPrepped);\n    //assign a number from string\n    const level = lvlConversion[levelString];\n    if (innatePrepOrPrepped === \"innate\") {\n      const newArray = clone(innateSpellsCast);\n      const used = newArray[level].findIndex((item) => {\n        return item === selection;\n      });\n      newArray[level].splice(used, 1);\n      setInnateSpellsCast(newArray);\n    } else if (innatePrepOrPrepped === \"prep\") {\n      const newArray = clone(preppedSpells);\n      const used = newArray[level].findIndex((item) => {\n        return item === selection;\n      });\n      newArray[level].splice(used, 1);\n      setPreppedSpells(newArray);\n      setModalType(\"Off\");\n    } else {\n      const newArray = clone(preppedSpellsCast);\n      const used = newArray[level].findIndex((item) => {\n        return item === selection;\n      });\n      newArray[level].splice(used, 1);\n      setPreppedSpellsCast(newArray);\n    }\n  }\n  function chooseModal(modalType) {\n    switch (modalType) {\n      case \"Prep\":\n        return (\n          <PreppingSpell\n            selection={selection}\n            addUsedSpell={addUsedSpell}\n            removeUsedSpell={removeUsedSpell}\n          />\n        );\n      case \"Cast\":\n        return (\n          <CastingSpell\n            selection={selection}\n            addUsedSpell={addUsedSpell}\n            removeUsedSpell={removeUsedSpell}\n          />\n        );\n      case \"CastPrepped\":\n        return (\n          <CastingPreppedSpell\n            selection={selection}\n            addUsedSpell={addUsedSpell}\n            removeUsedSpell={removeUsedSpell}\n          />\n        );\n      case \"UsedPrepped\":\n        return (\n          <UsedPreppedSpell\n            selection={selection}\n            addUsedSpell={addUsedSpell}\n            removeUsedSpell={removeUsedSpell}\n          />\n        );\n      default:\n        return null;\n    }\n  }\n  return (\n    <Modal onClose={() => setModalType(\"Off\")}>{chooseModal(modalType)}</Modal>\n  );\n};\n\nexport default SpellInfo;\n","import React from \"react\";\nimport { CompendiumSpell } from \"../components/SpellInfo/SpellInfo\";\n\nfunction rollDice(size) {\n  return (mod, use) => {\n    const roll = Math.floor(Math.random() * size + 1);\n    function edgeRollClassAssignment(roll) {\n      if (roll === 1 && size === 20) {\n        return \"natOne\";\n      } else if (roll === 20 && size === 20) {\n        return \"natTwenty\";\n      } else {\n        return null;\n      }\n    }\n    const result = (\n      <span>\n        <span id=\"rollUse\">{use}</span>\n        <div id=\"rollTopLine\">\n          <span id=\"rollTotal\" className={edgeRollClassAssignment(roll)}>\n            {roll}\n          </span>{\" \"}\n          <span id=\"modTotal\"> + {mod} =</span>\n        </div>\n        <p id=\"rollModTotal\">{roll + mod}</p>\n      </span>\n    );\n    return result;\n  };\n}\n/* vvvvvvvvvvv EXPORT vvvvvvvvvvvvvv */\nfunction clone(object) {\n  return JSON.parse(JSON.stringify(object));\n}\nconst roll20 = rollDice(20);\nfunction displayCompendiumInfo(matchedSpell) {\n  const spellKeys = Object.keys(matchedSpell);\n  const compendiumInfo = spellKeys.map((key) => {\n    return (\n      <CompendiumSpell key={key} property={key} value={matchedSpell[key]} />\n    );\n  });\n  return compendiumInfo;\n}\nfunction getAbilityMod(character) {\n  return (ability) => {\n    const score = character.abilities.score[ability];\n    return !score ? score : Math.floor((score - 10) / 2);\n  };\n}\nfunction getAC(character) {\n  const ac = character.armorClass;\n  return (\n    10 +\n    ac.armor +\n    ac.deflection +\n    ac.dexterity +\n    ac.misc +\n    ac.naturalArmor +\n    ac.shield +\n    ac.size\n  );\n}\nfunction textClassToGreenOrRed(current, expected) {\n  if (current > expected) {\n    return \"greenText\";\n  } else if (current < expected) {\n    return \"redText\";\n  } else {\n    return null;\n  }\n}\nfunction camelCaseToTitleCase(item) {\n  //add spaces between words\n  let string = item.replace(/[A-Z]/g, (x) => \" \" + x);\n  //capitalize first letter\n  string = string.charAt(0).toUpperCase() + string.slice(1);\n  return string;\n}\nconst whiteSpaceToUnderscore = (string) => string.replace(/\\s/g, \"_\");\n\nexport {\n  textClassToGreenOrRed,\n  camelCaseToTitleCase,\n  getAC,\n  roll20,\n  getAbilityMod,\n  clone,\n  displayCompendiumInfo,\n  whiteSpaceToUnderscore,\n};\n","import React from \"react\";\nimport { useRecoilState, useRecoilValue, useSetRecoilState } from \"recoil\";\n\nimport { mainContentState, secondaryNavbarState } from \"../../recoilState.js\";\nimport \"./Navbars.css\";\n\nconst NavButtonCodeBlock = (props) => {\n  const [mainContent, setMainContent] = useRecoilState(mainContentState);\n  return (\n    <button\n      id={props.name}\n      onClick={() => setMainContent(props.name)}\n      className={\n        mainContent === props.name ? \"navbarItemsOn\" : \"navbarItemsOff\"\n      }\n    >\n      {props.name}\n    </button>\n  );\n};\n\nconst AbilitySelector = () => {\n  return (\n    <div>\n      <ul id=\"abilitySelector\" className=\"navbarContainer\">\n        <NavButtonCodeBlock name={\"Spells\"} />\n        <NavButtonCodeBlock name={\"Abilities\"} />\n        <NavButtonCodeBlock name={\"SLAs\"} />\n      </ul>\n    </div>\n  );\n};\n\nconst StatsSelector = () => {\n  return (\n    <div>\n      <ul id=\"statsSelector\" className=\"navbarContainer\">\n        <NavButtonCodeBlock name={\"Skills\"} />\n        <NavButtonCodeBlock name={\"Attacks\"} />\n        <NavButtonCodeBlock name={\"More\"} />\n      </ul>\n    </div>\n  );\n};\n\nconst SecondaryNavbar = (props) => {\n  const secondaryNavbar = useRecoilValue(secondaryNavbarState);\n  function navSwitch(display) {\n    switch (display) {\n      case \"stats\":\n        return <StatsSelector />;\n      case \"ability\":\n        return <AbilitySelector />;\n      case null:\n        return null;\n      default:\n        return <StatsSelector />;\n    }\n  }\n  return (\n    <>\n      <div id=\"secondaryNavbar\">{navSwitch(secondaryNavbar)}</div>\n    </>\n  );\n};\nconst PrimaryNavbar = (props) => {\n  const [secondaryNavbar, setSecondaryNavbar] = useRecoilState(\n    secondaryNavbarState\n  );\n  const setMainContent = useSetRecoilState(mainContentState);\n  const statIcon = <i id=\"statIcon\" className=\"far fa-chart-bar\"></i>;\n  const abilityIcon = <i id=\"spellIcon\" className=\"fas fa-hand-sparkles\"></i>;\n  const itemIcon = <i id=\"itemIcon\" className=\"fas fa-scroll\"></i>;\n  function setBothDisplays(name, secondaryName) {\n    setSecondaryNavbar(name);\n    if (secondaryName !== null) {\n      setMainContent(secondaryName);\n    }\n  }\n  function navButtonCodeBlock(name, icon, secondaryName) {\n    return (\n      <button\n        id={name}\n        onClick={() => setBothDisplays(name, secondaryName)}\n        className={\n          secondaryNavbar === name ? \"navbarItemsOn\" : \"navbarItemsOff\"\n        }\n      >\n        {icon}\n      </button>\n    );\n  }\n  return (\n    <div>\n      <ul id=\"primaryNavbar\" className=\"navbarContainer\">\n        {navButtonCodeBlock(\"stats\", statIcon, \"Skills\")}\n        {navButtonCodeBlock(\"ability\", abilityIcon, \"Spells\")}\n        {navButtonCodeBlock(null, itemIcon, \"Items\")}\n      </ul>\n    </div>\n  );\n};\n\nexport { PrimaryNavbar, SecondaryNavbar };\n","import React, { useState } from \"react\";\nimport { useSetRecoilState, useRecoilValue, useRecoilState } from \"recoil\";\n\nimport {\n  innateSpellsCastState,\n  preppedSpellsState,\n  preppedSpellsCastState,\n  emptySpellsArray,\n  characterState,\n  damageState,\n} from \"../../recoilState.js\";\nimport \"./TopComponent.css\";\n\nconst CharacterType = (props) => {\n  return <span>{props.value} / </span>;\n};\nconst CharacterClasses = (props) => {\n  return <li>{props.value}</li>;\n};\n\nconst TopComponent = (props) => {\n  const character = useRecoilValue(characterState);\n  const [toggle, setToggle] = useState(false);\n  const setInnateSpellsCast = useSetRecoilState(innateSpellsCastState);\n  const setpreppedSpells = useSetRecoilState(preppedSpellsState);\n  const setPreppedSpellsCast = useSetRecoilState(preppedSpellsCastState);\n  const [damage, setDamage] = useRecoilState(damageState);\n  function resetAllSpells() {\n    setInnateSpellsCast(emptySpellsArray);\n    setpreppedSpells(emptySpellsArray);\n    setPreppedSpellsCast(emptySpellsArray);\n  }\n  function healDamageOnRest() {\n    setDamage(Math.max(0, damage - character.level));\n  }\n  function fullRest() {\n    resetAllSpells();\n    healDamageOnRest();\n  }\n  const type = character.type.map((t) => <CharacterType key={t} value={t} />);\n  const classList = character.class.map((c) => (\n    <CharacterClasses key={c} value={c} />\n  ));\n  return (\n    <div className=\"topContainer\">\n      <button\n        className={toggle ? \"moreButtonOn\" : \"moreButtonOff\"}\n        onClick={() => setToggle(!toggle)}\n      >\n        <h1 id=\"nameAndLevel\">\n          {character.name} ({character.level})\n        </h1>\n        <em id=\"moreLess\">\n          <i className=\"fas fa-angle-double-down\"></i>\n        </em>\n      </button>\n\n      {toggle === true && (\n        <div id=\"characterInfo\">\n          <div id=\"characterType\">\n            type: <br /> {type}\n          </div>\n          <ul id=\"classList\">\n            class: <br /> {classList}\n          </ul>\n          <button className=\"fullRestButton\" onClick={() => fullRest()}>\n            Full Rest\n          </button>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default TopComponent;\n","import React from \"react\";\nimport { useRecoilValue, useSetRecoilState } from \"recoil\";\n\nimport {\n  diceRollState,\n  characterState,\n  damageState,\n  temporaryHitPointsState,\n  modalTypeState,\n} from \"../../recoilState.js\";\nimport { getAC, textClassToGreenOrRed } from \"../../utilities/utilities\";\nimport TopComponent from \"../TopComponent/TopComponent.js\";\nimport \"./BasicInfo.css\";\n\nconst BasicInfo = (props) => {\n  //get the stuff\n  const character = useRecoilValue(characterState);\n  const rollResult = useRecoilValue(diceRollState);\n  const damage = useRecoilValue(damageState);\n  const temporaryHitPoints = useRecoilValue(temporaryHitPointsState);\n  const setModalType = useSetRecoilState(modalTypeState);\n  //starts as welcome, changes to dice roll\n  const welcome = rollResult ? rollResult : \"Good Luck,\\n\" + character.name;\n  //store HitPoints in variable\n  const currentHP = character.hitPoints.total + temporaryHitPoints - damage;\n  //imported from utilities\n  const currentAC = getAC(character);\n  const textColorClass = textClassToGreenOrRed(\n    currentHP,\n    character.hitPoints.total\n  );\n  function toggleModal(modalType) {\n    switch (modalType) {\n      case !\"Off\":\n        setModalType(\"Off\");\n        break;\n      case \"HP\":\n        setModalType(modalType);\n        break;\n      case \"Defense\":\n        setModalType(modalType);\n        break;\n      default:\n        setModalType(\"Off\");\n    }\n  }\n  return (\n    <div>\n      <TopComponent />\n      <div id=\"HPACDiceWrapper\">\n        <div id=\"hpacWrapper\">\n          <button className=\"HPACButton\" onClick={() => toggleModal(\"HP\")}>\n            <i className=\"fas fa-heart\"></i>{\" \"}\n            <span className={textColorClass}>{currentHP}</span>{\" \"}\n            <i className=\"fas fa-angle-double-down HPACMore\"></i>\n          </button>\n          <button className=\"HPACButton\" onClick={() => toggleModal(\"Defense\")}>\n            <i className=\"fas fa-shield-alt\"></i> {currentAC + \" \"}\n            <i className=\"fas fa-angle-double-down HPACMore\"></i>\n          </button>\n        </div>\n        <div id=\"diceRollResultWrapper\">{welcome}</div>\n      </div>\n    </div>\n  );\n};\n\nexport default BasicInfo;\n","import React from \"react\";\nimport { useSetRecoilState, useRecoilValue } from \"recoil\";\n\nimport { modalTypeState, characterState } from \"../../recoilState.js\";\n\nconst ItemsHeld = (props) => {\n  const setModalType = useSetRecoilState(modalTypeState);\n  const item = props.value;\n  const formattedItem = item.replace(/_/g, \" \");\n  const buttonAndSpellClass = \"spellButtons \" + item;\n  return (\n    <button\n      className={buttonAndSpellClass}\n      onClick={() => setModalType(\"Item\")}\n    >\n      {formattedItem}\n    </button>\n  );\n};\nconst Items = (props) => {\n  const character = useRecoilValue(characterState);\n  function displayItems() {\n    const items = Object.values(character.items).map((s) => (\n      <ItemsHeld key={s} value={s} />\n    ));\n    return items;\n  }\n  return (\n    <div>\n      <h1>Items</h1>\n      <div className=\"spellContainer\">\n        <div className=\"spellItems\">\n          <p className=\"spellList\">{displayItems()}</p>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Items;\n","import React from \"react\";\nimport { useSetRecoilState, useRecoilValue } from \"recoil\";\n\nimport {\n  modalTypeState,\n  characterState,\n  selectionState,\n  slaState,\n} from \"../../recoilState.js\";\n\nconst romans = [\"I\", \"II\", \"III\", \"IV\", \"V\", \"VI\", \"VII\", \"VIII\", \"IX\"];\nconst numStrings = [\n  \"one\",\n  \"two\",\n  \"three\",\n  \"four\",\n  \"five\",\n  \"six\",\n  \"seven\",\n  \"eight\",\n  \"nine\",\n];\n\nconst KnownSLAs = (props) => {\n  const setModalType = useSetRecoilState(modalTypeState);\n  const setSelection = useSetRecoilState(selectionState);\n  const usedSLAs = useRecoilValue(slaState);\n  const { name, uses, frequency } = props;\n  const formattedName = name.replace(/_/g, \" \");\n  const buttonAndSpellClass = \"spellButtons \" + name;\n  function displayInfo(modalDestination) {\n    setSelection(name);\n    setModalType(modalDestination);\n  }\n  function checkForMatch(name) {\n    return usedSLAs.findIndex((item) => {\n      return item.name === name;\n    });\n  }\n  function displayUsesLeft() {\n    let indexOfMatch = checkForMatch(formattedName);\n    if (indexOfMatch >= 0) {\n      const timesUsed = usedSLAs[indexOfMatch].uses;\n      return uses - timesUsed;\n    } else {\n      return uses;\n    }\n  }\n  return (\n    <button className={buttonAndSpellClass} onClick={() => displayInfo(\"SLA\")}>\n      {formattedName} {displayUsesLeft()}/{frequency}\n    </button>\n  );\n};\nconst SLACodeBlock = (props) => {\n  const { levelNum, character, displaySLAs } = props;\n  const levelRoman = romans[levelNum - 1];\n  const level = numStrings[levelNum - 1];\n\n  return (\n    <>\n      {Array.isArray(character.magic.slas[level]) ? (\n        <div className=\"spellItems\">\n          <div className=\"spellLevelWrapper\">\n            <h2 className=\"spellLevelHeader\">Level {levelRoman}</h2>\n          </div>\n          <p className=\"spellList\">{displaySLAs(level)}</p>\n          <hr />\n        </div>\n      ) : null}\n    </>\n  );\n};\n\nconst SLAs = (props) => {\n  const character = useRecoilValue(characterState);\n  //cantrips or orisons? or both?\n  function casterType() {\n    if (character.magic.type.arcane && character.magic.type.divine) {\n      return \"Cantrips & Orisons\";\n    } else if (character.magic.type.divine) {\n      return \"Orisons\";\n    } else if (character.magic.type.arcane) {\n      return \"Cantrips\";\n    }\n  }\n  function displaySLAs(level) {\n    const slas = Object.values(character.magic.slas[level]).map((s) => (\n      <KnownSLAs\n        key={s.name}\n        name={s.name}\n        uses={s.uses}\n        frequency={s.frequency}\n      />\n    ));\n    return slas;\n  }\n  return (\n    <div>\n      <div className=\"spellContainer\">\n        {Array.isArray(character.magic.slas.zero) ? (\n          <div className=\"spellItems\">\n            <div className=\"spellLevelWrapper\">\n              <h2 className=\"spellLevelHeader\">{casterType()}</h2>\n            </div>\n            <p className=\"spellList\">{displaySLAs(\"zero\")}</p>\n            <hr />\n          </div>\n        ) : null}\n        {romans.map((_, i) => (\n          <SLACodeBlock\n            key={i + 1}\n            levelNum={i + 1}\n            character={character}\n            displaySLAs={displaySLAs}\n          />\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default SLAs;\n","import React from \"react\";\nimport { useRecoilValue, useSetRecoilState } from \"recoil\";\n\nimport { modalTypeState, characterState } from \"../../recoilState.js\";\nimport \"./ActiveAndPassiveAbilities.css\";\n\nfunction formatType(type) {\n  switch (type) {\n    case \"supernatural\":\n      return \"(Su)\";\n    case \"extraordinary\":\n      return \"(Ex)\";\n    default:\n      return null;\n  }\n}\n\nconst KnownActiveAbilities = (props) => {\n  const setModalType = useSetRecoilState(modalTypeState);\n  const { ability, type } = props;\n  const formattedAbility = ability.replace(/_/g, \" \");\n  const buttonAndSpellClass = \"spellButtons \" + ability;\n  return (\n    <button\n      className={buttonAndSpellClass}\n      onClick={() => setModalType(\"Abilities\")}\n    >\n      {formattedAbility}\n      {formatType(type)}\n    </button>\n  );\n};\nconst ActiveAbilities = (props) => {\n  const character = useRecoilValue(characterState);\n  function displayAbilities() {\n    const abilities = character.characterAbilities.active.map((a) => (\n      <KnownActiveAbilities key={a.name} ability={a.name} type={a.type} />\n    ));\n\n    return abilities;\n  }\n  return (\n    <div className=\"spellContainer\">\n      <div className=\"spellItems\">\n        <p className=\"spellList\">{displayAbilities()}</p>\n      </div>\n    </div>\n  );\n};\nconst KnownPassiveAbilities = (props) => {\n  const setModalType = useSetRecoilState(modalTypeState);\n  const { ability, type } = props;\n  const formattedAbility = ability.replace(/_/g, \" \");\n  const buttonAndSpellClass = \"spellButtons \" + ability;\n  return (\n    <button\n      className={buttonAndSpellClass}\n      onClick={() => setModalType(\"Abilities\")}\n    >\n      {formattedAbility}\n      {formatType(type)}\n    </button>\n  );\n};\nconst PassiveAbilities = (props) => {\n  const character = useRecoilValue(characterState);\n  function displayAbilities() {\n    const abilities = Object.values(\n      character.characterAbilities.passive\n    ).map((a) => (\n      <KnownPassiveAbilities key={a.name} ability={a.name} type={a.type} />\n    ));\n    return abilities;\n  }\n  return (\n    <div className=\"spellContainer\">\n      <div className=\"spellItems\">\n        <p className=\"spellList\">{displayAbilities()}</p>\n      </div>\n    </div>\n  );\n};\nconst ActiveAndPassiveAbilities = (props) => {\n  return (\n    <>\n      <h2 className=\"abilityHeader\">Passive Abilities</h2>\n      <PassiveAbilities />\n      <h2 className=\"abilityHeader\">ActiveAbilities</h2>\n      <ActiveAbilities />\n    </>\n  );\n};\nexport default ActiveAndPassiveAbilities;\n","import React from \"react\";\nimport { useRecoilValue, useSetRecoilState } from \"recoil\";\n\nimport { characterState, diceRollState } from \"../../../recoilState\";\nimport { roll20, getAbilityMod } from \"../../../utilities/utilities\";\nimport \"./AbilityScores.css\";\n\nconst AbilityScores = (props) => {\n  const character = useRecoilValue(characterState);\n  const setRollResult = useSetRecoilState(diceRollState);\n  const abilityScore = character.abilities.score;\n  const modifier = getAbilityMod(character);\n  const str = abilityScore.strength;\n  const dex = abilityScore.dexterity;\n  const con = abilityScore.constitution;\n  const int = abilityScore.intelligence;\n  const wis = abilityScore.wisdom;\n  const cha = abilityScore.charisma;\n  const strMod = modifier(\"strength\");\n  const dexMod = modifier(\"dexterity\");\n  const conMod = modifier(\"constitution\");\n  const intMod = modifier(\"intelligence\");\n  const wisMod = modifier(\"wisdom\");\n  const chaMod = modifier(\"charisma\");\n  function renderAbilityScore(score) {\n    return typeof score === \"number\" ? score : \"--\";\n  }\n  function abilityScoreCodeBlock(abilityString, abilityScore, abilityMod) {\n    return (\n      <p className=\"abilityScores\">\n        {/*button appears on same line*/}\n        <button\n          className=\"rollAbility\"\n          onClick={() => setRollResult(roll20(abilityMod, abilityString))}\n        >\n          <i className=\"fas fa-dice-d20\"></i>\n        </button>\n        {abilityString}: {renderAbilityScore(abilityScore)} |{\" \"}\n        {renderAbilityScore(abilityMod)}\n      </p>\n    );\n  }\n  return (\n    <>\n      <h2 className=\"abilityScoresHeader\">Abilities</h2>\n      <div id=\"abilityScoresWrapper\">\n        {abilityScoreCodeBlock(\"STR\", str, strMod)}\n        {abilityScoreCodeBlock(\"DEX\", dex, dexMod)}\n        {abilityScoreCodeBlock(\"CON\", con, conMod)}\n        {abilityScoreCodeBlock(\"INT\", int, intMod)}\n        {abilityScoreCodeBlock(\"WIS\", wis, wisMod)}\n        {abilityScoreCodeBlock(\"CHA\", cha, chaMod)}\n      </div>\n    </>\n  );\n};\nexport default AbilityScores;\n","import React, { useState } from \"react\";\nimport { useRecoilState, useRecoilValue } from \"recoil\";\n\nimport {\n  characterState,\n  damageState,\n  temporaryHitPointsState,\n} from \"../../../recoilState\";\nimport { textClassToGreenOrRed } from \"../../../utilities/utilities\";\nimport \"./HitPointInfo.css\";\n\nconst HitPointInfo = (props) => {\n  const [tempHP, setTempHP] = useRecoilState(temporaryHitPointsState);\n  const [damage, setDamage] = useRecoilState(damageState);\n  const character = useRecoilValue(characterState);\n  const currentHP = character.hitPoints.total + tempHP - damage;\n  const [damageInput, setDamageInput] = useState(0);\n  const [tempHPInput, setTempHPInput] = useState(0);\n  const textColorClass = textClassToGreenOrRed(\n    currentHP,\n    character.hitPoints.total\n  );\n  function handleDamageChange(e) {\n    setDamageInput(Number(e.target.value));\n  }\n  function handleDamageSubmit(addOrSubtract) {\n    addOrSubtract === \"add\"\n      ? setDamage(damage + damageInput)\n      : setDamage(Math.max(0, damage - damageInput));\n    setDamageInput(0);\n  }\n  function handleTempHPChange(e) {\n    setTempHPInput(Number(e.target.value));\n  }\n  function handleTempHPSubmit(addOrSubtract) {\n    addOrSubtract === \"add\"\n      ? setTempHP(tempHP + tempHPInput)\n      : setTempHP(Math.max(0, tempHP - tempHPInput));\n    if (tempHP < 0) {\n      setTempHP(0);\n    }\n    setTempHPInput(0);\n  }\n  return (\n    <div>\n      <h2 className=\"HPHeading\">Hit Points</h2>\n      <ul>\n        <li className={\"currentHP \" + textColorClass}>Current: {currentHP}</li>\n        <li>\n          Damage: {damage}{\" \"}\n          <div className=\"inputAndButton\">\n            <input\n              className=\"numberInput\"\n              type=\"number\"\n              value={damageInput}\n              onChange={handleDamageChange}\n            />\n            <button\n              className=\"plusMinusButton\"\n              onClick={() => handleDamageSubmit(\"add\")}\n            >\n              +\n            </button>\n            <button\n              className=\"plusMinusButton\"\n              onClick={() => handleDamageSubmit(\"subtract\")}\n            >\n              -\n            </button>\n          </div>\n        </li>\n        <li>\n          Temporary: {tempHP}{\" \"}\n          <div className=\"inputAndButton\">\n            <input\n              className=\"numberInput\"\n              type=\"number\"\n              value={tempHPInput}\n              onChange={handleTempHPChange}\n            />\n            <button\n              className=\"plusMinusButton\"\n              onClick={() => handleTempHPSubmit(\"add\")}\n            >\n              +\n            </button>\n            <button\n              className=\"plusMinusButton\"\n              onClick={() => handleTempHPSubmit(\"subtract\")}\n            >\n              -\n            </button>\n          </div>\n        </li>\n      </ul>\n    </div>\n  );\n};\nexport default HitPointInfo;\n","import React from \"react\";\nimport { useRecoilValue } from \"recoil\";\n\nimport { characterState } from \"../../../recoilState\";\nimport { camelCaseToTitleCase, getAC } from \"../../../utilities/utilities\";\nimport \"./ArmorClassInfo.css\";\n\nconst ArmorClassItem = (props) => {\n  const item = props.value;\n  return (\n    <li className=\"armorClassItem\">\n      | {camelCaseToTitleCase(item[0])}: {item[1]} |\n    </li>\n  );\n};\nconst ArmorClassInfo = (props) => {\n  const character = useRecoilValue(characterState);\n  const currentAC = getAC(character);\n  const armorClassItems = Object.entries(\n    character.armorClass\n  ).map((item, i) => <ArmorClassItem key={i} value={item} />);\n  return (\n    <>\n      <h2 className=\"ACHeading\">Armor Class</h2>\n      <div>\n        <p className=\"currentAC\">Total: {currentAC}</p>\n        <ul className=\"armorClassItemsContainer\">{armorClassItems}</ul>\n      </div>\n    </>\n  );\n};\nexport default ArmorClassInfo;\n","import React from \"react\";\nimport { useRecoilValue, useSetRecoilState } from \"recoil\";\n\nimport { characterState, diceRollState } from \"../../../recoilState\";\nimport {\n  camelCaseToTitleCase,\n  roll20,\n  getAbilityMod,\n} from \"../../../utilities/utilities\";\nimport \"./DefenseInfo.css\";\n\nconst EnergyResistanceItem = (props) => {\n  const item = props.value;\n  const defense = props.defense;\n  function getResistance(type) {\n    if (defense.energyResistance[type] === null) {\n      return \"Immune\";\n    }\n    return defense.energyResistance[type];\n  }\n  return (\n    <li className=\"energyResistanceItem\">\n      | {camelCaseToTitleCase(item[0])}: {getResistance(item[0])} |\n    </li>\n  );\n};\nconst WillSaveItem = (props) => {\n  const item = props.value;\n  return (\n    <li className=\"willSaveItem\">\n      | {camelCaseToTitleCase(item[0])}: {item[1]} |\n    </li>\n  );\n};\n\nconst ReflexSaveItem = (props) => {\n  const item = props.value;\n  return (\n    <li className=\"reflexSaveItem\">\n      | {camelCaseToTitleCase(item[0])}: {item[1]} |\n    </li>\n  );\n};\n\nconst FortitudeSaveItem = (props) => {\n  const item = props.value;\n  return (\n    <li className=\"fortitudeSaveItem\">\n      | {camelCaseToTitleCase(item[0])}: {item[1]} |\n    </li>\n  );\n};\nconst DefenseInfo = (props) => {\n  const character = useRecoilValue(characterState);\n  const setRoll = useSetRecoilState(diceRollState);\n  const defense = character.defense;\n  const getMod = getAbilityMod(character);\n  const conMod = getMod(\"constitution\");\n  const dexMod = getMod(\"dexterity\");\n  const wisMod = getMod(\"wisdom\");\n  const fortSave = getSavesTotalValue(\"fortitude\");\n  const refSave = getSavesTotalValue(\"reflex\");\n  const willSave = getSavesTotalValue(\"will\");\n  const energyResistanceItems = Object.entries(\n    defense.energyResistance\n  ).map((item, i) => (\n    <EnergyResistanceItem key={i} value={item} defense={defense} />\n  ));\n  function getSavesTotalValue(type) {\n    switch (type) {\n      case \"fortitude\":\n        return (\n          Object.values(defense.saves.fortitude).reduce((x, y) => x + y) +\n          conMod\n        );\n      case \"reflex\":\n        return (\n          Object.values(defense.saves.reflex).reduce((x, y) => x + y) + dexMod\n        );\n      case \"will\":\n        return (\n          Object.values(defense.saves.will).reduce((x, y) => x + y) + wisMod\n        );\n      default:\n        return null;\n    }\n  }\n  function getSavesBreakdown(type) {\n    switch (type) {\n      case \"fortitude\":\n        return Object.entries(defense.saves.fortitude).map((item, i) => (\n          <FortitudeSaveItem key={i} value={item} />\n        ));\n      case \"reflex\":\n        return Object.entries(defense.saves.reflex).map((item, i) => (\n          <ReflexSaveItem key={i} value={item} />\n        ));\n      case \"will\":\n        return Object.entries(defense.saves.will).map((item, i) => (\n          <WillSaveItem key={i} value={item} />\n        ));\n      default:\n        return null;\n    }\n  }\n  return (\n    <>\n      <h2 className=\"defenseHeading\">Defense</h2>\n      <div>\n        <p className=\"damageReduction\">\n          <strong>Damage Reduction:</strong> {defense.damageReduction.amount} /\n          {defense.damageReduction.weakness}\n        </p>\n        <p className=\"spellResistance\">\n          <strong>Spell Resistance:</strong> {defense.spellResistance}\n        </p>\n        <div className=\"savesContainer\">\n          <p className=\"savesHeading\">Saves</p>\n          <div className=\"fortitudeSaveContainer\">\n            <button\n              className=\"fortitudeSaveButton\"\n              onClick={() => setRoll(roll20(fortSave, \"Fortitude\"))}\n            >\n              Fortitude: {fortSave} <i className=\"fas fa-dice-d20\"></i>\n            </button>\n            <ul className=\"savesBreakdownContainer\">\n              {getSavesBreakdown(\"fortitude\")}\n              <li className=\"saveMod\">| Modifier: {conMod} |</li>\n            </ul>\n          </div>\n          <div className=\"reflexSaveContainer\">\n            <button\n              className=\"reflexSaveButton\"\n              onClick={() => setRoll(roll20(refSave, \"Reflex\"))}\n            >\n              Reflex: {refSave} <i className=\"fas fa-dice-d20\"></i>\n            </button>\n            <ul className=\"savesBreakdownContainer\">\n              {getSavesBreakdown(\"reflex\")}\n              <li className=\"saveMod\">| Modifier: {dexMod} |</li>\n            </ul>\n          </div>\n          <div className=\"willSaveContainer\">\n            <button\n              className=\"willSaveButton\"\n              onClick={() => setRoll(roll20(willSave, \"Will\"))}\n            >\n              Will: {willSave} <i className=\"fas fa-dice-d20\"></i>\n            </button>\n            <ul className=\"savesBreakdownContainer\">\n              {getSavesBreakdown(\"will\")}\n              <li className=\"saveMod\">| Modifier: {wisMod} |</li>\n            </ul>\n          </div>\n        </div>\n        <p className=\"energyResistanceHeading\">Energy Resistance</p>\n        <ul className=\"energyResistanceItemsContainer\">\n          {energyResistanceItems}\n        </ul>\n      </div>\n    </>\n  );\n};\nexport default DefenseInfo;\n","import React from \"react\";\nimport { useSetRecoilState, useRecoilValue } from \"recoil\";\n\nimport {\n  mainContentState,\n  modalTypeState,\n  selectionState,\n  innateSpellsCastState,\n  preppedSpellsState,\n  primaryModifierState,\n  characterState,\n} from \"../../recoilState.js\";\nimport { totalSpells } from \"../dnd.js\";\nimport \"./PrepSpells.css\";\n\nconst KnownSpell = (props) => {\n  const setModalType = useSetRecoilState(modalTypeState);\n  const setSelection = useSetRecoilState(selectionState);\n  const spell = props.value;\n  const formattedClass = spell.replace(/\\W/g, \"\");\n  const buttonAndSpellClass = \"spellButtons \" + formattedClass;\n  function displayInfo(spell) {\n    setModalType(\"Prep\");\n    setSelection(spell);\n  }\n  return (\n    <button className={buttonAndSpellClass} onClick={() => displayInfo(spell)}>\n      {spell}\n    </button>\n  );\n};\n\nconst Spellbook = (props) => {\n  return Object.values(\n    props.character.magic.spellbook[props.level]\n  ).map((s) => <KnownSpell key={s} value={s} />);\n};\n\nconst CasterType = (props) => {\n  const character = props.character;\n  if (character.magic.type.arcane && character.magic.type.divine) {\n    return \"Cantrips & Orisons\";\n  } else if (character.magic.type.divine) {\n    return \"Orisons\";\n  } else if (character.magic.type.arcane) {\n    return \"Cantrips\";\n  }\n};\n\nconst romans = [\"I\", \"II\", \"III\", \"IV\", \"V\", \"VI\", \"VII\", \"VIII\", \"IX\"];\nconst numStrings = [\n  \"one\",\n  \"two\",\n  \"three\",\n  \"four\",\n  \"five\",\n  \"six\",\n  \"seven\",\n  \"eight\",\n  \"nine\",\n];\n\nconst SpellCodeBlock = (props) => {\n  const { levelNum } = props;\n  const { character } = props;\n  const { primaryModifier } = props;\n  const { innateSpellsCast } = props;\n  const { preppedSpells } = props;\n  const levelRoman = romans[levelNum - 1];\n  const level = numStrings[levelNum - 1];\n  const remainingSpells =\n    totalSpells(character, primaryModifier, level, levelNum) -\n    innateSpellsCast[levelNum].length -\n    preppedSpells[levelNum].length;\n  return (\n    <div className=\"spellItems\">\n      <div className=\"spellLevelWrapper\">\n        <h2 className=\"spellLevelHeader\">Level {levelRoman}</h2>\n        <em className=\"remainingSpells\">{remainingSpells} remaining today</em>\n      </div>\n      <p className=\"spellList\">\n        <Spellbook level={level} character={character} />\n      </p>\n      <hr />\n    </div>\n  );\n};\nconst PrepSpells = (props) => {\n  const character = useRecoilValue(characterState);\n  const primaryModifier = useRecoilValue(primaryModifierState);\n  const setMainContent = useSetRecoilState(mainContentState);\n  const innateSpellsCast = useRecoilValue(innateSpellsCastState);\n  const preppedSpells = useRecoilValue(preppedSpellsState);\n  const remainingSpells =\n    totalSpells(character, primaryModifier, \"zero\", 0) -\n    innateSpellsCast[0].length -\n    preppedSpells[0].length;\n\n  return (\n    <>\n      <div>\n        <button id=\"returnToSpells\" onClick={() => setMainContent(\"Spells\")}>\n          <i className=\"fas fa-arrow-left\"></i>\n        </button>\n        <div className=\"spellContainer\">\n          <div className=\"spellItems\">\n            <div className=\"spellLevelWrapper\">\n              <h2 id=\"levelZeroHeaderPrep\" className=\"spellLevelHeader\">\n                <CasterType character={character} />\n              </h2>\n              <em className=\"remainingSpells\">\n                {remainingSpells} remaining today\n              </em>\n            </div>\n            <p className=\"spellList\">\n              <Spellbook level=\"zero\" character={character} />\n            </p>\n            <hr />\n          </div>\n          {romans.map((_, i) => (\n            <SpellCodeBlock\n              key={i + 1}\n              levelNum={i + 1}\n              character={character}\n              primaryModifier={primaryModifier}\n              innateSpellsCast={innateSpellsCast}\n              preppedSpells={preppedSpells}\n            />\n          ))}\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default PrepSpells;\n","import React from \"react\";\nimport { useSetRecoilState, useRecoilValue } from \"recoil\";\n\nimport {\n  mainContentState,\n  modalTypeState,\n  selectionState,\n  innateSpellsCastState,\n  preppedSpellsState,\n  preppedSpellsCastState,\n  primaryModifierState,\n  characterState,\n} from \"../../recoilState.js\";\nimport { totalSpells } from \"../dnd.js\";\nimport \"./Spells.css\";\n\nconst PreppedSpellCast = (props) => {\n  const spell = props.value;\n  const setModalType = useSetRecoilState(modalTypeState);\n  const setSelection = useSetRecoilState(selectionState);\n  const formattedSpellName = spell.replace(/\\W/g, \"\");\n  const buttonAndSpellClass = \"spellButtons disabled \" + formattedSpellName;\n  function displayInfo(spell) {\n    setModalType(\"UsedPrepped\");\n    setSelection(spell);\n  }\n  return (\n    <button className={buttonAndSpellClass} onClick={() => displayInfo(spell)}>\n      {spell}\n    </button>\n  );\n};\n\nconst PreppedSpellsCast = (props) => {\n  const { levelNum, preppedSpellsCast } = props;\n  return preppedSpellsCast[levelNum].map((psc) => (\n    <PreppedSpellCast key={psc} value={psc} />\n  ));\n};\n\nconst PreppedSpell = (props) => {\n  const spell = props.value;\n  const setModalType = useSetRecoilState(modalTypeState);\n  const setSelection = useSetRecoilState(selectionState);\n  const formattedSpellName = spell.replace(/\\W/g, \"\");\n  const buttonAndSpellClass = \"spellButtons \" + formattedSpellName;\n  function displayInfo(spell) {\n    setModalType(\"CastPrepped\");\n    setSelection(spell);\n  }\n  return (\n    <button className={buttonAndSpellClass} onClick={() => displayInfo(spell)}>\n      {spell}\n    </button>\n  );\n};\n\nconst PreppedSpells = (props) => {\n  const { levelNum, preppedSpells } = props;\n  return preppedSpells[levelNum].map((ps) => (\n    <PreppedSpell key={ps} value={ps} />\n  ));\n};\n\nconst KnownSpell = (props) => {\n  const setModalType = useSetRecoilState(modalTypeState);\n  const setSelection = useSetRecoilState(selectionState);\n  const spell = props.value;\n  const formattedClass = spell.replace(/\\W/g, \"\");\n  const buttonAndSpellClass = \"spellButtons \" + formattedClass;\n  function displayInfo(spell) {\n    setModalType(\"Cast\");\n    setSelection(spell);\n  }\n  return (\n    <button className={buttonAndSpellClass} onClick={() => displayInfo(spell)}>\n      {spell + \" \\u221e\"}\n    </button>\n  );\n};\n\nconst KnownSpells = (props) => {\n  return Object.values(props.character.magic.spells[props.level]).map((s) => (\n    <KnownSpell key={s} value={s} />\n  ));\n};\n\nconst CasterType = (props) => {\n  const character = props.character;\n  if (character.magic.type.arcane && character.magic.type.divine) {\n    return \"Cantrips & Orisons\";\n  } else if (character.magic.type.divine) {\n    return \"Orisons\";\n  } else if (character.magic.type.arcane) {\n    return \"Cantrips\";\n  }\n};\n\nconst romans = [\"I\", \"II\", \"III\", \"IV\", \"V\", \"VI\", \"VII\", \"VIII\", \"IX\"];\nconst numStrings = [\n  \"one\",\n  \"two\",\n  \"three\",\n  \"four\",\n  \"five\",\n  \"six\",\n  \"seven\",\n  \"eight\",\n  \"nine\",\n];\n\nconst SpellCodeBlock = (props) => {\n  const {\n    levelNum,\n    character,\n    primaryModifier,\n    innateSpellsCast,\n    preppedSpells,\n    preppedSpellsCast,\n    getDifficultyClass,\n  } = props;\n  const levelRoman = romans[levelNum - 1];\n  const level = numStrings[levelNum - 1];\n  const remainingSpells =\n    totalSpells(character, primaryModifier, level, levelNum) -\n    innateSpellsCast[levelNum].length -\n    preppedSpells[levelNum].length -\n    preppedSpellsCast[levelNum].length;\n  return (\n    <div className=\"spellItems\">\n      <div className=\"spellLevelWrapper\">\n        <h2 className=\"spellLevelHeader\">\n          Level {levelRoman} (DC {getDifficultyClass(levelNum)})\n        </h2>\n        <em className=\"remainingSpells\">{remainingSpells} remaining today</em>\n      </div>\n      {preppedSpells[levelNum].length >= 1 ||\n      preppedSpellsCast[levelNum].length >= 1 ? (\n        <>\n          <p className=\"preppedSpells\">\n            Prepped:{\" \"}\n            <PreppedSpells levelNum={levelNum} preppedSpells={preppedSpells} />\n            <PreppedSpellsCast\n              levelNum={levelNum}\n              preppedSpellsCast={preppedSpellsCast}\n            />\n          </p>\n          <hr className=\"shortHR\" />\n        </>\n      ) : null}\n      <p className=\"spellList\">\n        <KnownSpells level={level} character={character} />\n      </p>\n      <hr />\n    </div>\n  );\n};\n\nconst Spells = (props) => {\n  const character = useRecoilValue(characterState);\n  const primaryModifier = useRecoilValue(primaryModifierState);\n  const setMainContent = useSetRecoilState(mainContentState);\n  const innateSpellsCast = useRecoilValue(innateSpellsCastState);\n  const preppedSpells = useRecoilValue(preppedSpellsState);\n  const preppedSpellsCast = useRecoilValue(preppedSpellsCastState);\n  const remainingSpells =\n    character.magic.spellsPerDay.zero -\n    innateSpellsCast[0].length -\n    preppedSpells[0].length -\n    preppedSpellsCast[0].length;\n  function getDifficultyClass(levelNum) {\n    return 10 + levelNum + primaryModifier;\n  }\n\n  return (\n    <div>\n      <button id=\"prepSpellsButton\" onClick={() => setMainContent(\"Prep\")}>\n        <i className=\"fas fa-book\"></i>\n        <span>PREP</span>\n      </button>\n      <div className=\"spellContainer\">\n        <div className=\"spellItems\">\n          <div className=\"spellLevelWrapper\">\n            <h2 id=\"levelZeroHeader\" className=\"spellLevelHeader\">\n              <CasterType character={character} /> (DC {getDifficultyClass(0)})\n            </h2>\n            <em className=\"remainingSpells\">\n              {remainingSpells} remaining today\n            </em>\n          </div>\n          {preppedSpells[0].length >= 1 || preppedSpellsCast[0].length >= 1 ? (\n            <>\n              <p className=\"preppedSpells\">\n                Prepped:{\" \"}\n                <PreppedSpells levelNum={0} preppedSpells={preppedSpells} />\n                <PreppedSpellsCast\n                  levelNum={0}\n                  preppedSpellsCast={preppedSpellsCast}\n                />\n              </p>\n              <hr className=\"shortHR\" />\n            </>\n          ) : null}\n          <p className=\"spellList\">\n            <KnownSpells level=\"zero\" character={character} />\n          </p>\n          <hr />\n        </div>\n        {romans.map((_, i) => (\n          <SpellCodeBlock\n            key={i + 1}\n            levelNum={i + 1}\n            character={character}\n            primaryModifier={primaryModifier}\n            innateSpellsCast={innateSpellsCast}\n            preppedSpells={preppedSpells}\n            preppedSpellsCast={preppedSpellsCast}\n            getDifficultyClass={getDifficultyClass}\n          />\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default Spells;\n","import React from \"react\";\nimport { useSetRecoilState, useRecoilValue } from \"recoil\";\n\nimport { diceRollState, characterState } from \"../../recoilState.js\";\nimport { roll20, getAbilityMod } from \"../../utilities/utilities\";\nimport \"./Skills.css\";\n\nconst SkillsListItem = (props) => {\n  const { character, skill } = props;\n  const abilityMod = getAbilityMod(character);\n  const setRollResult = useSetRecoilState(diceRollState);\n  // replace underscore with space and store\n  let formattedSkill = skill[0].replace(/_/g, \" \");\n  // update variable replacing (Know)ledge with :\n  formattedSkill = formattedSkill.replace(/ledge/g, \":\");\n  // store skill points separately, add modifier\n  const skillPoints = skill[1] + abilityMod(character.skills[skill[0]].ability);\n  // confirm class skill to add css class\n  function renderClassSkillsClassName(skill) {\n    if (character.skills[skill].classSkill) {\n      return \"classSkills\";\n    } else {\n      return \"\";\n    }\n  }\n  return (\n    <button\n      className={`skills ${renderClassSkillsClassName(skill[0])} ${skill[0]}`}\n      onClick={() => setRollResult(roll20(skillPoints, formattedSkill))}\n    >\n      <i className=\"fas fa-dice-d20 skillDice\" style={{ float: \"left\" }}></i>{\" \"}\n      {formattedSkill} | <span className=\"skillPoints\">{skillPoints}</span>{\" \"}\n      <i className=\"fas fa-dice-d20 skillDice\" style={{ float: \"right\" }}></i>\n    </button>\n  );\n};\nconst Skills = (props) => {\n  const character = useRecoilValue(characterState);\n  //store character's skills in [key, value] array\n  let skillArray = Object.keys(character.skills)\n    .sort()\n    .filter((skill) => {\n      return character.skills[skill].display;\n    })\n    .map((skill) => {\n      const skillKeyValue = [\n        skill,\n        character.skills[skill].ranks + character.skills[skill].miscModifier,\n      ];\n      return skillKeyValue;\n    });\n  // pass skills to child component\n  const skillsBlock = skillArray.map((s) => (\n    <SkillsListItem key={s} skill={s} character={character} />\n  ));\n  return (\n    <>\n      <h1 id=\"skillsHeader\">Skills</h1>\n      <ul id=\"skillsListWrapper\">\n        <div id=\"skillsWrapper\">{skillsBlock}</div>\n      </ul>\n    </>\n  );\n};\n\nexport default Skills;\n","import React from \"react\";\n\nconst Attacks = (props) => {\n  return <></>;\n};\n\nexport default Attacks;\n","import React, { useState } from \"react\";\nimport { useSetRecoilState } from \"recoil\";\n\nimport { mainContentState } from \"../../recoilState\";\n\nimport \"./More.css\";\n\nconst More = (props) => {\n  const setMainContent = useSetRecoilState(mainContentState);\n  const [magicToggle, setMagicToggle] = useState(false);\n  return (\n    <>\n      <h2 className=\"editHeading\">Edit</h2>\n      <div className=\"buttonList\">\n        <button\n          className=\"moreButton\"\n          onClick={() => setMainContent(\"EditSkills\")}\n        >\n          Skills\n        </button>\n        <button\n          className=\"moreButton\"\n          onClick={() => setMainContent(\"EditAbilities\")}\n        >\n          Abilities\n        </button>\n        <button\n          className=\"moreButton\"\n          onClick={() => setMagicToggle(!magicToggle)}\n        >\n          Magic\n        </button>\n        {magicToggle && (\n          <div className=\"subButtonContainer\">\n            <button\n              className=\"subButton\"\n              onClick={() => setMainContent(\"EditSpells\")}\n            >\n              Spells\n            </button>\n            <button\n              className=\"subButton\"\n              onClick={() => setMainContent(\"EditSLAs\")}\n            >\n              SLAs\n            </button>\n          </div>\n        )}\n        <button\n          className=\"moreButton\"\n          onClick={() => setMainContent(\"EditAttacks\")}\n        >\n          Attacks\n        </button>\n        <button\n          className=\"moreButton\"\n          onClick={() => setMainContent(\"EditItems\")}\n        >\n          Items\n        </button>\n        <button\n          className=\"moreButton\"\n          onClick={() => setMainContent(\"EditCharacter\")}\n        >\n          Character\n        </button>\n      </div>\n      <hr></hr>\n      <button\n        className=\"moreButton\"\n        onClick={() => setMainContent(\"AddCharacter\")}\n      >\n        Add Character\n      </button>\n    </>\n  );\n};\nexport default More;\n","import React, { useState } from \"react\";\nimport { mutate } from \"swr\";\n\nimport { clone } from \"../../../utilities/utilities\";\n\nconst EditSkillForm = (props) => {\n  const { skill, character, setCharacter } = props;\n  const formattedSkill = skill.replace(/_/g, \" \");\n  const skillPath = character.skills[skill];\n  const [isClassSkill, setIsClassSkill] = useState(skillPath.classSkill);\n  const [ability, setAbility] = useState(skillPath.ability);\n  const [ranks, setRanks] = useState(skillPath.ranks);\n  const [miscModifier, setMiscModifier] = useState(skillPath.miscModifier);\n  const [display, setDisplay] = useState(skillPath.display);\n  const [armorCheck, setArmorCheck] = useState(skillPath.armorCheck);\n  const handleChange = (e) => {\n    switch (e.target.name) {\n      case \"ability\":\n        setAbility(e.target.value);\n        break;\n      case \"classSkill\":\n        setIsClassSkill(!isClassSkill);\n        break;\n      case \"display\":\n        setDisplay(!display);\n        break;\n      case \"ranks\":\n        setRanks(Number(e.target.value));\n        break;\n      case \"miscModifier\":\n        setMiscModifier(Number(e.target.value));\n        break;\n      case \"armorCheck\":\n        setArmorCheck(!armorCheck);\n        break;\n      default:\n        break;\n    }\n  };\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    let updatedCharacter = clone(character);\n    updatedCharacter.skills[skill] = {\n      ability: ability,\n      ranks: ranks,\n      miscModifier: miscModifier,\n      classSkill: isClassSkill,\n      armorCheck: armorCheck,\n      display: display,\n    };\n    setCharacter(updatedCharacter);\n    fetch(\"/api/characters/1\", {\n      method: \"POST\",\n      body: JSON.stringify(updatedCharacter),\n    }).then(() => {\n      mutate(\"/api/characters\");\n    });\n  };\n  return (\n    <>\n      <form onSubmit={handleSubmit}>\n        <fieldset className=\"formItemsContainer\">\n          <legend>{formattedSkill}</legend>\n          <div className=\"skillDetailContainer\">\n            <div className=\"skillDetailItem\">\n              <label htmlFor=\"ability\">Ability:</label>\n              <select\n                name=\"ability\"\n                size=\"1\"\n                value={ability}\n                onChange={handleChange}\n              >\n                <option value=\"strength\">strength</option>\n                <option value=\"constitution\">constitution</option>\n                <option value=\"dexterity\">dexterity</option>\n                <option value=\"intelligence\">intelligence</option>\n                <option value=\"wisdom\">wisdom</option>\n                <option value=\"charisma\">charisma</option>\n              </select>\n            </div>\n            <div className=\"skillDetailItem\">\n              <label htmlFor=\"classSkill\">Class Skill:</label>\n              <input\n                type=\"checkbox\"\n                className=\"checkbox\"\n                name=\"classSkill\"\n                defaultChecked={isClassSkill}\n                onChange={handleChange}\n              />\n            </div>\n            <div className=\"skillDetailItem\">\n              <label htmlFor=\"ranks\">Ranks:</label>\n              <input\n                type=\"number\"\n                name=\"ranks\"\n                min=\"0\"\n                className=\"skillNumberInput\"\n                value={ranks}\n                onChange={handleChange}\n              />\n            </div>\n            <div className=\"skillDetailItem\">\n              <label htmlFor=\"armorCheck\">Armor Check:</label>\n              <input\n                type=\"checkbox\"\n                name=\"armorCheck\"\n                defaultChecked={armorCheck}\n                onChange={handleChange}\n              />\n            </div>\n            <div className=\"skillDetailItem\">\n              <label htmlFor=\"miscModifier\">Misc Modifier:</label>\n              <input\n                type=\"number\"\n                name=\"miscModifier\"\n                min=\"0\"\n                className=\"skillNumberInput\"\n                value={miscModifier}\n                onChange={handleChange}\n              />\n            </div>\n            <div className=\"skillDetailItem\">\n              <label htmlFor=\"display\">Display:</label>\n              <input\n                type=\"checkbox\"\n                name=\"display\"\n                value=\"display\"\n                defaultChecked={display}\n                onChange={handleChange}\n              />\n            </div>\n          </div>\n          <div className=\"updateCharacter\">\n            <input\n              className=\"updateCharacterButton\"\n              type=\"submit\"\n              value=\"Update Character\"\n            />\n          </div>\n        </fieldset>\n      </form>\n    </>\n  );\n};\nexport default EditSkillForm;\n","import React, { useState } from \"react\";\nimport { mutate } from \"swr\";\n\nimport { clone, whiteSpaceToUnderscore } from \"../../../utilities/utilities\";\n\nconst NewSkillForm = (props) => {\n  const { character, setCharacter, newSkillForm, setNewSkillForm } = props;\n  const [isClassSkill, setIsClassSkill] = useState(false);\n  const [ability, setAbility] = useState(\"strength\");\n  const [ranks, setRanks] = useState(0);\n  const [miscModifier, setMiscModifier] = useState(0);\n  const [display, setDisplay] = useState(true);\n  const [armorCheck, setArmorCheck] = useState(false);\n  const [newName, setNewName] = useState(\"new skill name\");\n  const handleChange = (e) => {\n    switch (e.target.name) {\n      case \"ability\":\n        setAbility(e.target.value);\n        break;\n      case \"classSkill\":\n        setIsClassSkill(!isClassSkill);\n        break;\n      case \"display\":\n        setDisplay(!display);\n        break;\n      case \"ranks\":\n        setRanks(Number(e.target.value));\n        break;\n      case \"miscModifier\":\n        setMiscModifier(Number(e.target.value));\n        break;\n      case \"armorCheck\":\n        setArmorCheck(!armorCheck);\n        break;\n      case \"newSkillName\":\n        setNewName(e.target.value);\n        break;\n      default:\n        break;\n    }\n  };\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    let formattedName = whiteSpaceToUnderscore(newName);\n    let updatedCharacter = clone(character);\n    updatedCharacter.skills[formattedName] = {\n      ability: ability,\n      ranks: ranks,\n      miscModifier: miscModifier,\n      classSkill: isClassSkill,\n      armorCheck: armorCheck,\n      display: display,\n    };\n    setCharacter(updatedCharacter);\n    fetch(\"/api/characters/1\", {\n      method: \"POST\",\n      body: JSON.stringify(updatedCharacter),\n    }).then(() => {\n      mutate(\"/api/characters\");\n    });\n    setNewSkillForm(!newSkillForm);\n  };\n  return (\n    <>\n      <form onSubmit={handleSubmit}>\n        <fieldset className=\"formItemsContainer\">\n          <input\n            className=\"newSkillName\"\n            name=\"newSkillName\"\n            type=\"text\"\n            value={newName}\n            onChange={handleChange}\n          />\n          <div className=\"skillDetailContainer\">\n            <div className=\"skillDetailItem\">\n              <label htmlFor=\"ability\">Ability:</label>\n              <select\n                name=\"ability\"\n                size=\"1\"\n                value={ability}\n                onChange={handleChange}\n              >\n                <option value=\"strength\">strength</option>\n                <option value=\"constitution\">constitution</option>\n                <option value=\"dexterity\">dexterity</option>\n                <option value=\"intelligence\">intelligence</option>\n                <option value=\"wisdom\">wisdom</option>\n                <option value=\"charisma\">charisma</option>\n              </select>\n            </div>\n            <div className=\"skillDetailItem\">\n              <label htmlFor=\"classSkill\">Class Skill:</label>\n              <input\n                type=\"checkbox\"\n                name=\"classSkill\"\n                defaultChecked={isClassSkill}\n                onChange={handleChange}\n              />\n            </div>\n            <div className=\"skillDetailItem\">\n              <label htmlFor=\"ranks\">Ranks:</label>\n              <input\n                type=\"number\"\n                name=\"ranks\"\n                min=\"0\"\n                className=\"skillNumberInput\"\n                value={ranks}\n                onChange={handleChange}\n              />\n            </div>\n            <div className=\"skillDetailItem\">\n              <label htmlFor=\"armorCheck\">Armor Check:</label>\n              <input\n                type=\"checkbox\"\n                name=\"armorCheck\"\n                defaultChecked={armorCheck}\n                onChange={handleChange}\n              />\n            </div>\n            <div className=\"skillDetailItem\">\n              <label htmlFor=\"miscModifier\">Misc Modifier:</label>\n              <input\n                type=\"number\"\n                name=\"miscModifier\"\n                min=\"0\"\n                className=\"skillNumberInput\"\n                value={miscModifier}\n                onChange={handleChange}\n              />\n            </div>\n            <div className=\"skillDetailItem\">\n              <label htmlFor=\"display\">Display:</label>\n              <input\n                type=\"checkbox\"\n                name=\"display\"\n                value=\"display\"\n                defaultChecked={display}\n                onChange={handleChange}\n              />\n            </div>\n          </div>\n          <div className=\"updateCharacter\">\n            <input\n              className=\"updateCharacterButton\"\n              type=\"submit\"\n              value=\"Update Character\"\n            />\n          </div>\n        </fieldset>\n      </form>\n    </>\n  );\n};\nexport default NewSkillForm;\n","import React, { useState } from \"react\";\nimport { useSetRecoilState, useRecoilState } from \"recoil\";\n\nimport { characterState, mainContentState } from \"../../../recoilState\";\nimport EditSkillForm from \"./EditSkillForm\";\nimport NewSkillForm from \"./NewSkillForm\";\nimport \"./EditSkills.css\";\n\nconst EditSkills = (props) => {\n  const [character, setCharacter] = useRecoilState(characterState);\n  const setMainContent = useSetRecoilState(mainContentState);\n  const [newSkillForm, setNewSkillForm] = useState(false);\n  const skillsArray = Object.keys(character.skills);\n  const skillForm = skillsArray.map((s) => (\n    <EditSkillForm\n      key={s}\n      skill={s}\n      character={character}\n      setCharacter={setCharacter}\n    />\n  ));\n  return (\n    <>\n      <button className=\"back\" onClick={() => setMainContent(\"More\")}>\n        <i className=\"fas fa-arrow-left\"></i>\n      </button>\n      <button\n        className=\"newSkillButton\"\n        onClick={() => setNewSkillForm(!newSkillForm)}\n      >\n        Add New Skill\n      </button>\n      {newSkillForm && (\n        <NewSkillForm\n          character={character}\n          setCharacter={setCharacter}\n          newSkillForm={newSkillForm}\n          setNewSkillForm={setNewSkillForm}\n        />\n      )}\n      {skillForm}\n    </>\n  );\n};\nexport default EditSkills;\n","import React from \"react\";\nimport { useSetRecoilState } from \"recoil\";\n\nimport { mainContentState } from \"../../../recoilState\";\n\nconst EditAbilities = (props) => {\n  const setMainContent = useSetRecoilState(mainContentState);\n  return (\n    <>\n      <button onClick={() => setMainContent(\"More\")}>\n        {\" \"}\n        <i className=\"fas fa-arrow-left\"></i>\n      </button>\n    </>\n  );\n};\n\nexport default EditAbilities;\n","import React from \"react\";\n\nconst EditSpells = (props) => {\n  return <></>;\n};\n\nexport default EditSpells;\n","import React from 'react'\n\nconst EditSLAs = (props) => {\nreturn <></>\n}\n\nexport default EditSLAs\n","import React from \"react\";\nimport { useSetRecoilState } from \"recoil\";\n\nimport { mainContentState } from \"../../../recoilState\";\n\nconst EditAttacks = (props) => {\n  const setMainContent = useSetRecoilState(mainContentState);\n  return (\n    <>\n      <button onClick={() => setMainContent(\"More\")}>\n        {\" \"}\n        <i className=\"fas fa-arrow-left\"></i>\n      </button>\n    </>\n  );\n};\n\nexport default EditAttacks;\n","import React from \"react\";\nimport { useSetRecoilState } from \"recoil\";\n\nimport { mainContentState } from \"../../../recoilState\";\n\nconst EditItems = (props) => {\n  const setMainContent = useSetRecoilState(mainContentState);\n  return (\n    <>\n      <button onClick={() => setMainContent(\"More\")}>\n        {\" \"}\n        <i className=\"fas fa-arrow-left\"></i>\n      </button>\n    </>\n  );\n};\n\nexport default EditItems;\n","import React from \"react\";\nimport { useSetRecoilState } from \"recoil\";\n\nimport { mainContentState } from \"../../../recoilState\";\n\nconst EditCharacter = (props) => {\n  const setMainContent = useSetRecoilState(mainContentState);\n  return (\n    <>\n      <button onClick={() => setMainContent(\"More\")}>\n        {\" \"}\n        <i className=\"fas fa-arrow-left\"></i>\n      </button>\n    </>\n  );\n};\n\nexport default EditCharacter;\n","import React from \"react\";\nimport { useSetRecoilState } from \"recoil\";\n\nimport { mainContentState } from \"../../recoilState\";\n\nconst AddCharacter = (props) => {\n  const setMainContent = useSetRecoilState(mainContentState);\n  return (\n    <>\n      <button onClick={() => setMainContent(\"More\")}>\n        {\" \"}\n        <i className=\"fas fa-arrow-left\"></i>\n      </button>\n    </>\n  );\n};\n\nexport default AddCharacter;\n","import React from \"react\";\n\nconst AbilityInfo = (props) => {\n  return <></>;\n};\nexport default AbilityInfo;\n","import React from \"react\";\nimport { useRecoilState, useRecoilValue } from \"recoil\";\n\nimport {\n  slaState,\n  selectionState,\n  compendiumState,\n} from \"../../../recoilState\";\nimport { clone, displayCompendiumInfo } from \"../../../utilities/utilities\";\nimport \"./SLAInfo.css\";\n\nconst SLAInfo = (props) => {\n  const [usedSLAs, setUsedSLAs] = useRecoilState(slaState);\n  const selection = useRecoilValue(selectionState);\n  const compendium = useRecoilValue(compendiumState);\n  const matchedSpell = compendium.spells.find(({ name }) => name === selection);\n  function checkForUseState(name) {\n    return usedSLAs.findIndex((item) => {\n      return item.name === name;\n    });\n  }\n  function logUsedSLA(name) {\n    const newArray = clone(usedSLAs);\n    const indexOfMatch = checkForUseState(name);\n    if (indexOfMatch < 0) {\n      newArray.push({ name: name, uses: 1 });\n      setUsedSLAs(newArray);\n    }\n    if (indexOfMatch >= 0) {\n      newArray[indexOfMatch].uses += 1;\n      setUsedSLAs(newArray);\n    }\n  }\n\n  return (\n    <>\n      <button className=\"useSLAButton\" onClick={() => logUsedSLA(selection)}>\n        Use SLA\n      </button>\n      {matchedSpell !== undefined && (\n        <div>{displayCompendiumInfo(matchedSpell)}</div>\n      )}\n    </>\n  );\n};\nexport default SLAInfo;\n","import React from \"react\";\n\nconst ItemInfo = (props) => {\n  return <></>;\n};\nexport default ItemInfo;\n","import React from \"react\";\nimport { useRecoilValue, useRecoilState } from \"recoil\";\n\nimport Items from \"../Items/Items.js\";\nimport SLAs from \"../SLAs/SLAs.js\";\nimport { Modal } from \"../Modal/Modal\";\nimport ActiveAndPassiveAbilities from \"../ActiveAndPassiveAbilities/ActiveAndPassiveAbilities.js\";\nimport SpellInfo from \"../SpellInfo/SpellInfo.js\";\nimport AbilityScores from \"../Modal/AbilityScores/AbilityScores\";\nimport HitPointInfo from \"../Modal/HitPointInfo/HitPointInfo\";\nimport ArmorClassInfo from \"../Modal/ArmorClassInfo/ArmorClassInfo\";\nimport DefenseInfo from \"../Modal/DefenseInfo/DefenseInfo\";\nimport PrepSpells from \"../PrepSpells/PrepSpells.js\";\nimport Spells from \"../Spells/Spells.js\";\nimport Skills from \"../Skills/Skills.js\";\nimport Attacks from \"../Attacks/Attacks\";\nimport More from \"../More/More\";\nimport EditSkills from \"../Edit/EditSkills/EditSkills\";\nimport EditAbilities from \"../Edit/EditAbilities/EditAbilities\";\nimport EditSpells from \"../Edit/EditSpells/EditSpells\";\nimport EditSLAs from \"../Edit/EditSLAs/EditSLAs\";\nimport EditAttacks from \"../Edit/EditAttacks/EditAttacks\";\nimport EditItems from \"../Edit/EditItems/EditItems\";\nimport EditCharacter from \"../Edit/EditCharacter/EditCharacter\";\nimport AddCharacter from \"../AddCharacter/AddCharacter\";\nimport AbilityInfo from \"../Modal/AbilityInfo/AbilityInfo\";\nimport SLAInfo from \"../Modal/SLAInfo/SLAInfo\";\nimport ItemInfo from \"../Modal/ItemInfo/ItemInfo\";\n\nimport { mainContentState, modalTypeState } from \"../../recoilState.js\";\n\nimport \"./MainDisplay.css\";\n\nconst MainDisplay = (props) => {\n  const [modalType, setModalType] = useRecoilState(modalTypeState);\n  const mainContent = useRecoilValue(mainContentState);\n  function screenSwitch(display) {\n    switch (display) {\n      case \"Skills\":\n        return <Skills />;\n      case \"Scores\":\n        return <AbilityScores />;\n      case \"Attacks\":\n        return <Attacks />;\n      case \"More\":\n        return <More />;\n      case \"Spells\":\n        return <Spells />;\n      case \"Abilities\":\n        return <ActiveAndPassiveAbilities />;\n      case \"SLAs\":\n        return <SLAs />;\n      case \"Prep\":\n        return <PrepSpells />;\n      case \"Items\":\n        return <Items />;\n      case \"EditSkills\":\n        return <EditSkills />;\n      case \"EditAbilities\":\n        return <EditAbilities />;\n      case \"EditSpells\":\n        return <EditSpells />;\n      case \"EditSLAs\":\n        return <EditSLAs />;\n      case \"EditAttacks\":\n        return <EditAttacks />;\n      case \"EditItems\":\n        return <EditItems />;\n      case \"EditCharacter\":\n        return <EditCharacter />;\n      case \"AddCharacter\":\n        return <AddCharacter />;\n      default:\n        return <Skills />;\n    }\n  }\n  function infoSheet(modalType) {\n    switch (modalType) {\n      case \"Cast\":\n      case \"Prep\":\n      case \"CastPrepped\":\n      case \"UsedPrepped\":\n        return <SpellInfo />;\n      case \"HP\":\n        return (\n          <Modal onClose={() => setModalType(\"Off\")}>\n            <HitPointInfo />\n            <AbilityScores />\n          </Modal>\n        );\n      case \"Defense\":\n        return (\n          <Modal onClose={() => setModalType(\"Off\")}>\n            <ArmorClassInfo />\n            <DefenseInfo />\n          </Modal>\n        );\n      case \"Abilities\":\n        return (\n          <Modal onClose={() => setModalType(\"Off\")}>\n            <AbilityInfo />\n          </Modal>\n        );\n      case \"SLA\":\n        return (\n          <Modal onClose={() => setModalType(\"Off\")}>\n            <SLAInfo />\n          </Modal>\n        );\n      case \"Item\":\n        return (\n          <Modal onClose={() => setModalType(\"Off\")}>\n            <ItemInfo />\n          </Modal>\n        );\n      case \"Off\":\n        return null;\n      default:\n        return null;\n    }\n  }\n  return (\n    <div>\n      <hr className=\"underNavbar\" />\n      <div id=\"infoSheet\">{infoSheet(modalType)}</div>\n      <div id=\"mainContent\">{screenSwitch(mainContent)}</div>\n    </div>\n  );\n};\n\nexport default MainDisplay;\n","import React, { useEffect } from \"react\";\nimport useSWR from \"swr\";\nimport { useRecoilState, useRecoilValue } from \"recoil\";\n\nimport {\n  primaryModifierState,\n  characterState,\n  compendiumState,\n} from \"../recoilState.js\";\nimport { getAbilityMod } from \"../utilities/utilities\";\nimport * as Navbar from \"./Navbars/Navbars.js\";\nimport BasicInfo from \"./BasicInfo/BasicInfo.js\";\nimport MainDisplay from \"./MainDisplay/MainDisplay.js\";\n\nimport \"./dnd.css\";\n\n/******************************Character functions****************************/\nexport function totalSpells(character, primaryModifier, level, levelNum) {\n  function bonusSpellsPerDay(levelNum) {\n    return Math.ceil((primaryModifier - (levelNum - 1)) / 4);\n  }\n  return character.magic.spellsPerDay[level] + bonusSpellsPerDay(levelNum);\n}\n/******************************Character functions****************************/\nconst App = () => {\n  const character = useRecoilValue(characterState);\n  useEffect(\n    function setDocTitle() {\n      document.title = character.name;\n    },\n    [character]\n  );\n\n  return (\n    <>\n      <div id=\"appWrapper\">\n        <div>\n          <div id=\"topWrapper\">\n            <BasicInfo />\n            <Navbar.PrimaryNavbar />\n            <Navbar.SecondaryNavbar />\n          </div>\n          <MainDisplay />\n        </div>\n      </div>\n    </>\n  );\n};\n\nconst LoadApp = () => {\n  // Load data from the characters server endpoint\n  const { data: charactersResponse } = useSWR(\"/api/characters\");\n  const { data: spellsResponse } = useSWR(\"/api/spells\");\n\n  const [character, setCharacter] = useRecoilState(characterState);\n  const [compendium, setCompendium] = useRecoilState(compendiumState);\n  const [primaryModifier, setPrimaryModifier] = useRecoilState(\n    primaryModifierState\n  );\n  const abilityMod = getAbilityMod(character);\n\n  // Before the data is loaded, it will be `undefined`. So inside `useEffect`\n  // hooks below, make sure the data exists.\n\n  useEffect(\n    function setFirstCharacterFromServer() {\n      if (charactersResponse) {\n        setCharacter(charactersResponse.characters[0]);\n      }\n    },\n    [charactersResponse, setCharacter]\n  );\n\n  useEffect(\n    function setCompendiumFromServerSpells() {\n      if (spellsResponse) {\n        setCompendium({ spells: spellsResponse.spells });\n      }\n    },\n    [spellsResponse, setCompendium]\n  );\n\n  useEffect(\n    function setPrimaryModifierWhenCharacterChanges() {\n      if (character) {\n        setPrimaryModifier(abilityMod(character.abilities.primary));\n      }\n    },\n    [character, setPrimaryModifier, abilityMod]\n  );\n\n  // Wait until all data has been flushed through Recoil and values exist.\n  if (!(character && compendium && primaryModifier)) return <>Loading...</>;\n\n  return <App />;\n};\n\nexport default LoadApp;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import Arn from './Arn_Hachem'\n\nexport default [Arn]","export default {\n  name: \"Arn Hachem\",\n  type: [\"Human\", \"Sanctified\", \"Deathless\", \"Spellstitched\", \"Archlich\"],\n  hitPoints: {\n    dieSize: 12,\n    total: 321,\n  },\n  armorClass: {\n    armor: 5,\n    shield: 4,\n    dexterity: 12,\n    size: 0,\n    naturalArmor: 5,\n    deflection: 4,\n    misc: 0,\n  },\n  defense: {\n    damageReduction: {\n      amount: 15,\n      weakness: \"bludgeoning, chaotic\",\n    },\n    spellResistance: 27,\n    energyResistance: {\n      acid: 0,\n      cold: null,\n      electricity: null,\n      fire: 0,\n      sonic: 0,\n    },\n    saves: {\n      fortitude: {\n        base: 16,\n        magic: 0,\n        misc: 6,\n      },\n      reflex: {\n        base: 10,\n        magic: 0,\n        misc: 6,\n      },\n      will: {\n        base: 18,\n        magic: 7,\n        misc: 6,\n      },\n    },\n  },\n  size: \"Medium\",\n  alignment: \"Lawful-Good\",\n  abilities: {\n    score: {\n      strength: 18,\n      dexterity: 24,\n      constitution: null,\n      intelligence: 22,\n      wisdom: 17,\n      charisma: 35,\n    },\n    primary: \"charisma\",\n  },\n  speed: 40,\n  level: 20,\n  class: [\n    \"Sorcerer(1)\",\n    \"Mindtender(2)\",\n    \"Fleshwarper(2)\",\n    \"Malconvoker(8)\",\n    \"Binder(1)\",\n    \"Bard(1)\",\n    \"Master Of Masks(5)\",\n    \"Voidcaller(1)\",\n  ],\n  skills: {\n    Appraise: {\n      ability: \"intelligence\",\n      ranks: 0,\n      miscModifier: 4,\n      classSkill: true,\n      armorCheck: false,\n      display: true,\n    },\n    Balance: {\n      ability: \"dexterity\",\n      ranks: 0,\n      miscModifier: 0,\n      classSkill: false,\n      armorCheck: true,\n      display: true,\n    },\n    Bluff: {\n      ability: \"charisma\",\n      ranks: 24,\n      miscModifier: 13,\n      classSkill: true,\n      armorCheck: false,\n      display: true,\n    },\n    Climb: {\n      ability: \"strength\",\n      ranks: 0,\n      miscModifier: 0,\n      classSkill: false,\n      armorCheck: true,\n      display: true,\n    },\n    Concentration: {\n      ability: \"charisma\",\n      ranks: 15,\n      miscModifier: 0,\n      classSkill: true,\n      armorCheck: false,\n      display: true,\n    },\n    Craft_Tailor: {\n      ability: \"intelligence\",\n      ranks: 17,\n      miscModifier: 0,\n      classSkill: true,\n      armorCheck: false,\n      display: true,\n    },\n    Decipher_Script: {\n      ability: \"intelligence\",\n      ranks: 13,\n      miscModifier: 0,\n      classSkill: true,\n      armorCheck: false,\n      display: true,\n    },\n    Diplomacy: {\n      ability: \"charisma\",\n      ranks: 10,\n      miscModifier: 12,\n      classSkill: true,\n      armorCheck: false,\n      display: true,\n    },\n    Disable_Device: {\n      ability: \"intelligence\",\n      ranks: 0,\n      miscModifier: 0,\n      classSkill: false,\n      armorCheck: false,\n      display: true,\n    },\n    Diguise: {\n      ability: \"charisma\",\n      ranks: 24,\n      miscModifier: 9,\n      classSkill: true,\n      armorCheck: false,\n      display: true,\n    },\n    Escape_Artist: {\n      ability: \"dexterity\",\n      ranks: 0,\n      miscModifier: 0,\n      classSkill: true,\n      armorCheck: true,\n      display: true,\n    },\n    Forgery: {\n      ability: \"intelligence\",\n      ranks: 0,\n      miscModifier: 0,\n      classSkill: true,\n      armorCheck: false,\n      display: true,\n    },\n    Gather_Information: {\n      ability: \"charisma\",\n      ranks: 0,\n      miscModifier: 0,\n      classSkill: true,\n      armorCheck: false,\n      display: true,\n    },\n    Heal: {\n      ability: \"wisdom\",\n      ranks: 20,\n      miscModifier: 0,\n      classSkill: true,\n      armorCheck: false,\n      display: true,\n    },\n    Hide: {\n      ability: \"dexterity\",\n      ranks: 0,\n      miscModifier: 13,\n      classSkill: false,\n      armorCheck: true,\n      display: false,\n    },\n    Intimidate: {\n      ability: \"charisma\",\n      ranks: 1,\n      miscModifier: 12,\n      classSkill: true,\n      armorCheck: false,\n      display: true,\n    },\n    Jump: {\n      ability: \"strength\",\n      ranks: 0,\n      miscModifier: 0,\n      classSkill: true,\n      armorCheck: true,\n      display: true,\n    },\n    Knowledge_Arcana: {\n      ability: \"intelligence\",\n      ranks: 20,\n      miscModifier: 0,\n      classSkill: true,\n      armorCheck: false,\n      display: true,\n    },\n    Knowledge_Dungeoneering: {\n      ability: \"intelligence\",\n      ranks: 8,\n      miscModifier: 0,\n      classSkill: true,\n      armorCheck: false,\n      display: true,\n    },\n    Knowledge_Religion: {\n      ability: \"intelligence\",\n      ranks: 10,\n      miscModifier: 0,\n      classSkill: true,\n      armorCheck: false,\n      display: true,\n    },\n    Knowledge_Planes: {\n      ability: \"intelligence\",\n      ranks: 23,\n      miscModifier: 0,\n      classSkill: true,\n      armorCheck: false,\n      display: true,\n    },\n    Knowledge_History: {\n      ability: \"intelligence\",\n      ranks: 0,\n      miscModifier: 0,\n      classSkill: true,\n      armorCheck: false,\n      display: true,\n    },\n    Listen: {\n      ability: \"wisdom\",\n      ranks: 0,\n      miscModifier: 0,\n      classSkill: false,\n      armorCheck: false,\n      display: true,\n    },\n    Move_Silently: {\n      ability: \"dexterity\",\n      ranks: 0,\n      miscModifier: 0,\n      classSkill: false,\n      armorCheck: true,\n      display: false,\n    },\n    Perception: {\n      ability: \"wisdom\",\n      ranks: 9,\n      miscModifier: 16,\n      classSkill: true,\n      armorCheck: false,\n      display: true,\n    },\n    Perform_Acting: {\n      ability: \"charisma\",\n      ranks: 20,\n      miscModifier: 0,\n      classSkill: true,\n      armorCheck: false,\n      display: true,\n    },\n    Perform_Dancing: {\n      ability: \"charisma\",\n      ranks: 1,\n      miscModifier: 0,\n      classSkill: true,\n      armorCheck: true,\n      display: true,\n    },\n    Ride: {\n      ability: \"dexterity\",\n      ranks: 0,\n      miscModifier: 0,\n      classSkill: false,\n      armorCheck: false,\n      display: true,\n    },\n    Search: {\n      ability: \"intelligence\",\n      ranks: 0,\n      miscModifier: 0,\n      classSkill: false,\n      armorCheck: false,\n      display: true,\n    },\n    SenseMotive: {\n      ability: \"wisdom\",\n      ranks: 6,\n      miscModifier: 18,\n      classSkill: true,\n      armorCheck: false,\n      display: true,\n    },\n    Spellcraft: {\n      ability: \"intelligence\",\n      ranks: 20,\n      miscModifier: 2,\n      classSkill: true,\n      armorCheck: false,\n      display: true,\n    },\n    Spot: {\n      ability: \"wisdom\",\n      ranks: 0,\n      miscModifier: 0,\n      classSkill: false,\n      armorCheck: false,\n      display: true,\n    },\n    Stealth: {\n      ability: \"dexterity\",\n      ranks: 0,\n      miscModifier: 23,\n      classSkill: true,\n      armorCheck: true,\n      display: true,\n    },\n    Survival: {\n      ability: \"wisdom\",\n      ranks: 0,\n      miscModifier: 0,\n      classSkill: false,\n      armorCheck: false,\n      display: true,\n    },\n    Swim: {\n      ability: \"strength\",\n      ranks: 0,\n      miscModifier: 8,\n      classSkill: false,\n      armorCheck: true,\n      display: true,\n    },\n    Use_Magic_Device: {\n      ability: \"charisma\",\n      ranks: 0,\n      miscModifier: 2,\n      classSkill: true,\n      armorCheck: false,\n      display: true,\n    },\n    Use_Rope: {\n      ability: \"dexterity\",\n      ranks: 0,\n      miscModifier: 0,\n      classSkill: false,\n      armorCheck: false,\n      display: true,\n    },\n  },\n  characterAbilities: {\n    active: [\n      { name: \"Light_Ray\", type: \"supernatural\" },\n      { name: \"Paralyzing_Touch\", type: \"supernatural\" },\n      { name: \"Positive_Energy_Touch\", type: \"supernatural\" },\n      { name: \"Turn_Undead\", type: \"supernatural\" },\n    ],\n    passive: [{ name: \"Aura_Of_Menace\", type: \"supernatural\" }],\n  },\n  magic: {\n    slas: {\n      zero: \"\",\n      one: [\n        { name: \"Chill Touch\", uses: 4, frequency: \"day\" },\n        { name: \"Floating Disk\", uses: 4, frequency: \"day\" },\n      ],\n      two: [\n        { name: \"Command Undead\", uses: 4, frequency: \"day\" },\n        { name: \"Acid Arrow\", uses: 4, frequency: \"day\" },\n      ],\n      three: [\n        { name: \"Vampiric Touch\", uses: 2, frequency: \"day\" },\n        { name: \"Phantom Steed\", uses: 2, frequency: \"day\" },\n      ],\n      four: [\n        { name: \"Affliction\", uses: 2, frequency: \"day\" },\n        { name: \"Enervation\", uses: 2, frequency: \"day\" },\n      ],\n      five: [\n        { name: \"Mage's Faithful Hound\", uses: 2, frequency: \"day\" },\n        { name: \"Wall Of Force\", uses: 2, frequency: \"day\" },\n      ],\n      six: [{ name: \"Contingency\", uses: 1, frequency: \"day\" }],\n      seven: \"\",\n      eight: \"\",\n      nine: \"\",\n    },\n    spellcaster: true,\n    type: {\n      arcane: true,\n      divine: false,\n    },\n    spells: {\n      zero: [\n        \"Mending\",\n        \"Arcane Mark\",\n        \"Ghost Sound\",\n        \"Detect Magic\",\n        \"Mage Hand\",\n        \"Message\",\n        \"Light\",\n        \"Read Magic\",\n        \"Acid Splash\",\n        \"Lullaby\",\n        \"Know Direction\",\n        \"Open/Close\",\n        \"Prestidigitation\",\n      ],\n      one: [\n        \"Silent Image\",\n        \"Disguise Self\",\n        \"Magic Missile\",\n        \"Mage Armor\",\n        \"Charm Person\",\n      ],\n      two: [\n        \"Ghoul Touch\",\n        \"Arcane Lock\",\n        \"Knock\",\n        \"Alter Fortune\",\n        \"Scorching Ray\",\n      ],\n      three: [\n        \"Shrink Item\",\n        \"Tiny Hut\",\n        \"Ray Of Exhaustion\",\n        \"Explosive Runes\",\n      ],\n      four: [\"Resilient Sphere\", \"Create Fetch\", \"Dimension Door\", \"Polymorph\"],\n      five: [\n        \"Telekinesis\",\n        \"Sending\",\n        \"Passwall\",\n        \"Planar Binding, Lesser\",\n        \"Feeblemind\",\n      ],\n      six: [\n        \"Disintigrate\",\n        \"Freezing Sphere\",\n        \"Planar Binding\",\n        \"Permanent Image\",\n      ],\n      seven: [\"Teleport Object\", \"Stun Ray\", \"Waves Of Exhaustion\"],\n      eight: [\n        \"Polymorph Any Object\",\n        \"Horrid Wilting\",\n        \"Planar Binding, Greater\",\n        \"Last Judgment\",\n      ],\n      nine: [\n        \"Replicate Casting\",\n        \"Sphere Of Ultimate Destruction\",\n        \"Crushing Hand\",\n      ],\n    },\n    spellbook: {\n      zero: [\n        \"Arcane Mark\",\n        \"Prestidigitation\",\n        \"Mage Hand\",\n        \"Resistance\",\n        \"Disrupt Undead\",\n        \"Touch Of Fatigue\",\n        \"Mending\",\n        \"Message\",\n        \"Open/Close\",\n        \"Preserve Organ\",\n        \"No-Light\",\n        \"Slash Tongue\",\n        \"Silent Portal\",\n      ],\n      one: [\"one\"],\n      two: [\"two\"],\n      three: [\"three\"],\n      four: [\"four\"],\n      five: [\"five\"],\n      six: [\"six\"],\n      seven: [\"seven\"],\n      eight: [\"eight\"],\n      nine: [\"nine\"],\n    },\n    spellsPerDay: {\n      zero: 8,\n      one: 6,\n      two: 6,\n      three: 6,\n      four: 6,\n      five: 6,\n      six: 6,\n      seven: 6,\n      eight: 6,\n      nine: 6,\n    },\n  },\n  items: [\n    \"Mesmerist's Gloves\",\n    \"Nolzure's Orb\",\n    \"Vanisher Cloak\",\n    \"GateBreaker Ballista Bolt\",\n  ],\n};\n","export default [\n  //Mending\n  {\n    name: \"Mending\",\n    type: \"Transmutation\",\n    level: \"Brd 0, Clr 0, Drd 0, Sor/Wiz 0\",\n    components: \"V, S\",\n    castingTime: \"1 standard action\",\n    range: \"10 ft.\",\n    target: \"One object of up to 1 lb.\",\n    duration: \"Instantaneous\",\n    savingThrow: \"Will negates (harmless, object)\",\n    spellResistance: \"Yes (harmless, object)\",\n    description:\n      \"Mending repairs small breaks or tears in objects (but not warps, such as might be caused by a warp wood spell). It will weld broken metallic objects such as a ring, a chain link, a medallion, or a slender dagger, providing but one break exists.\\n\\nCeramic or wooden objects with multiple breaks can be invisibly rejoined to be as strong as new. A hole in a leather sack or a wineskin is completely healed over by mending. The spell can repair a magic item, but the item’s magical abilities are not restored. The spell cannot mend broken magic rods, staffs, or wands, nor does it affect creatures (including constructs).\",\n  },\n  //Arcane Mark\n  {\n    name: \"Arcane Mark\",\n    type: \"Universal\",\n    level: \"Sor/Wiz 0\",\n    components: \"V, S\",\n    castingTime: \"1 standard action\",\n    range: \"0 ft.\",\n    effect: \"One personal rune or mark, all of which must fit within 1 sq. ft.\",\n    duration: \"Permanent\",\n    savingThrow: \"None\",\n    spellResistance: \"No\",\n    description:\n      \"This spell allows you to inscribe your personal rune or mark, which can consist of no more than six characters. The writing can be visible or invisible. An arcane mark spell enables you to etch the rune upon any substance without harm to the material upon which it is placed. If an invisible mark is made, a detect magic spell causes it to glow and be visible, though not necessarily understandable.\\n\\nSee invisibility, true seeing, a gem of seeing, or a robe of eyes likewise allows the user to see an invisible arcane mark. A read magic spell reveals the words, if any. The mark cannot be dispelled, but it can be removed by the caster or by an erase spell.\\n\\nIf an arcane mark is placed on a living being, normal wear gradually causes the effect to fade in about a month.\\n\\nArcane mark must be cast on an object prior to casting instant summons on the same object (see that spell description for details).\",\n  },\n  //Ghost Sound\n  {\n    name: \"Ghost Sound\",\n    type: \"Illusion (Figment)\",\n    level:\n      \"Bard 0, Sorcerer 0, Wizard 0, Adept 0, Death Master 0, Sha'ir 0, Wu Jen 0, Blighter 0, Beguiler 0, Vigilante 1, Slayer of Domiel 1, Ebonmar Infiltrator 1, Hoardstealer 1, Assassin 1,\",\n    components: \"V, S, M\",\n    castingTime: \"1 standard action\",\n    range: \"Close (25 ft. + 5 ft./2 levels)\",\n    effect: \"Illusory sounds\",\n    duration: \"1 round/level (D)\",\n    savingThrow: \"Will disbelief (if interacted with)\",\n    spellResistance: \"No\",\n    description:\n      \"Ghost sound allows you to create a volume of sound that rises, recedes, approaches, or remains at a fixed place.\\n\\nYou choose what type of sound ghost sound creates when casting it and cannot thereafter change the sound's basic character.\\n\\nThe volume of sound created depends on your level.\\n\\nYou can produce as much noise as four normal humans per caster level (maximum twenty humans).\\n\\nThus, talking, singing, shouting, walking, marching, or running sounds can be created.\\n\\nThe noise a ghost sound spell produces can be virtually any type of sound within the volume limit.\\n\\nA horde of rats running and squeaking is about the same volume as eight humans running and shouting.\\n\\nA roaring lion is equal to the noise from sixteen humans, while a roaring dire tiger is equal to the noise from twenty humans.\\n\\nGhost sound can enhance the effectiveness of a silent image spell.\\n\\nGhost sound can be made permanent with a permanency spell.\\n\\nMaterial Component: A bit of wool or a small lump of wax.\",\n    source: \"Players Handbook\",\n  },\n  //Detect magic\n  {\n    name: \"Detect Magic\",\n    type: \"Divination\",\n    level:\n      \"Bard 0, Urban Druid 0, Jester 0, Death Master 0, Sha'ir 0, Wu Jen 0, Blighter 0, Beguiler 0, Court Herald 0, Cleric 0, Healer 0, Adept 0, Druid 0, Sorcerer 0, Wizard 0, Ebonmar Infiltrator 1, Dread Necromancer 1, Nentyar Hunter 1, Hoardstealer 1, Vigilante 1\",\n    components: \"V, S\",\n    castingTime: \"1 standard action\",\n    range: \"60 ft.\",\n    duration: \"Concentration, up to 1 min./level (D)\",\n    savingThrow: \"None\",\n    spellResistance: \"No\",\n    description:\n      \"You detect magical auras. The amount of information revealed depends on how long you study a particular area or subject.\\n\\n1st Round: Presence or absence of magical auras.\\n\\n2nd Round: Number of different magical auras and the power of the most potent aura.\\n\\n3rd Round: The strength and location of each aura. If the items or creatures bearing the auras are in line of sight, you can make Spellcraft skill checks to determine the school of magic involved in each. (Make one check per aura; DC 15 + spell level, or 15 + half caster level for a nonspell effect).\\n\\nMagical areas, multiple types of magic, or strong local magical emanations may distort or conceal weaker auras.\\n\\nAura Strength: An aura's power depends on a spell's functioning spell level or an item's caster level. If an aura falls into more than one category, detect magic indicates the stronger of the two.\\n\\nLingering Aura: A magical aura lingers after its original source dissipates (in the case of a spell) or is destroyed (in the case of a magic item). If detect magic is cast and directed at such a location, the spell indicates an aura strength of dim (even weaker than a faint aura). How long the aura lingers at this dim level depends on its original power\\n\\nOutsiders and elementals are not magical in themselves, but if they are summoned, the conjuration spell registers.\\n\\nEach round, you can turn to detect magic in a new area. The spell can penetrate barriers, but 1 foot of stone, 1 inch of common metal, a thin sheet of lead, or 3 feet of wood or dirt blocks it.\\n\\nDetect magic can be made permanent with a permanency spell.\",\n    source: \"Player's Handbook\",\n  },\n  //Mage Hand\n  {\n    name: \"Mage Hand\",\n    type: \"Transmutation\",\n    level:\n      \"Bard 0, Sorcerer 0, Wizard 0, Wu Jen 0, Sha'ir 0, Death Master 0, Jester 0, Court Herald 0, Vigilante 1\",\n    components: \"V, S\",\n    castingTime: \"1 standard action\",\n    range: \"Close (25 ft. + 5 ft./2 levels\",\n    target: \"One nonmagical, unattended object weighing up to 5 lb.\",\n    duration: \"Concentration\",\n    savingThrow: \"None\",\n    spellResistance: \"No\",\n    description:\n      \"You point your finger at an object and can lift it and move it at will from a distance.\\n\\nAs a move action, you can propel the object as far as 15 feet in any direction, though the spell ends if the distance between you and the object ever exceeds the spell's range.\",\n    source: \"Player's Handbook\",\n  },\n  //Message\n  {\n    name: \"Message\",\n    type: \"Transmutation [Language-Dependent]\",\n    level:\n      \"Bard 0, Sorcerer 0, Wizard 0, Beguiler 0, Wu Jen 0, Sha'ir 0, Vigilante 1, Trade 1\",\n    components: \"V, S, AF\",\n    castingTime: \"1 standard action\",\n    range: \"Medium (100 ft. + 10 ft./level\",\n    target: \"One creature/level\",\n    duration: \"10 min./level\",\n    savingThrow: \"None\",\n    spellResistance: \"No\",\n    description:\n      \"You can whisper messages and receive whispered replies with little chance of being overheard. You point your finger at each creature you want to receive the message. When you whisper, the whispered message is audible to all targeted creatures within range. Magical silence, 1 foot of stone, 1 inch of common metal (or a thin sheet of lead), or 3 feet of wood or dirt blocks the spell. The message does not have to travel in a straight line. It can circumvent a barrier if there is an open path between you and the subject, and the path's entire length lies within the spell's range. The creatures that receive the message can whisper a reply that you hear. The spell transmits sound, not meaning. It doesn't transcend language barriers.\\n\\nNote: To speak a message, you must mouth the words and whisper, possibly allowing observers the opportunity to read your lips.\\n\\nFocus: A short piece of copper wire.\",\n    source: \"Player's Handbook\",\n  },\n  //Light\n  {\n    name: \"Light\",\n    type: \"Evocation [Light]\",\n    level: \"Brd 0, Clr 0, Drd 0, Sor/Wiz 0\",\n    components: \"V, M/DF\",\n    castingTime: \"1 standard action\",\n    range: \"Touch\",\n    target: \"Object touched\",\n    duration: \"10 min./level (D)\",\n    savingThrow: \"None\",\n    spellResistance: \"No\",\n    description:\n      \"This spell causes an object to glow like a torch, shedding bright light in a 20-foot radius (and dim light for an additional 20 feet) from the point you touch. The effect is immobile, but it can be cast on a movable object. Light taken into an area of magical darkness does not function.\\n\\nA light spell (one with the light descriptor) counters and dispels a darkness spell (one with the darkness descriptor) of an equal or lower level.\\n\\nArcane Material Component\\nA firefly or a piece of phosphorescent moss.\",\n    source: \"Player's Handbook\",\n  },\n  //Read Magic\n  {\n    name: \"Read Magic\",\n    type: \"Divination\",\n    level:\n      \"Bard 0, Urban Druid 0, Death Master 0, Sha'ir 0, Wu Jen 0, Blighter 0, Beguiler 0, Court Herald 0, Healer 0, Adept 0, Cleric 0, Druid 0, Wizard 0, Sorcerer 0, Paladin 1, Ranger 1, Vigilante 1, Knight of the Weave 1, Hoardstealer 1\",\n    components: \"V, S, AF\",\n    castingTime: \"1 standard action\",\n    range: \"Personal\",\n    target: \"You\",\n    duration: \"10 min./level\",\n    description:\n      \"By means of read magic, you can decipher magical inscriptions on objects—books, scrolls, weapons, and the like—that would otherwise be unintelligible.\\n\\nThis deciphering does not normally invoke the magic contained in the writing, although it may do so in the case of a cursed scroll.\\n\\nFurthermore, once the spell is cast and you have read the magical inscription, you are thereafter able to read that particular writing without recourse to the use of read magic.\\n\\nYou can read at the rate of one page (250 words) per minute.\\n\\nThe spell allows you to identify a glyph of warding with a DC 13 Spellcraft check, a greater glyph of warding with a DC 16 Spellcraft check, or any symbol spell with a Spellcraft check (DC 10 + spell level).\\n\\nRead magic can be made permanent with a permanency spell.\\n\\nFocus: A clear crystal or mineral prism.\",\n    source: \"Player's Handbook\",\n  },\n  //Acid Splash\n  {\n    name: \"Acid Splash\",\n    type: \"Conjuration (Creation) [Acid]\",\n    level: \"Sorcerer 0, Wizard 0, Warmage 0, Duskblade 0, Sha'ir 0\",\n    components: \"V, S\",\n    castingTime: \"1 standard action\",\n    range: \"Close (25 ft. + 5 ft./2 levels\",\n    effect: \"One missile of acid\",\n    duration: \"Instantaneous\",\n    savingThrow: \"None\",\n    spellResistance: \"No\",\n    description:\n      \"You fire a small orb of acid at the target.\\n\\nYou must succeed on a ranged touch attack to hit your target. The orb deals 1d3 points of acid damage.\",\n    source: \"Player's Handbook\",\n  },\n  //Lullaby\n  {\n    name: \"Lullaby\",\n    type: \"Enchantement (Compulsion) [Mind-Affecting]\",\n    level: \"Bard 0\",\n    components: \"V, S\",\n    castingTime: \"1 standard action\",\n    range: \"Medium(100 ft. + 10 ft./level)\",\n    area: \"Living creatures within a 10-ft.-radius burst\",\n    duration: \"Concentration + 1 round/level (D)\",\n    savingThrow: \"Will negates\",\n    spellResistance: \"Yes\",\n    description:\n      \"Any creature within the area that fails a Will save becomes drowsy and inattentive, taking a -5 penalty on Listen and Spot checks and a -2 penalty on Will saves against sleep effects while the lullaby is in effect.\\nLullaby lasts for as long as the caster concentrates, plus up to 1 round per caster level thereafter.\",\n    source: \"Player's Handbook\",\n  },\n  //Know direction\n  {\n    name: \"Know Direction\",\n    type: \"Divination\",\n    level: \"Bard 0, Druid 0, Urban Druid 0, Vigilante 1\",\n    components: \"V, S\",\n    castingTime: \"1 standard action\",\n    range: \"Personal\",\n    target: \"You\",\n    duration: \"Instantaneous\",\n    description:\n      \"You instantly know the direction of north from your current position.\\nThe spell is effective in any environment in which 'north' exists, but it may not work in extraplanar settings.\\nYour knowledge of north is correct at the moment of casting, but you can get lost again within moments if you don't find some external reference point to help you keep track of direction.\",\n    source: \"Player's Handbook\",\n  },\n  //Open/Close\n  {\n    name: \"Open/Close\",\n    type: \"Transmutation\",\n    level:\n      \"Bard 0, Sorcerer 0, Wizard 0, Beguiler 0, Wu Jen 0, Sha'ir 0, Jester 0, Court Herald 0, Vigilante 1\",\n    components: \"V, S, AF\",\n    castingTime: \"1 standard action\",\n    range: \"Close (25 ft. + 5 ft./2 levels\",\n    target:\n      \"Object weighing up to 30 lb. or portal that can be opened or closed\",\n    duration: \"Instantaneous\",\n    savingThrow: \"Will negates (object)\",\n    spellResistance: \"Yes (object)\",\n    description:\n      \"You can open or close (your choice) a door, chest, box, window, bag, pouch, bottle, barrel, or other container.\\nIf anything resists this activity (such as a bar on a door or a lock on a chest), the spell fails.\\nIn addition, the spell can only open and close things weighing 30 pounds or less.\\nThus, doors, chests, and similar objects sized for enormous creatures may be beyond this spell's ability to affect.\\nFocus: A brass key.\",\n    source: \"Player's Handbook\",\n  },\n  //Prestidigitation\n  {\n    name: \"Prestidigitation\",\n    type: \"Universal\",\n    level:\n      \"Bard 0, Sorcerer 0, Wizard 0, Wu Jen 0, Sha'ir 0, Death Master 0, Jester 0, Vigilante 1\",\n    components: \"V, S\",\n    castingTime: \"1 standard action\",\n    range: \"10 ft.\",\n    target: \"See text\",\n    duration: \"1 hour\",\n    savingThrow: \"See text\",\n    spellResistance: \"No\",\n    description:\n      \"Prestidigitations are minor tricks that novice spellcasters use for practice.\\nOnce cast, a prestidigitation spell enables you to perform simple magical effects for 1 hour.\\nThe effects are minor and have severe limitations.\\nA prestidigitation can slowly lift 1 pound of material.\\nIt can color, clean, or soil items in a 1-foot cube each round.\\nIt can chill, warm, or flavor 1 pound of nonliving material.\\nIt cannot deal damage or affect the concentration of spellcasters.\\nPrestidigitation can create small objects, but they look crude and artificial.\\nThe materials created by a prestidigitation spell are extremely fragile, and they cannot be used as tools, weapons, or spell components.\\nFinally, a prestidigitation lacks the power to duplicate any other spell effects.\\nAny actual change to an object (beyond just moving, cleaning, or soiling it) persists only 1 hour.\\nCharacters typically use prestidigitation spells to impress common folk, amuse children, and brighten dreary lives.\\nCommon tricks with prestidigitations include producing tinklings of ethereal music, brightening faded flowers, creating glowing balls that float over your hand, generating puffs of wind to flicker candles, spicing up aromas and flavors of bland food, and making little whirlwinds to sweep dust under rugs.\",\n    source: \"Player's Handbook\",\n  },\n  //Chill touch\n  {\n    name: \"Chill Touch\",\n    type: \"Necromancy\",\n    level: \"Sor/Wiz 1\",\n    components: \"V, S\",\n    castingTime: \"1 standard action\",\n    range: \"Touch\",\n    target: \"Creature or creatures touched (up to one/level)\",\n    duration: \"Instantaneous\",\n    savingThrow: \"Fortitude partial or Will negates; see text\",\n    spellResistance: \"Yes\",\n    description:\n      \"A touch from your hand, which glows with blue energy, disrupts the life force of living creatures. Each touch channels negative energy that deals 1d6 points of damage. The touched creature also takes 1 point of Strength damage unless it makes a successful Fortitude saving throw. You can use this melee touch attack up to one time per level.\\n\\nAn undead creature you touch takes no damage of either sort, but it must make a successful Will saving throw or flee as if panicked for 1d4 rounds +1 round per caster level.\",\n    source: \"SRD\",\n  },\n];\n","import { Server, Model, RestSerializer } from \"miragejs\";\nimport characters from \"./characters\";\nimport spells from \"./spells\";\n\nexport function makeServer({ environment = \"test\" } = {}) {\n  let server = new Server({\n    environment,\n\n    models: {\n      character: Model,\n      spell: Model,\n    },\n\n    serializers: {\n      application: RestSerializer,\n    },\n\n    seeds(server) {\n      // set up all the starting data\n      characters.forEach((char) => server.create(\"character\", char));\n      spells.forEach((spell) => server.create(\"spell\", spell));\n    },\n\n    routes() {\n      this.namespace = \"api\";\n\n      // Here is where you add the server endpoints for your app:\n\n      this.get(\"/characters\", (schema) => {\n        return schema.characters.all();\n      });\n\n      this.get(\"/spells\", (schema) => {\n        return schema.spells.all();\n      });\n\n      this.post(\"/characters/:charId\", (schema, request) => {\n        let attrs = JSON.parse(request.requestBody);\n        return { character: attrs };\n      });\n    },\n  });\n\n  return server;\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { RecoilRoot } from \"recoil\";\nimport { SWRConfig } from \"swr\";\nimport \"./components/dnd.css\";\nimport LoadApp from \"./components/dnd\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { makeServer } from \"./server\";\n\n// Whenever it is time for a real server, this should be removed.\nmakeServer({ environment: \"development\" });\n\nReactDOM.render(\n  <React.StrictMode>\n    <RecoilRoot>\n      <SWRConfig\n        value={{\n          fetcher: (...args) => fetch(...args).then((res) => res.json()),\n        }}\n      >\n        <LoadApp />\n      </SWRConfig>\n    </RecoilRoot>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}