{"version":3,"sources":["components/Navbars.js","components/BasicInfo.js","components/Items.js","components/SLAs.js","components/ActiveAbilities.js","components/SpellInfo.js","components/PrepSpells.js","components/Spells.js","components/PassiveAbilities.js","components/AbilityScores.js","components/Skills.js","components/MainDisplay.js","components/dnd.js","serviceWorker.js","server/characters/index.js","server/characters/Arn_Hachem.js","server/index.js","index.js"],"names":["AbilitySelector","props","useContext","GetSetDisplayTwo","displayTwo","setDisplayTwo","navButtonCodeBlock","name","id","onClick","className","StatsSelector","SecondaryNavbar","display","navSwitch","PrimaryNavbar","statIcon","abilityIcon","itemIcon","icon","secondaryName","setDisplay","setBothDisplays","CharacterType","value","CharacterClasses","BasicInfo","character","Character","ReadTossDice","rollResult","useState","toggle","setToggle","health","hitPoints","total","damage","temporaryHitPoints","type","map","t","key","classList","class","c","level","armorClass","ac","ItemsHeld","ToggleInfo","toggleInfo","setToggleInfo","item","formattedItem","replace","buttonAndSpellClass","Items","Object","values","items","s","KnownSLAs","spell","formattedSpell","SLAs","displaySLAs","magic","slas","spellCodeBlock","levelNum","levelRoman","arcane","divine","KnownActiveAbilities","ability","formattedAbility","ActiveAbilities","characterAbilities","active","SpellInfo","Selection","selection","foundLevel","keys","spells","forEach","includes","getSpellLevel","Spellbook","PrepSpells","PrimaryModifier","primaryModifier","displaySpells","spellbook","totalSpells","KnownSpells","setSelection","displayInfo","Spells","KnownPassiveAbilities","PassiveAbilities","passive","AbilityScores","str","abilities","score","strength","dex","dexterity","con","constitution","int","intelligence","wis","wisdom","cha","charisma","strMod","abilityModifier","dexMod","conMod","intMod","wisMod","chaMod","setRollResult","abilityScoreCodeBlock","abilityString","abilityScore","abilityMod","rollDice","SkillsListItem","skills","formattedSkill","skill","skillPoints","classSkills","hasOwnProperty","Skills","skillsArray","classSkillsArray","skillsBlock","sort","style","listStyleType","MainDisplay","Provider","infoSheet","screenSwitch","size","mod","use","dice","Math","floor","random","edgeRollClassAssignment","React","createContext","GetSetDisplay","spellsPerDay","ceil","bonusSpellsPerDay","App","setPrimaryModifier","useEffect","document","title","LoadApp","data","useSWR","characters","Boolean","window","location","hostname","match","dieSize","armor","shield","naturalArmor","deflection","misc","touch","flatFooted","alignment","speed","Balance","Climb","Concentration","Craft_Tailor","Escape_Artist","Hide","Jump","Listen","Move_Silently","Ride","Search","Spot","Survival","Swim","Use_Rope","Appraise","Bluff","Decipher_Script","Diplomacy","Diguise","Forgery","Gather_Information","Heal","Intimidate","Knowledge_Arcana","Knowledge_Dungeoneering","Knowledge_Religion","Knowledge_Planes","Perception","Perform_Acting","Perform_Dancing","SenseMotive","Spellcraft","Stealth","Use_Magic_Device","zero","one","two","three","four","five","six","seven","eight","nine","spellcaster","environment","server","Server","models","Model","serializers","application","RestSerializer","seeds","char","create","routes","this","namespace","get","schema","all","makeServer","ReactDOM","render","StrictMode","fetcher","fetch","then","res","json","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.5e33ba79.chunk.js","sourcesContent":["import React, { useContext } from \"react\";\nimport { GetSetDisplayTwo } from \"./dnd.js\";\n\nconst AbilitySelector = props => {\n  const [displayTwo, setDisplayTwo] = useContext(GetSetDisplayTwo);\n  function navButtonCodeBlock(name) {\n    return (\n      <button\n        id={name}\n        onClick={() => setDisplayTwo(name)}\n        className={displayTwo === name ? \"navbarItemsOn\" : \"navbarItemsOff\"}\n      >\n        {name}\n      </button>\n    );\n  }\n  return (\n    <div>\n      <ul id=\"abilitySelector\" className=\"navbarContainer\">\n        {navButtonCodeBlock(\"Spells\")}\n        {navButtonCodeBlock(\"Abilities\")}\n        {navButtonCodeBlock(\"SLAs\")}\n      </ul>\n    </div>\n  );\n};\nconst StatsSelector = props => {\n  const [displayTwo, setDisplayTwo] = useContext(GetSetDisplayTwo);\n  function navButtonCodeBlock(name) {\n    return (\n      <button\n        id={name}\n        onClick={() => setDisplayTwo(name)}\n        className={displayTwo === name ? \"navbarItemsOn\" : \"navbarItemsOff\"}\n      >\n        {name}\n      </button>\n    );\n  }\n  return (\n    <div>\n      <ul id=\"statsSelector\" className=\"navbarContainer\">\n        {navButtonCodeBlock(\"Skills\")}\n        {navButtonCodeBlock(\"Scores\")}\n        {navButtonCodeBlock(\"Passive\")}\n      </ul>\n    </div>\n  );\n};\nconst SecondaryNavbar = props => {\n  function navSwitch(display) {\n    switch (display) {\n      case \"stats\":\n        return <StatsSelector />;\n      case \"ability\":\n        return <AbilitySelector />;\n      case null:\n        return null;\n      default:\n        return <StatsSelector />;\n    }\n  }\n  return (\n    <>\n      <div id=\"secondaryNavbar\">{navSwitch(props.display)}</div>\n    </>\n  );\n};\nconst PrimaryNavbar = props => {\n  const statIcon = <i id=\"statIcon\" className=\"far fa-chart-bar\"></i>;\n  const abilityIcon = <i id=\"spellIcon\" className=\"fas fa-hand-sparkles\"></i>;\n  const itemIcon = <i id=\"itemIcon\" className=\"fas fa-scroll\"></i>;\n  function setBothDisplays(name, secondaryName) {\n    props.setDisplay(name);\n    if (secondaryName !== null) {\n      props.setDisplayTwo(secondaryName);\n    }\n  }\n  function navButtonCodeBlock(name, icon, secondaryName) {\n    return (\n      <button\n        id={name}\n        onClick={() => setBothDisplays(name, secondaryName)}\n        className={props.display === name ? \"navbarItemsOn\" : \"navbarItemsOff\"}\n      >\n        {icon}\n      </button>\n    );\n  }\n  return (\n    <div>\n      <ul id=\"primaryNavbar\" className=\"navbarContainer\">\n        {navButtonCodeBlock(\"stats\", statIcon, \"Skills\")}\n        {navButtonCodeBlock(\"ability\", abilityIcon, \"Spells\")}\n        {navButtonCodeBlock(null, itemIcon, \"Items\")}\n      </ul>\n    </div>\n  );\n};\n\nexport { PrimaryNavbar, SecondaryNavbar };\n","import React, { useState, useContext } from \"react\";\nimport { Character, ReadTossDice } from \"./dnd.js\";\n\nconst BasicInfo = props => {\n  const character = useContext(Character);\n  const [rollResult] = useContext(ReadTossDice);\n  //toggle for 'more' button\n  const [toggle, setToggle] = useState(false);\n  //display conditional more/less\n  const moreLess = () => {\n    if (toggle) {\n      return \"(less)\";\n    } else {\n      return \"(more)\";\n    }\n  };\n  const health =\n    character.hitPoints.total -\n    character.hitPoints.damage +\n    character.hitPoints.temporaryHitPoints;\n  const type = character.type.map(t => <CharacterType key={t} value={t} />);\n  const classList = character.class.map(c => (\n    <CharacterClasses key={c} value={c} />\n  ));\n  return (\n    <div>\n      <div className=\"topContainer\">\n        <button\n          className={toggle ? \"moreButtonOn\" : \"moreButtonOff\"}\n          onClick={() => setToggle(!toggle)}\n        >\n          <h1 id=\"nameAndLevel\">\n            {character.name} ({character.level})\n          </h1>\n          <em id=\"moreLess\">{moreLess()}</em>\n        </button>\n\n        {toggle === true && (\n          <div id=\"characterInfo\">\n            <div id=\"characterType\">\n              type: <br /> {type}\n            </div>\n            <ul id=\"classList\">\n              class: <br /> {classList}\n            </ul>\n          </div>\n        )}\n        <div id=\"HPACDiceWrapper\">\n          <div id=\"hpacWrapper\">\n            <p id=\"hp\">hp: {health}</p>\n            <p id=\"ac\">ac: {character.armorClass.ac.total}</p>\n          </div>\n          <div id=\"diceRollResultWrapper\">{rollResult}</div>\n        </div>\n      </div>\n    </div>\n  );\n};\nconst CharacterType = props => {\n  return <span>{props.value} / </span>;\n};\nconst CharacterClasses = props => {\n  return <li>{props.value}</li>;\n};\n\nexport default BasicInfo;\n","import React, { useContext } from \"react\";\nimport { Character, ToggleInfo } from \"./dnd.js\";\n\nconst ItemsHeld = props => {\n  const [toggleInfo, setToggleInfo] = useContext(ToggleInfo);\n  const item = props.value;\n  const formattedItem = item.replace(/_/g, \" \");\n  const buttonAndSpellClass = \"spellButtons \" + item;\n  return (\n    <button\n      className={buttonAndSpellClass}\n      onClick={() => setToggleInfo(!toggleInfo)}\n    >\n      {formattedItem}\n    </button>\n  );\n};\nconst Items = props => {\n  const character = useContext(Character);\n  function displayItems() {\n    const items = Object.values(character.items).map(s => (\n      <ItemsHeld key={s} value={s} />\n    ));\n    return items;\n  }\n  return (\n    <div>\n      <h1>Items</h1>\n      <div className=\"spellContainer\">\n        <div className=\"spellItems\">\n          <p className=\"spellList\">{displayItems()}</p>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Items;\n","import React, { useContext } from \"react\";\nimport { ToggleInfo, Character } from \"./dnd.js\";\n\nconst KnownSLAs = props => {\n  const [toggleInfo, setToggleInfo] = useContext(ToggleInfo);\n  const spell = props.value;\n  const formattedSpell = spell.replace(/_/g, \" \");\n  const buttonAndSpellClass = \"spellButtons \" + spell;\n  return (\n    <button\n      className={buttonAndSpellClass}\n      onClick={() => setToggleInfo(!toggleInfo)}\n    >\n      {formattedSpell}\n    </button>\n  );\n};\nconst SLAs = props => {\n  const character = useContext(Character);\n  //cantrips or orisons? or both?\n  function casterType() {\n    if (character.magic.type.arcane && character.magic.type.divine) {\n      return \"Cantrips & Orisons\";\n    } else if (character.magic.type.divine) {\n      return \"Orisons\";\n    } else if (character.magic.type.arcane) {\n      return \"Cantrips\";\n    }\n  }\n  function displaySLAs(level) {\n    const slas = Object.values(character.magic.slas[level]).map(s => (\n      <KnownSLAs key={s} value={s} />\n    ));\n    return slas;\n  }\n  //condense SLA code block into function\n  function spellCodeBlock(level, levelNum, levelRoman) {\n    return (\n      <div className=\"spellItems\">\n        <div className=\"spellLevelWrapper\">\n          <h2 className=\"spellLevelHeader\">Level {levelRoman}</h2>\n        </div>\n        <p className=\"spellList\">{displaySLAs(level)}</p>\n        <hr />\n      </div>\n    );\n  }\n  return (\n    <div>\n      <div className=\"spellContainer\">\n        <div className=\"spellItems\">\n          <div className=\"spellLevelWrapper\">\n            <h2 className=\"spellLevelHeader\">{casterType()}</h2>\n          </div>\n          <p className=\"spellList\">{displaySLAs(\"zero\")}</p>\n          <hr />\n        </div>\n        {spellCodeBlock(\"one\", 1, \"I\")}\n        {spellCodeBlock(\"two\", 2, \"II\")}\n        {spellCodeBlock(\"three\", 3, \"III\")}\n        {spellCodeBlock(\"four\", 4, \"IV\")}\n        {spellCodeBlock(\"five\", 5, \"V\")}\n        {spellCodeBlock(\"six\", 6, \"VI\")}\n        {spellCodeBlock(\"seven\", 7, \"VII\")}\n        {spellCodeBlock(\"eight\", 8, \"VIII\")}\n        {spellCodeBlock(\"nine\", 9, \"IX\")}\n      </div>\n    </div>\n  );\n};\n\nexport default SLAs;\n","import React, { useContext } from \"react\";\nimport { ToggleInfo, Character } from \"./dnd.js\";\n\nconst KnownActiveAbilities = props => {\n  const [toggleInfo, setToggleInfo] = useContext(ToggleInfo);\n  const ability = props.value;\n  const formattedAbility = ability.replace(/_/g, \" \");\n  const buttonAndSpellClass = \"spellButtons \" + ability;\n  return (\n    <button\n      className={buttonAndSpellClass}\n      onClick={() => setToggleInfo(!toggleInfo)}\n    >\n      {formattedAbility}\n    </button>\n  );\n};\nconst ActiveAbilities = props => {\n  const character = useContext(Character);\n  function displayAbilities() {\n    const abilities = Object.values(\n      character.characterAbilities.active\n    ).map(s => <KnownActiveAbilities key={s} value={s} />);\n    return abilities;\n  }\n  return (\n    <div className=\"spellContainer\">\n      <div className=\"spellItems\">\n        <p className=\"spellList\">{displayAbilities()}</p>\n      </div>\n    </div>\n  );\n};\n\nexport default ActiveAbilities;\n","import React, { useContext } from \"react\";\nimport { Character, ToggleInfo, Selection } from \"./dnd.js\";\n\nconst SpellInfo = props => {\n  //bring in react context\n  const character = useContext(Character);\n  const [toggleInfo, setToggleInfo] = useContext(ToggleInfo);\n  const [selection] = useContext(Selection);\n  //edit string for render\n  const formattedSpell = selection.replace(/_/g, \" \");\n  function getSpellLevel(selection) {\n    let foundLevel = null;\n    Object.keys(character.magic.spells).forEach(level => {\n      if (Object.values(character.magic.spells[level]).includes(selection)) {\n        foundLevel = level;\n      }\n    });\n    return foundLevel;\n  }\n  return (\n    <div id=\"spellInfo\" className=\"infoSheet\">\n      <button id=\"useSpell\">Use Spell</button>\n      <button id=\"closeButton\" onClick={() => setToggleInfo(\"Off\")}>\n        x\n      </button>\n      <h3>{formattedSpell}</h3>\n      Level: {getSpellLevel(selection)}\n      <br />\n      Components:\n      <br />\n      Casting Time:\n      <br />\n      Range:\n      <br />\n      Target or Area:\n      <br />\n      Duration:\n      <br />\n      Saving Throw:\n      <br />\n      SpellResistance:\n      <br />\n    </div>\n  );\n};\n\nexport default SpellInfo;\n","import React, { useContext } from \"react\";\nimport {\n  ToggleInfo,\n  Character,\n  PrimaryModifier,\n  GetSetDisplayTwo,\n  totalSpells\n} from \"./dnd.js\";\n\nconst Spellbook = props => {\n  const [toggleInfo, setToggleInfo] = useContext(ToggleInfo);\n  const spell = props.value;\n  const formattedSpell = spell.replace(/_/g, \" \");\n  const buttonAndSpellClass = \"spellButtons \" + spell;\n  return (\n    <button\n      className={buttonAndSpellClass}\n      onClick={() => setToggleInfo(!toggleInfo)}\n    >\n      {formattedSpell}\n    </button>\n  );\n};\nconst PrepSpells = props => {\n  const character = useContext(Character);\n  const [primaryModifier] = useContext(PrimaryModifier);\n  const [displayTwo, setDisplayTwo] = useContext(GetSetDisplayTwo);\n  function casterType() {\n    if (character.magic.type.arcane && character.magic.type.divine) {\n      return \"Cantrips & Orisons\";\n    } else if (character.magic.type.divine) {\n      return \"Orisons\";\n    } else if (character.magic.type.arcane) {\n      return \"Cantrips\";\n    }\n  }\n  function displaySpells(level) {\n    const spells = Object.values(character.magic.spellbook[level]).map(s => (\n      <Spellbook key={s} value={s} />\n    ));\n    return spells;\n  }\n  function spellCodeBlock(level, levelNum, levelRoman) {\n    return (\n      <div className=\"spellItems\">\n        <div className=\"spellLevelWrapper\">\n          <h2 className=\"spellLevelHeader\">Level {levelRoman}</h2>\n          <em className=\"remainingSpells\">\n            {totalSpells(character, primaryModifier, level, levelNum)} remaining\n            today\n          </em>\n        </div>\n        <p className=\"spellList\">{displaySpells(level)}</p>\n        <hr />\n      </div>\n    );\n  }\n  return (\n    <>\n      <div>\n        <button id=\"returnToSpells\" onClick={() => setDisplayTwo(\"Spells\")}>\n          <i className=\"fas fa-arrow-left\"></i>\n        </button>\n        <div className=\"spellContainer\">\n          <div className=\"spellItems\">\n            <div className=\"spellLevelWrapper\">\n              <h2 id=\"levelZeroHeaderPrep\" className=\"spellLevelHeader\">\n                {casterType()}\n              </h2>\n              <em className=\"remainingSpells\">\n                {totalSpells(character, primaryModifier, \"zero\", 0)} remaining\n                today\n              </em>\n            </div>\n            <p className=\"spellList\">{displaySpells(\"zero\")}</p>\n            <hr />\n          </div>{\" \"}\n          {/*0*/}\n          {spellCodeBlock(\"one\", 1, \"I\")}\n          {spellCodeBlock(\"two\", 2, \"II\")}\n          {spellCodeBlock(\"three\", 3, \"III\")}\n          {spellCodeBlock(\"four\", 4, \"IV\")}\n          {spellCodeBlock(\"five\", 5, \"V\")}\n          {spellCodeBlock(\"six\", 6, \"VI\")}\n          {spellCodeBlock(\"seven\", 7, \"VII\")}\n          {spellCodeBlock(\"eight\", 8, \"VIII\")}\n          {spellCodeBlock(\"nine\", 9, \"IX\")}\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default PrepSpells;\n","import React, { useContext } from \"react\";\nimport {\n  Character,\n  ToggleInfo,\n  Selection,\n  GetSetDisplayTwo,\n  PrimaryModifier,\n  totalSpells\n} from \"./dnd.js\";\n\nconst KnownSpells = props => {\n  const [toggleInfo, setToggleInfo] = useContext(ToggleInfo);\n  const [selection, setSelection] = useContext(Selection);\n  const spell = props.value;\n  const formattedSpell = spell.replace(/_/g, \" \");\n  const buttonAndSpellClass = \"spellButtons \" + spell;\n  function displayInfo(spell) {\n    setToggleInfo(\"Spell\");\n    setSelection(spell);\n  }\n  return (\n    <button className={buttonAndSpellClass} onClick={() => displayInfo(spell)}>\n      {formattedSpell + \" \\u221e\"}\n    </button>\n  );\n};\nconst Spells = props => {\n  const character = useContext(Character);\n  const [primaryModifier] = useContext(PrimaryModifier);\n  const [displayTwo, setDisplayTwo] = useContext(GetSetDisplayTwo);\n  //cantrips or orisons? or both?\n  function casterType() {\n    if (character.magic.type.arcane && character.magic.type.divine) {\n      return \"Cantrips & Orisons\";\n    } else if (character.magic.type.divine) {\n      return \"Orisons\";\n    } else if (character.magic.type.arcane) {\n      return \"Cantrips\";\n    }\n  }\n  function displaySpells(level) {\n    const spells = Object.values(character.magic.spells[level]).map(s => (\n      <KnownSpells key={s} value={s} />\n    ));\n    return spells;\n  }\n  //condense spell block into function\n  function spellCodeBlock(level, levelNum, levelRoman) {\n    return (\n      <div className=\"spellItems\">\n        <div className=\"spellLevelWrapper\">\n          <h2 className=\"spellLevelHeader\">Level {levelRoman}</h2>\n          <em className=\"remainingSpells\">\n            {totalSpells(character, primaryModifier, level, levelNum)} remaining\n            today\n          </em>\n        </div>\n        <p className=\"spellList\">{displaySpells(level)}</p>\n        <hr />\n      </div>\n    );\n  }\n  return (\n    <div>\n      <button id=\"prepSpellsButton\" onClick={() => setDisplayTwo(\"Prep\")}>\n        <i className=\"fas fa-book\"></i>\n        <span>PREP</span>\n      </button>\n      <div className=\"spellContainer\">\n        <div className=\"spellItems\">\n          <div className=\"spellLevelWrapper\">\n            <h2 id=\"levelZeroHeader\" className=\"spellLevelHeader\">\n              {casterType()}\n            </h2>\n            <em className=\"remainingSpells\">\n              {totalSpells(character, primaryModifier, \"zero\", 0)} remaining\n              today\n            </em>\n          </div>\n          <p className=\"spellList\">{displaySpells(\"zero\")}</p>\n          <hr />\n        </div>\n        {spellCodeBlock(\"one\", 1, \"I\")}\n        {spellCodeBlock(\"two\", 2, \"II\")}\n        {spellCodeBlock(\"three\", 3, \"III\")}\n        {spellCodeBlock(\"four\", 4, \"IV\")}\n        {spellCodeBlock(\"five\", 5, \"V\")}\n        {spellCodeBlock(\"six\", 6, \"VI\")}\n        {spellCodeBlock(\"seven\", 7, \"VII\")}\n        {spellCodeBlock(\"eight\", 8, \"VIII\")}\n        {spellCodeBlock(\"nine\", 9, \"IX\")}\n      </div>\n    </div>\n  );\n};\n\nexport default Spells;\n","import React, { useState, useContext } from \"react\";\nimport { Character, ToggleInfo } from \"./dnd.js\";\n\nconst KnownPassiveAbilities = props => {\n  const [toggleInfo, setToggleInfo] = useState(false);\n  const ability = props.value;\n  const formattedAbility = ability.replace(/_/g, \" \");\n  const buttonAndSpellClass = \"spellButtons \" + ability;\n  return (\n    <button\n      className={buttonAndSpellClass}\n      onClick={() => setToggleInfo(!toggleInfo)}\n    >\n      {formattedAbility}\n    </button>\n  );\n};\nconst PassiveAbilities = props => {\n  const character = useContext(Character);\n  function displayAbilities() {\n    const abilities = Object.values(\n      character.characterAbilities.passive\n    ).map(s => <KnownPassiveAbilities key={s} value={s} />);\n    return abilities;\n  }\n  return (\n    <div className=\"spellContainer\">\n      <div className=\"spellItems\">\n        <p className=\"spellList\">{displayAbilities()}</p>\n      </div>\n    </div>\n  );\n};\n\nexport default PassiveAbilities;\n","import React, { useContext } from \"react\";\nimport { Character, ReadTossDice, abilityModifier, rollDice } from \"./dnd.js\";\n\nconst AbilityScores = props => {\n  const character = useContext(Character);\n  const str = character.abilities.score.strength;\n  const dex = character.abilities.score.dexterity;\n  const con = character.abilities.score.constitution;\n  const int = character.abilities.score.intelligence;\n  const wis = character.abilities.score.wisdom;\n  const cha = character.abilities.score.charisma;\n  const strMod = abilityModifier(character, \"strength\");\n  const dexMod = abilityModifier(character, \"dexterity\");\n  const conMod = abilityModifier(character, \"constitution\");\n  const intMod = abilityModifier(character, \"intelligence\");\n  const wisMod = abilityModifier(character, \"wisdom\");\n  const chaMod = abilityModifier(character, \"charisma\");\n\n  const [rollResult, setRollResult] = useContext(ReadTossDice);\n  function abilityScoreCodeBlock(abilityString, abilityScore, abilityMod) {\n    return (\n      <p className=\"abilityScores\">\n        {/*button appears on same line*/}\n        <button\n          className=\"rollAbility\"\n          onClick={() => setRollResult(rollDice(20, abilityMod, abilityString))}\n        >\n          roll\n        </button>\n        {abilityString}: {abilityScore} | {abilityMod}\n      </p>\n    );\n  }\n  return (\n    <div>\n      <div id=\"statsContainer\">\n        <h1 id=\"abilityScoresHeader\">Abilities</h1>\n        <div id=\"abilityScoresWrapper\">\n          {abilityScoreCodeBlock(\"STR\", str, strMod)}\n          {abilityScoreCodeBlock(\"DEX\", dex, dexMod)}\n          {abilityScoreCodeBlock(\"CON\", con, conMod)}\n          {abilityScoreCodeBlock(\"INT\", int, intMod)}\n          {abilityScoreCodeBlock(\"WIS\", wis, wisMod)}\n          {abilityScoreCodeBlock(\"CHA\", cha, chaMod)}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default AbilityScores;\n","import React, { useContext } from \"react\";\nimport { Character, ReadTossDice, rollDice } from \"./dnd.js\";\n\nconst SkillsListItem = props => {\n  const character = useContext(Character);\n  const [rollResult, setRollResult] = useContext(ReadTossDice);\n  // store props to make code simpler\n  const skills = props.skills;\n  // replace underscore with space and store\n  let formattedSkill = skills[0].replace(/_/g, \" \");\n  // update variable replacing (Know)ledge with :\n  formattedSkill = formattedSkill.replace(/ledge/g, \":\");\n  // store skill points separately\n  const skillPoints = skills[1];\n  // confirm class skill to add css class\n  function findClassSkills(skill) {\n    if (character.classSkills.hasOwnProperty(skill)) {\n      return \"classSkills\";\n    } else {\n      return \"\";\n    }\n  }\n  return (\n    <button\n      className={`skills ${findClassSkills(skills[0])} ${skills[0]}`}\n      onClick={() => setRollResult(rollDice(20, skillPoints, formattedSkill))}\n    >\n      {formattedSkill} | <span className=\"skillPoints\">{skillPoints}</span>\n    </button>\n  );\n};\nconst Skills = props => {\n  const character = useContext(Character);\n  //put character's skills into array as [key, value]\n  let skillsArray = Object.keys(character.skills).map(skill => {\n    return [skill, character.skills[skill]];\n  });\n  // put character's class skills into array as [key, value]\n  let classSkillsArray = Object.keys(character.classSkills).map(skill => {\n    return [skill, character.classSkills[skill]];\n  });\n  // combine both arrays into new array, sorted alphabetically\n  let allSkills = [...skillsArray, ...classSkillsArray].sort();\n  // pass skills to child component\n  const skillsBlock = allSkills.map(s => <SkillsListItem key={s} skills={s} />);\n  return (\n    <>\n      <h1 id=\"skillsHeader\">Skills</h1>\n      <ul id=\"skillsListWrapper\" style={{ listStyleType: \"none\" }}>\n        <div id=\"skillsWrapper\">{skillsBlock}</div>\n      </ul>\n    </>\n  );\n};\n\nexport default Skills;\n","import React, { useState, useContext } from \"react\";\n\nimport Items from \"./Items.js\";\nimport SLAs from \"./SLAs.js\";\nimport ActiveAbilities from \"./ActiveAbilities.js\";\nimport SpellInfo from \"./SpellInfo.js\";\nimport PrepSpells from \"./PrepSpells.js\";\nimport Spells from \"./Spells.js\";\nimport PassiveAbilities from \"./PassiveAbilities.js\";\nimport AbilityScores from \"./AbilityScores.js\";\nimport Skills from \"./Skills.js\";\n\nimport { ToggleInfo, GetSetDisplayTwo, Selection } from \"./dnd.js\";\n\nconst MainDisplay = props => {\n  const [toggleInfo, setToggleInfo] = useContext(ToggleInfo);\n  const [displayTwo] = useContext(GetSetDisplayTwo);\n  const [selection, setSelection] = useState(\"\");\n  function screenSwitch(display) {\n    switch (display) {\n      case \"Skills\":\n        return <Skills />;\n      case \"Scores\":\n        return <AbilityScores />;\n      case \"Passive\":\n        return <PassiveAbilities />;\n      case \"Spells\":\n        return <Spells />;\n      case \"Abilities\":\n        return <ActiveAbilities />;\n      case \"SLAs\":\n        return <SLAs />;\n      case \"Prep\":\n        return <PrepSpells />;\n      case \"Items\":\n        return <Items />;\n      default:\n        return <Skills />;\n    }\n  }\n  function infoSheet(toggleInfo) {\n    switch (toggleInfo) {\n      case \"Spell\":\n        return <SpellInfo />;\n      case \"Off\":\n        return null;\n      default:\n        return null;\n    }\n  }\n  return (\n    <div>\n      <Selection.Provider value={[selection, setSelection]}>\n        <div id=\"infoSheet\">{infoSheet(toggleInfo)}</div>\n        <div id=\"mainContent\">{screenSwitch(displayTwo)}</div>\n      </Selection.Provider>\n    </div>\n  );\n};\n\nexport default MainDisplay;\n","import React, { useState, useContext, useEffect } from \"react\";\nimport useSWR from \"swr\";\n\nimport * as Navbar from \"./Navbars.js\";\nimport BasicInfo from \"./BasicInfo.js\";\nimport MainDisplay from \"./MainDisplay.js\";\n\nimport \"./dnd.css\";\n\nexport function rollDice(size, mod, use) {\n  const dice = Math.floor(Math.random() * size + 1);\n  function edgeRollClassAssignment(dice) {\n    if (dice === 1) {\n      return \"natOne\";\n    } else if (dice === 20) {\n      return \"natTwenty\";\n    } else {\n      return null;\n    }\n  }\n  const result = (\n    <span>\n      <span id=\"rollUse\">{use}</span>\n      <div id=\"rollTopLine\">\n        <span id=\"rollTotal\" className={edgeRollClassAssignment(dice)}>\n          {dice}\n        </span>{\" \"}\n        <span id=\"modTotal\"> + {mod} =</span>\n      </div>\n      <p id=\"rollModTotal\">{dice + mod}</p>\n    </span>\n  );\n  return result;\n}\nexport const ReadTossDice = React.createContext(null);\nexport const GetSetDisplay = React.createContext(null);\nexport const GetSetDisplayTwo = React.createContext(null);\nexport const ToggleInfo = React.createContext(null);\nexport const Selection = React.createContext(null);\nexport const Character = React.createContext(null);\nexport const PrimaryModifier = React.createContext(null);\n/******************************Character functions****************************/\nexport function abilityModifier(character, ability) {\n  if (character.abilities.score[ability] === \"--\") {\n    return \"--\";\n  }\n  return Math.floor((character.abilities.score[ability] - 10) / 2);\n}\nexport function totalSpells(character, primaryModifier, level, levelNum) {\n  function bonusSpellsPerDay(levelNum) {\n    return Math.ceil((primaryModifier - (levelNum - 1)) / 4);\n  }\n  return character.magic.spellsPerDay[level] + bonusSpellsPerDay(levelNum);\n}\n/******************************Character functions****************************/\nconst App = props => {\n  const [display, setDisplay] = useState(\"stats\");\n  const [displayTwo, setDisplayTwo] = useState(\"Skills\");\n  const [toggleInfo, setToggleInfo] = useState(false);\n  const [rollResult, setRollResult] = useState(\n    \"Good luck,\\n\" + props.character.name\n  );\n  const [primaryModifier, setPrimaryModifier] = useState(\n    abilityModifier(props.character, \"charisma\")\n  );\n  useEffect(\n    function setDocTitle() {\n      document.title = props.character.name;\n    },\n    [props.character]\n  );\n  return (\n    <Character.Provider value={props.character}>\n      <div id=\"appWrapper\">\n        <div>\n          <div id=\"topWrapper\">\n            <ReadTossDice.Provider value={[rollResult, setRollResult]}>\n              <BasicInfo />\n            </ReadTossDice.Provider>\n            <Navbar.PrimaryNavbar\n              display={display}\n              setDisplay={setDisplay}\n              setDisplayTwo={setDisplayTwo}\n            />\n            <GetSetDisplayTwo.Provider value={[displayTwo, setDisplayTwo]}>\n              <Navbar.SecondaryNavbar display={display} />\n            </GetSetDisplayTwo.Provider>\n          </div>\n          <GetSetDisplay.Provider value={[display, setDisplay]}>\n            <GetSetDisplayTwo.Provider value={[displayTwo, setDisplayTwo]}>\n              <ToggleInfo.Provider value={[toggleInfo, setToggleInfo]}>\n                <ReadTossDice.Provider value={[rollResult, setRollResult]}>\n                  <PrimaryModifier.Provider\n                    value={[primaryModifier, setPrimaryModifier]}\n                  >\n                    <MainDisplay />\n                  </PrimaryModifier.Provider>\n                </ReadTossDice.Provider>\n              </ToggleInfo.Provider>\n            </GetSetDisplayTwo.Provider>\n          </GetSetDisplay.Provider>\n          <div id=\"bottomSpacer\"></div>\n        </div>\n      </div>\n    </Character.Provider>\n  );\n};\n\nconst LoadApp = () => {\n  // Load data from the characters server endpoint\n  const { data } = useSWR(\"/api/characters\");\n\n  // Before the data is loaded, it will be `undefined`\n  return data ? <App character={data.characters[0]} /> : <>Loading...</>;\n};\n\nexport default LoadApp;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import Arn from './Arn_Hachem'\n\nexport default [Arn]","export default {\n  name: 'Arn Hachem',\n  type: ['Human', 'Sanctified', 'Deathless', 'Spellstitched', 'Archlich'],\n  hitPoints: {\n    dieSize: 12,\n    total: 255,\n    damage: 0,\n    temporaryHitPoints: 0,\n  },\n  armorClass: {\n    ac: {\n      total: 37,\n      armor: 6,\n      shield: 0,\n      dexterity: 12,\n      size: 0,\n      naturalArmor: 5,\n      deflection: 4,\n      misc: 0\n    },\n    touch: 22,\n    flatFooted: 23\n  },\n  size: 'Medium',\n  alignment: 'Lawful-Good',\n  abilities: {\n    score: {\n      strength: 18,\n      dexterity: 24,\n      constitution: '--',\n      intelligence: 22,\n      wisdom: 17,\n      charisma: 35\n    },\n  },\n  speed: 30,\n  level: '20',\n  class: ['Sorcerer(1)', 'Mindtender(2)', 'Fleshwarper(2)', 'Malconvoker(7)', 'Binder(1)', 'Bard(1)', 'Master Of Masks(5)'],\n  skills: {\n    Balance: 12,\n    Climb: 4,\n    Concentration: 27,\n    Craft_Tailor: 13,\n    Escape_Artist: 12,\n    Hide: 25,\n    Jump: 4,\n    Listen: 4,\n    Move_Silently: 12,\n    Ride: 12,\n    Search: 6,\n    Spot: 4,\n    Survival: 4,\n    Swim: 12,\n    Use_Rope: 12,\n  },\n  classSkills: {\n    Appraise: 10,\n    Bluff: 41,\n    Decipher_Script: 23,\n    Diplomacy: 18,\n    Diguise: 39,\n    Forgery: 6,\n    Gather_Information: 9,\n    Heal: 16,\n    Intimidate: 19,\n    Knowledge_Arcana: 26,\n    Knowledge_Dungeoneering: 14,\n    Knowledge_Religion: 16,\n    Knowledge_Planes: 8,\n    Perception: 19,\n    Perform_Acting: 36,\n    Perform_Dancing: 13,\n    SenseMotive: 21,\n    Spellcraft: 28,\n    Stealth: 28,\n    Use_Magic_Device: 12,\n  },\n  characterAbilities: {\n    active: ['Light_Ray', 'Paralyzing_Touch', 'Positive_Energy_Touch', 'Turn_Undead'\n    ],\n    passive: ['Aura_Of_Menace'],\n  },\n  magic: {\n    slas: {\n      zero: '',\n      one: ['Chill_Touch', 'Floating_Disk'],\n      two: ['Command_Undead', 'Acid_Arrow'],\n      three: ['Vampiric_Touch', 'Phantom_Steed'],\n      four: ['Affliction', 'Enervation'],\n      five: ['Mage\\'s_Faithful_Hound', 'Wall_Of_Force'],\n      six: ['Contingency'],\n      seven: '',\n      eight: '',\n      nine: '',\n    },\n    spellcaster: true,\n    type: {\n      arcane: true,\n      divine: false,\n    },\n    spells: {\n      zero: ['Mending', 'Arcane_Mark', 'Ghost_Sound', 'Detect_Magic', 'Mage_Hand', 'Message', 'Light', 'Read Magic', 'Acid_Splash', 'Lullaby', 'Know_Direction', 'Open/Close', 'Prestidigitation'],\n      one: ['Silent_Image', 'Disguise_Self', 'Magic_Missile', 'Mage_Armor', 'Charm_Person'],\n      two: ['Ghoul_Touch', 'Arcane_Lock', 'Knock', 'Alter_Fortune', 'Scorching_Ray'],\n      three: ['Shrink_Item', 'Tiny_Hut', 'Ray_Of_Exhaustion', 'Explosive_Runes'],\n      four: ['Resilient_Sphere', 'Create_Fetch', 'Dimension_Door', 'Polymorph'],\n      five: ['Telekinesis', 'Sending', 'Passwall', 'Planar_Binding,_Lesser', 'Feeblemind'],\n      six: ['Disintigrate', 'Freezing_Sphere', 'Planar_Binding', 'Permanent_Image'],\n      seven: ['Teleport_Object', 'Stun_Ray', 'Waves_Of_Exhaustion'],\n      eight: ['Polymorph_Any_Object', 'Horrid_Wilting', 'Planar_Binding,_Greater', 'Last_Judgment'],\n      nine: ['Replicate_Casting', 'Sphere_Of_Ultimate_Destruction', 'Crushing_Hand']\n    },\n    spellbook: {\n      zero: ['Arcane_Mark', 'Prestidigitation', 'Mage_Hand', 'Resistance', 'Disrupt Undead', 'Touch_Of_Fatigue', 'Mending', 'Message', 'Open/Close', 'Preserve_Organ', 'No-Light', 'Slash_Tongue', 'Silent_Portal'],\n      one: ['a'],\n      two: ['a'],\n      three: ['a'],\n      four: ['a'],\n      five: ['a'],\n      six: ['a'],\n      seven: ['a'],\n      eight: ['a'],\n      nine: ['a'],\n    },\n    spellsPerDay: {\n      zero: 8,\n      one: 6,\n      two: 6,\n      three: 6,\n      four: 6,\n      five: 6,\n      six: 6,\n      seven: 6,\n      eight: 6,\n      nine: 6,\n    },\n  },\n  items: [\n    'Mesmerist\\'s_Gloves', 'Nolzure\\'s_Orb', 'Vanisher_Cloak', 'GateBreaker_Ballista_Bolt'\n  ],\n}\n","import { Server, Model, RestSerializer } from \"miragejs\"\nimport characters from './characters'\n\nexport function makeServer({ environment = \"test\" } = {}) {\n  let server = new Server({\n    environment,\n\n    models: {\n      character: Model,\n    },\n\n    serializers: {\n      application: RestSerializer\n    },\n\n    seeds(server) {\n      // set up all the starting data\n      characters.forEach(char => server.create(\"character\", char))\n    },\n\n    routes() {\n      this.namespace = \"api\"\n\n      // Here is where you add the server endpoints for your app:\n\n      this.get(\"/characters\", (schema) => {\n        return schema.characters.all()\n      })\n    },\n  })\n\n  return server\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {SWRConfig} from 'swr';\nimport './components/dnd.css';\nimport App from './components/dnd';\nimport * as serviceWorker from './serviceWorker';\nimport { makeServer } from \"./server\"\n\n// Whenever it is time for a real server, this should be removed.\nmakeServer({ environment: \"development\" })\n\nReactDOM.render(\n  <React.StrictMode>\n    <SWRConfig\n      value={{\n        fetcher: (...args) => fetch(...args).then(res => res.json())\n      }}\n    >\n      <App />\n    </SWRConfig>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}